#!bash -eu
set -o pipefail
if [ "${GUP_XTRACE:-0}" = 1 ]; then
	set -x
fi

root=../../../../
git_meta="$root/.git"
gup -u "$root/VERSION"
if [ -e $git_meta ]; then
	gup -u $git_meta/HEAD
	head_ref="$(cat $git_meta/HEAD | grep -o 'refs/heads/.*' || true)"
	if [ -n "$head_ref" ]; then
		gup -u $git_meta/$head_ref
	fi
	commit="Some \"$(git rev-parse HEAD | cut -c -10)\""
else
	gup --ifcreate $git_meta
	commit="None"
fi

cat >"$1" <<EOF
module type Sig = sig
	val version : string
	val pretty : unit -> string
end
module Make(Re:Re_ext.Sig) = struct
	let version="$(cat "$root/VERSION")"
	let commit = $commit
	let parse v =
		let dot = Re.(regexp_string ".") in
		let v =
			try String.sub v 0 (String.rindex v '-')
			with Not_found -> v in
		let parts = Re.(split dot v) in
		let parts = List.map int_of_string parts in
		match parts with
			| maj :: min :: patch :: _ -> (maj, min, patch)
			| _ -> Error.raise_assert ("unparseable version: " ^ v)

	let minor (maj, min, _patch) = (maj, min)

	let pretty () = match commit with
		| Some c -> version ^ "-" ^ c
		| None -> version
end
EOF

gup --contents "$1"
