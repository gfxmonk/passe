#!bash -eu

here="$(dirname "$0")"
. "$here/env.sh"

builddir="$(dirname "$2")"
obj="$builddir/main.native.o"

if pkg-config --print-errors --exists mirage-xen 2>/dev/null; then
	echo "Using global PKGCONFIG"
else
	export PKG_CONFIG_PATH="$(opam config var prefix)/lib/pkgconfig"
fi

# XXX this is a bit nuts
gup -u "$obj" "../src/$compile_mode/build_env.sh"
. "../src/$compile_mode/build_env.sh"

# extracted from `mirage configure` makefile
pkg-config --print-errors --exists mirage-xen
LIB_DIRS="$(ocamlfind query -r $(echo $PASSE_PKGS | tr , ' '))"
[ -n "$LIB_DIRS" ]
OCAML_ROOT="$(ocamlc -where)"
[ -n "$OCAML_ROOT" ]

LD_FLAGS="$(echo -e "$LIB_DIRS\n$OCAML_ROOT" | sed -e 's/^/-L /') $PASSE_LDFLAGS"

# XXX can't seem to get this information into mirage's build system,
# even with `add_to_ocamlfind_libraries` - it may require changes to META files?
LD_FLAGS="$LD_FLAGS \
		-lnums \
		-lsha256 \
		-lzarith-xen \
		-lsafepass_stubs \
"

# set -x
ld -d -static -nostdlib \
	"$obj" \
	$LD_FLAGS \
	-L "$builddir/src" \
	$(pkg-config --static --libs mirage-xen gmp-xen) \
	$(gcc -print-libgcc-file-name) \
	-o "$1"

