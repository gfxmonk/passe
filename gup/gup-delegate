#!/usr/bin/env python
from __future__ import print_function
import os,sys,subprocess

TRACE = os.environ.get('GUP_XTRACE','0') == '1'

def run(cmd):
	if TRACE:
		print(' + ' + ' '.join(cmd))
	try:
		subprocess.check_call(cmd)
	except (subprocess.CalledProcessError, KeyboardInterrupt):
		sys.exit(1)

dest, target = sys.argv[1:]
def jbuilder(*targets):
	return lambda: (
		run(['jbuilder', 'build'] + list(targets))
	)

def gup(*targets):
	return lambda: (
		run(['gup', '-u'] + list(targets))
	)

mapping = {
	'client': jbuilder('src/bin/client.exe'),
	'server': jbuilder('src/bin/server.exe'),
	'native': gup('client', 'server'),
	'js': jbuilder('@src/www/main.bc.js'),
	'www': jbuilder('@src/www/all'),
	'passe.install': jbuilder('passe.install'),
	'res': gup('_build/res/all'),
	'mirage-unix': gup('_build/mirage-unix'),
	'mirage-ukvm': gup('_build/mirage-ukvm'),
}

action = mapping[target]
subprocess.check_call(['gup','--always'])
action()
