### This file is generated by opam2nix.

self:
let
    lib = self.lib;
    pkgs = self.pkgs;
    repoPath = self.repoPath;
    repos = 
    {
      opam-repository = 
      rec {
        fetch = 
        {
          owner = "ocaml";
          repo = "opam-repository";
          rev = "54b0223dcacb6311aa12f5342c34e1be684a79a3";
          sha256 = "19j0q1c83n4271s04kh7v7vkkssqcz4rx7kf90ry6gh5x8j7k8rb";
        };
        src = (pkgs.fetchFromGitHub) fetch;
      };
    };
    selection = self.selection;
in
{
  format-version = 4;
  ocaml-version = "4.08.1";
  repos = repos;
  selection = 
  {
    asn1-combinators = 
    {
      opamInputs = 
      {
        bigarray-compat = selection.bigarray-compat;
        cstruct = selection.cstruct;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ptime = selection.ptime;
        stdlib-shims = selection.stdlib-shims;
        zarith = selection.zarith;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1bvkzph2gpzq8c94b0blgg8kgkqj9rg9s1zhxjbd2nbz9i4k5k29";
        package = "packages/asn1-combinators/asn1-combinators.0.2.2";
      };
      pname = "asn1-combinators";
      src = pkgs.fetchurl 
      {
        sha256 = "0c9n3nki3drjwn7yv2pg7nzyzsi409laq70830wh147hvvwxbsy9";
        url = "https://github.com/mirleft/ocaml-asn1-combinators/releases/download/v0.2.2/asn1-combinators-v0.2.2.tbz";
      };
      version = "0.2.2";
    };
    astring = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1djnad9sq12idlakj069xvwm2nn7wqm137pqbxxai5frkgi08x74";
        package = "packages/astring/astring.0.8.5";
      };
      pname = "astring";
      src = pkgs.fetchurl 
      {
        sha256 = "1ykhg9gd3iy7zsgyiy2p9b1wkpqg9irw5pvcqs3sphq71iir4ml6";
        url = "https://erratique.ch/software/astring/releases/astring-0.8.5.tbz";
      };
      version = "0.8.5";
    };
    base = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0b0nwyysxhnvj8p1l1rccn0g078i5b9kvwk8p8cchzfnklp6lr4z";
        package = "packages/base/base.v0.13.2";
      };
      pname = "base";
      src = pkgs.fetchurl 
      {
        sha256 = "0nndylkdwkndg4b6bb7g5iix2cbjxaiwnybpr4c88cpc8qd7cpgw";
        url = "https://github.com/janestreet/base/archive/v0.13.2.tar.gz";
      };
      version = "v0.13.2";
    };
    base-bigarray = 
    {
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1hgfwxh4vdv21m2a4g506y27pcv912v67qi4svrn53rgc43ckv6b";
        package = "packages/base-bigarray/base-bigarray.base";
      };
      pname = "base-bigarray";
      src = null;
      version = "base";
    };
    base-bytes = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0a68lmbf68jgm1i3b59j2sc3ha9yhv4678f9mfwwvczw88prq7l3";
        package = "packages/base-bytes/base-bytes.base";
      };
      pname = "base-bytes";
      src = null;
      version = "base";
    };
    base-threads = 
    {
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1c4bpyh61ampjgk5yh3inrgcpf1z1xv0pshn54ycmpn4dyzv0p2x";
        package = "packages/base-threads/base-threads.base";
      };
      pname = "base-threads";
      src = null;
      version = "base";
    };
    base-unix = 
    {
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0mpsvb7684g723ylngryh15aqxg3blb7hgmq2fsqjyppr36iyzwg";
        package = "packages/base-unix/base-unix.base";
      };
      pname = "base-unix";
      src = null;
      version = "base";
    };
    base64 = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        dune = selection.dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0jdxc8c4njs6k5qsd7rc5ipnlylz92w2lxzf50ckj0jmws0pmr6j";
        package = "packages/base64/base64.2.3.0";
      };
      pname = "base64";
      src = pkgs.fetchurl 
      {
        sha256 = "17dy2mgd8qbjlf0mzxbf0cg2gwy7w2lfxanvpg1s17jxssy1ghks";
        url = "https://github.com/mirage/ocaml-base64/releases/download/v2.3.0/base64-v2.3.0.tbz";
      };
      version = "2.3.0";
    };
    bigarray-compat = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0lbmlg7kqy0bvca7v5qib69ayiryy5hlkzhzfg7qwq9n29aygc97";
        package = "packages/bigarray-compat/bigarray-compat.1.0.0";
      };
      pname = "bigarray-compat";
      src = pkgs.fetchurl 
      {
        sha256 = "1bpmmnxb1yx72aqlbdaqfl18rgz1cq9cf6cqvnfl88mz5dfr4x0d";
        url = "https://github.com/mirage/bigarray-compat/archive/v1.0.0.tar.gz";
      };
      version = "1.0.0";
    };
    biniou = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        easy-format = selection.easy-format;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:12ykyqa9piw1gny1flsi43qph411alzsm3rr8cgs5ap4drk3xbrd";
        package = "packages/biniou/biniou.1.2.1";
      };
      pname = "biniou";
      src = pkgs.fetchurl 
      {
        sha256 = "0da3m0g0dhl02jfynrbysjh070xk2z6rxcx34xnqx6ljn5l6qm1m";
        url = "https://github.com/mjambon/biniou/releases/download/1.2.1/biniou-1.2.1.tbz";
      };
      version = "1.2.1";
    };
    bos = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        base-unix = selection.base-unix;
        fmt = selection.fmt;
        fpath = selection.fpath;
        logs = selection.logs;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        rresult = selection.rresult;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:076a3ppiizh20fj0mg0xsprshzpdv3j1avfpsxpzaxzh72fchpch";
        package = "packages/bos/bos.0.2.0";
      };
      pname = "bos";
      src = pkgs.fetchurl 
      {
        sha256 = "1s10iqx8rgnxr5n93lf4blwirjf8nlm272yg5sipr7lsr35v49wc";
        url = "http://erratique.ch/software/bos/releases/bos-0.2.0.tbz";
      };
      version = "0.2.0";
    };
    camomile = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1nn4pgjqqf2xar53fx5f7rwagd9kim2qy21db94rxn7kw1z04ih4";
        package = "packages/camomile/camomile.1.0.2";
      };
      pname = "camomile";
      src = pkgs.fetchurl 
      {
        sha256 = "0chn7ldqb3wyf95yhmsxxq65cif56smgz1mhhc7m0dpwmyq1k97h";
        url = "https://github.com/yoriyuki/Camomile/releases/download/1.0.2/camomile-1.0.2.tbz";
      };
      version = "1.0.2";
    };
    charInfo_width = 
    {
      opamInputs = 
      {
        camomile = selection.camomile;
        dune = selection.dune;
        ocaml = selection.ocaml;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1llh67ns94c9jn1mki2crs0r4ny0v249q7anj0phb8dijda6jd89";
        package = "packages/charInfo_width/charInfo_width.1.1.0";
      };
      pname = "charInfo_width";
      src = pkgs.fetchurl 
      {
        sha256 = "0wl1hcwbx2mmgbhwh1wwgjixvppjq0k43nqyq13xm4pvgdxfvci1";
        url = "https://github.com/kandu/charInfo_width/archive/1.1.0.tar.gz";
      };
      version = "1.1.0";
    };
    cmdliner = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:05qlm4yp6124w2z10dpdchldfrmgmcr6h31rnxp8qs8mk0xzx48z";
        package = "packages/cmdliner/cmdliner.1.0.4";
      };
      pname = "cmdliner";
      src = pkgs.fetchurl 
      {
        sha256 = "1h04q0zkasd0mw64ggh4y58lgzkhg6yhzy60lab8k8zq9ba96ajw";
        url = "http://erratique.ch/software/cmdliner/releases/cmdliner-1.0.4.tbz";
      };
      version = "1.0.4";
    };
    cohttp = 
    {
      opamInputs = 
      {
        base64 = selection.base64;
        dune = selection.dune;
        fieldslib = selection.fieldslib;
        jsonm = selection.jsonm;
        ocaml = selection.ocaml;
        ppx_fields_conv = selection.ppx_fields_conv;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        re = selection.re;
        sexplib0 = selection.sexplib0;
        stringext = selection.stringext;
        uri = selection.uri;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0hgc9hn3yzpkwavg21420n14ggwr9c69309nv4h5qff44rz1ppq5";
        package = "packages/cohttp/cohttp.1.2.0";
      };
      pname = "cohttp";
      src = pkgs.fetchurl 
      {
        sha256 = "0hm9v92d94k25xv6wlgp4fnwy2iahvxac6w8ak5cargb59jsaw9z";
        url = "https://github.com/mirage/ocaml-cohttp/releases/download/v1.2.0/cohttp-v1.2.0.tbz";
      };
      version = "1.2.0";
    };
    cohttp-lwt = 
    {
      opamInputs = 
      {
        cohttp = selection.cohttp;
        dune = selection.dune;
        logs = selection.logs;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1nykf0p2m2vdnghb2wgbrsyy5s0gymwi7163l5rc7hlw647bj09h";
        package = "packages/cohttp-lwt/cohttp-lwt.2.1.3";
      };
      pname = "cohttp-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "1xzgnn7p7pzwf1qaljwyxj04lkq4lc9g0fgbpwwc4m7lvc4x77bd";
        url = "https://github.com/mirage/ocaml-cohttp/releases/download/v2.1.3/cohttp-v2.1.3.tbz";
      };
      version = "2.1.3";
    };
    cohttp-lwt-unix = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        cmdliner = selection.cmdliner;
        cohttp-lwt = selection.cohttp-lwt;
        conduit-lwt-unix = selection.conduit-lwt-unix;
        dune = selection.dune;
        fmt = selection.fmt;
        logs = selection.logs;
        lwt = selection.lwt;
        magic-mime = selection.magic-mime;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0aa81q7npysji9lv3wf14gcl01szjl2dazrsyqx7pflm15ljs8jz";
        package = "packages/cohttp-lwt-unix/cohttp-lwt-unix.2.1.3";
      };
      pname = "cohttp-lwt-unix";
      src = pkgs.fetchurl 
      {
        sha256 = "1xzgnn7p7pzwf1qaljwyxj04lkq4lc9g0fgbpwwc4m7lvc4x77bd";
        url = "https://github.com/mirage/ocaml-cohttp/releases/download/v2.1.3/cohttp-v2.1.3.tbz";
      };
      version = "2.1.3";
    };
    conduit = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        dune = selection.dune;
        ipaddr = selection.ipaddr;
        logs = selection.logs;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        result = selection.result;
        sexplib = selection.sexplib;
        uri = selection.uri;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:048h3g1q525dam5rkkycmxhgzvgxil3bx2d1xwr18gacxihq32g7";
        package = "packages/conduit/conduit.1.4.0";
      };
      pname = "conduit";
      src = pkgs.fetchurl 
      {
        sha256 = "01hjypx2a9my10h7cy79aaavkf08ar58gfk2b2zjy9dwzx7f9qcd";
        url = "https://github.com/mirage/ocaml-conduit/releases/download/v1.4.0/conduit-v1.4.0.tbz";
      };
      version = "1.4.0";
    };
    conduit-lwt = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        conduit = selection.conduit;
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        sexplib = selection.sexplib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1x26kh77mn1ijvh8lalnw0b7dn74nzyzmglvfk5g6pal72iz37qf";
        package = "packages/conduit-lwt/conduit-lwt.1.4.0";
      };
      pname = "conduit-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "01hjypx2a9my10h7cy79aaavkf08ar58gfk2b2zjy9dwzx7f9qcd";
        url = "https://github.com/mirage/ocaml-conduit/releases/download/v1.4.0/conduit-v1.4.0.tbz";
      };
      version = "1.4.0";
    };
    conduit-lwt-unix = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        conduit-lwt = selection.conduit-lwt;
        dune = selection.dune;
        ipaddr = selection.ipaddr;
        launchd = selection.launchd or null;
        lwt = selection.lwt;
        lwt_ssl = selection.lwt_ssl or null;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        tls = selection.tls or null;
        uri = selection.uri;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:12n90igrmg8v63mfaha848l7537z7b6j60i0fcq91y4sgdhr1inr";
        package = "packages/conduit-lwt-unix/conduit-lwt-unix.1.4.0";
      };
      pname = "conduit-lwt-unix";
      src = pkgs.fetchurl 
      {
        sha256 = "01hjypx2a9my10h7cy79aaavkf08ar58gfk2b2zjy9dwzx7f9qcd";
        url = "https://github.com/mirage/ocaml-conduit/releases/download/v1.4.0/conduit-v1.4.0.tbz";
      };
      version = "1.4.0";
    };
    conf-autoconf = 
    {
      buildInputs = [ (pkgs.autoconf) ];
      opamInputs = {
                     conf-which = selection.conf-which;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0673l2awx2cd57hqf07vrhpf2c4kn6xlgc85sdbz2k1n5flh77gs";
        package = "packages/conf-autoconf/conf-autoconf.0.1";
      };
      pname = "conf-autoconf";
      src = null;
      version = "0.1";
    };
    conf-git = 
    {
      buildInputs = [ (pkgs.git) ];
      opamInputs = {
                     conf-which = selection.conf-which;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:118r64z1qzba40ryqjhwh4sf9g3hc6fkjjawwbn3y32kjbbhymff";
        package = "packages/conf-git/conf-git.1.0";
      };
      pname = "conf-git";
      src = null;
      version = "1.0";
    };
    conf-gmp = 
    {
      buildInputs = [ (pkgs.gmp or null) (pkgs.gmp-dev or null)
                       (pkgs.gmp-devel or null) (pkgs.libgmp-dev or null) ];
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1ppipsx52lrbfp9yk8kj2rlvw6drk9mslrv1s9mhpxbz6ww8hp0c";
        package = "packages/conf-gmp/conf-gmp.2";
      };
      pname = "conf-gmp";
      src = null;
      version = "2";
    };
    conf-m4 = 
    {
      buildInputs = [ (pkgs.m4) ];
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1jlhg718lz35jyr5w0sgvg5ycplhnd8653rc4980yci8p3z1vlxs";
        package = "packages/conf-m4/conf-m4.1";
      };
      pname = "conf-m4";
      src = null;
      version = "1";
    };
    conf-perl = 
    {
      buildInputs = [ (pkgs.perl) ];
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1w4gn91js0fmai0gp87x190cdpn86r8bw676xq7bs7zvx14c2may";
        package = "packages/conf-perl/conf-perl.1";
      };
      pname = "conf-perl";
      src = null;
      version = "1";
    };
    conf-python-2-7 = 
    {
      buildInputs = [ (pkgs.python27) ];
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1n275wxg3zjcv8y51djxnwg4kzpzgvlynsjcig6pilbd0lqa3s5x";
        package = "packages/conf-python-2-7/conf-python-2-7.1.1";
      };
      pname = "conf-python-2-7";
      src = null;
      version = "1.1";
    };
    conf-python-3 = 
    {
      buildInputs = [ (pkgs.python3) ];
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0wgv2ha39p4p19d9x0456jcl6c2v4y0v27g06v5sz6h9d6y80cgq";
        package = "packages/conf-python-3/conf-python-3.1.0.0";
      };
      pname = "conf-python-3";
      src = null;
      version = "1.0.0";
    };
    conf-which = 
    {
      buildInputs = [ (pkgs.which) ];
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:03bz5rr206lv364q1k8rd6dkjkp8w6sjf1hbvz7svp46nf0kc7ps";
        package = "packages/conf-which/conf-which.1";
      };
      pname = "conf-which";
      src = null;
      version = "1";
    };
    configurator = 
    {
      opamInputs = 
      {
        base = selection.base;
        jbuilder = selection.jbuilder;
        ocaml = selection.ocaml;
        stdio = selection.stdio;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1m5rfkmxvzvkx74gqlwj22p7qzqh505vlvxajaxcliih2c18b0my";
        package = "packages/configurator/configurator.v0.11.0";
      };
      pname = "configurator";
      src = pkgs.fetchurl 
      {
        sha256 = "0kwgi3sh92v4n242dk5hgpwd85zzgnczgbkqi0q0kr6m93zgbf7p";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.11/files/configurator-v0.11.0.tar.gz";
      };
      version = "v0.11.0";
    };
    cppo = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0hdl429cpb4bg9gc07rxs14p7d3r3nfi3vw6s38c6xhf412nl611";
        package = "packages/cppo/cppo.1.6.6";
      };
      pname = "cppo";
      src = pkgs.fetchurl 
      {
        sha256 = "185q0x54id7pfc6rkbjscav8sjkrg78fz65rgfw7b4bqlyb2j9z7";
        url = "https://github.com/ocaml-community/cppo/releases/download/v1.6.6/cppo-v1.6.6.tbz";
      };
      version = "1.6.6";
    };
    cpuid = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1k2l7zn9dgyyg7h2x45xbq04hsq4700hmibzyif8l2pkil6lqkdy";
        package = "packages/cpuid/cpuid.0.1.2";
      };
      pname = "cpuid";
      src = pkgs.fetchurl 
      {
        sha256 = "08ng4mva6qblb5ipkrxbr0my7ndkc4qwcbswkqgbgir864s74m93";
        url = "https://github.com/pqwy/cpuid/releases/download/v0.1.2/cpuid-v0.1.2.tbz";
      };
      version = "0.1.2";
    };
    cstruct = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        sexplib = selection.sexplib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0x972rb7729ihijf50igqr4vvz7k9sqkby9ih1x7d2lbbysjzlms";
        package = "packages/cstruct/cstruct.3.7.0";
      };
      pname = "cstruct";
      src = pkgs.fetchurl 
      {
        sha256 = "0c6kw3dqx7skrc2v883f2slq1javbcmw173vlmsbygkk4y3m0d2c";
        url = "https://github.com/mirage/ocaml-cstruct/releases/download/v3.7.0/cstruct-v3.7.0.tbz";
      };
      version = "3.7.0";
    };
    cstruct-lwt = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        cstruct = selection.cstruct;
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0if6405mvd52208biinqf202pxa154j8f2a1cmjrnh9ikmxpvhlq";
        package = "packages/cstruct-lwt/cstruct-lwt.3.7.0";
      };
      pname = "cstruct-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0c6kw3dqx7skrc2v883f2slq1javbcmw173vlmsbygkk4y3m0d2c";
        url = "https://github.com/mirage/ocaml-cstruct/releases/download/v3.7.0/cstruct-v3.7.0.tbz";
      };
      version = "3.7.0";
    };
    dns = 
    {
      opamInputs = 
      {
        base64 = selection.base64;
        cstruct = selection.cstruct;
        domain-name = selection.domain-name;
        dune = selection.dune;
        hashcons = selection.hashcons;
        ipaddr = selection.ipaddr;
        ocaml = selection.ocaml;
        ppx_cstruct = selection.ppx_cstruct;
        re = selection.re;
        result = selection.result;
        uri = selection.uri;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1qndxrrbd4vmvyq97mzyc53n2zwkc4llysbnhlhgsj2f98w83zkg";
        package = "packages/dns/dns.1.1.0";
      };
      pname = "dns";
      src = pkgs.fetchurl 
      {
        sha256 = "052bv8ry89x0glmwsjabmj6fh5cg2fp1zazzwwvv286f8wb4qnvj";
        url = "https://github.com/mirage/ocaml-dns/releases/download/v1.1.0/dns-v1.1.0.tbz";
      };
      version = "1.1.0";
    };
    dns-lwt = 
    {
      opamInputs = 
      {
        dns = selection.dns;
        dune = selection.dune;
        lwt = selection.lwt;
        mirage-profile = selection.mirage-profile;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0144q0gzilklqg7zgxm6kr21xn4in6lpvj1mpx9n3vs6i872k5yc";
        package = "packages/dns-lwt/dns-lwt.1.1.1";
      };
      pname = "dns-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "08fhpax0khca1l7r79d03k938zi18szgv0cpla9n1bxcr993yjbm";
        url = "https://github.com/mirage/ocaml-dns/releases/download/v1.1.1/dns-v1.1.1.tbz";
      };
      version = "1.1.1";
    };
    dns-lwt-unix = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        cmdliner = selection.cmdliner;
        dns-lwt = selection.dns-lwt;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1gbdcavbq96835ayb7ynzjcsapp6vj99py6s7i17hd2yhqa9i8lw";
        package = "packages/dns-lwt-unix/dns-lwt-unix.1.1.1";
      };
      pname = "dns-lwt-unix";
      src = pkgs.fetchurl 
      {
        sha256 = "08fhpax0khca1l7r79d03k938zi18szgv0cpla9n1bxcr993yjbm";
        url = "https://github.com/mirage/ocaml-dns/releases/download/v1.1.1/dns-v1.1.1.tbz";
      };
      version = "1.1.1";
    };
    domain-name = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        dune = selection.dune;
        fmt = selection.fmt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0jhbwf6p603dilswakk76m1gwbkkri1z7dgm2r33lp4i2yix9171";
        package = "packages/domain-name/domain-name.0.2.1";
      };
      pname = "domain-name";
      src = pkgs.fetchurl 
      {
        sha256 = "1mm1ywmggc2bvbpm1xmnxpmymys91nysslfilzvmf4jar4ywhvmq";
        url = "https://github.com/hannesm/domain-name/releases/download/v0.2.1/domain-name-v0.2.1.tbz";
      };
      version = "0.2.1";
    };
    dune = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads;
        base-unix = selection.base-unix;
        ocaml = selection.ocaml or null;
        ocamlfind-secondary = selection.ocamlfind-secondary or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0xl07c5sr54aq45a3xszns1rg5ml5ap4m2gc0g0jf82y4yh1ly95";
        package = "packages/dune/dune.2.7.1";
      };
      pname = "dune";
      src = pkgs.fetchurl 
      {
        sha256 = "0pcjf209gynjwipnpplaqyvyivnawqiwhvqnivhkybisicpqyln3";
        url = "https://github.com/ocaml/dune/releases/download/2.7.1/dune-2.7.1.tbz";
      };
      version = "2.7.1";
    };
    dune-configurator = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1q6k63x2bajlc6lrv4llic3cbhzpw5pys44p7ds907620hx8fgs9";
        package = "packages/dune-configurator/dune-configurator.2.7.0";
      };
      pname = "dune-configurator";
      src = pkgs.fetchurl 
      {
        sha256 = "058wiyncczbmlfxj3cnwn5n68wkmbaf4mgjm2bkp2hffpn2wl5xl";
        url = "https://github.com/ocaml/dune/releases/download/2.7.0/dune-2.7.0.tbz";
      };
      version = "2.7.0";
    };
    duration = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1ki5q3czl28bj1xdc0fw7h7qw7fxk9n3az2za12521z56yxlgfiq";
        package = "packages/duration/duration.0.1.3";
      };
      pname = "duration";
      src = pkgs.fetchurl 
      {
        sha256 = "0m9r0ayhpl98g9vdxrbjdcllns274jilic5v8xj1x7dphw21p95h";
        url = "https://github.com/hannesm/duration/releases/download/0.1.3/duration-0.1.3.tbz";
      };
      version = "0.1.3";
    };
    easy-format = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1zahpwp0021xygbwpygrrwa5g65qq6dfqngckb3823ybc6l79lva";
        package = "packages/easy-format/easy-format.1.3.2";
      };
      pname = "easy-format";
      src = pkgs.fetchurl 
      {
        sha256 = "09hrikx310pac2sb6jzaa7k6fmiznnmhdsqij1gawdymhawc4h1l";
        url = "https://github.com/mjambon/easy-format/releases/download/1.3.2/easy-format-1.3.2.tbz";
      };
      version = "1.3.2";
    };
    ethernet = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        dune = selection.dune;
        fmt = selection.fmt;
        logs = selection.logs;
        lwt = selection.lwt;
        macaddr = selection.macaddr;
        mirage-net-lwt = selection.mirage-net-lwt;
        mirage-profile = selection.mirage-profile;
        mirage-protocols-lwt = selection.mirage-protocols-lwt;
        ocaml = selection.ocaml;
        ppx_cstruct = selection.ppx_cstruct;
        rresult = selection.rresult;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1a786qafa68y78i6agpdihbg9j4w1w6lzf006417i6nxhg0is589";
        package = "packages/ethernet/ethernet.1.0.0";
      };
      pname = "ethernet";
      src = pkgs.fetchurl 
      {
        sha256 = "1i7zn70wkrk5zqh1gqy5dm0myls8gcn97azn2rxmackp9q0qh6ym";
        url = "https://github.com/mirage/ethernet/releases/download/v1.0.0/ethernet-v1.0.0.tbz";
      };
      version = "1.0.0";
    };
    extlib = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        cppo = selection.cppo;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:00ixcnss7xy5zp9av7xrk9q4x7vhvca1wlpzz1ai5q5m7rz9kw0w";
        package = "packages/extlib/extlib.1.7.7";
      };
      pname = "extlib";
      src = pkgs.fetchurl 
      {
        sha256 = "1sxmzc1mx3kg62j8kbk0dxkx8mkf1rn70h542cjzrziflznap0s1";
        url = "https://ygrek.org/p/release/ocaml-extlib/extlib-1.7.7.tar.gz";
      };
      version = "1.7.7";
    };
    fieldslib = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1abs881bnis5xj93jv7xg34cyph5jj683g2apas4sgi8k1wkg1iz";
        package = "packages/fieldslib/fieldslib.v0.13.0";
      };
      pname = "fieldslib";
      src = pkgs.fetchurl 
      {
        sha256 = "07bpb1bi5rlim7lfkfd5m2k7n222grslbzh9hjpy7dhq7nm8fy0p";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/fieldslib-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    fmt = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix or null;
        cmdliner = selection.cmdliner or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        seq = selection.seq;
        stdlib-shims = selection.stdlib-shims;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1jv1qj26idvi2nazvna4aaclp9wzlzwmmg57n5cx2f9ia87qh267";
        package = "packages/fmt/fmt.0.8.8";
      };
      pname = "fmt";
      src = pkgs.fetchurl 
      {
        sha256 = "1iy0rwknd302mr15328g805k210xyigxbija6fzqqfzyb43azvk4";
        url = "https://erratique.ch/software/fmt/releases/fmt-0.8.8.tbz";
      };
      version = "0.8.8";
    };
    fpath = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1pnskgw9fqq4kg1x4sc4vcv9rh0kksilx4qngwafpyss42mqq2i2";
        package = "packages/fpath/fpath.0.7.3";
      };
      pname = "fpath";
      src = pkgs.fetchurl 
      {
        sha256 = "03z7mj0sqdz465rc4drj1gr88l9q3nfs374yssvdjdyhjbqqzc0j";
        url = "https://erratique.ch/software/fpath/releases/fpath-0.7.3.tbz";
      };
      version = "0.7.3";
    };
    functoria = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        base-unix = selection.base-unix;
        bos = selection.bos;
        cmdliner = selection.cmdliner;
        dune = selection.dune;
        fmt = selection.fmt;
        fpath = selection.fpath;
        logs = selection.logs;
        ocaml = selection.ocaml;
        ocamlgraph = selection.ocamlgraph;
        ptime = selection.ptime;
        rresult = selection.rresult;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0xv5vmxfalikpnivs5lay9h17jdnz5di5gidviyqhgwr8plgmy98";
        package = "packages/functoria/functoria.3.1.1";
      };
      pname = "functoria";
      src = pkgs.fetchurl 
      {
        sha256 = "0bihxbq16zwsi7frk4b8wz8993mvy2ym3n6288jhv0n0gb7c2f7m";
        url = "https://github.com/mirage/functoria/releases/download/v3.1.1/functoria-v3.1.1.tbz";
      };
      version = "3.1.1";
    };
    functoria-runtime = 
    {
      opamInputs = 
      {
        cmdliner = selection.cmdliner;
        dune = selection.dune;
        fmt = selection.fmt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1578fby9ailffn3clg5mb670568hsrxk0asbmc0gg9xd6pk78aj8";
        package = "packages/functoria-runtime/functoria-runtime.3.0.3";
      };
      pname = "functoria-runtime";
      src = pkgs.fetchurl 
      {
        sha256 = "08wv2890gz7ci1fa2b3z4cvqf98nqb09f89y08kcmnsirlbbzlfh";
        url = "https://github.com/mirage/functoria/releases/download/v3.0.3/functoria-v3.0.3.tbz";
      };
      version = "3.0.3";
    };
    hashcons = 
    {
      opamInputs = 
      {
        conf-autoconf = selection.conf-autoconf;
        conf-which = selection.conf-which;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1l857c99yrs95460awyr03a2smhrhbjxh6vvw3jm88y8si1zg0b8";
        package = "packages/hashcons/hashcons.1.3";
      };
      pname = "hashcons";
      src = pkgs.fetchurl 
      {
        sha256 = "1kkjbm5dnvnf58bh0hqxm0yjvdc0l7n9k46l9mlpr9lfyik2kisr";
        url = "https://github.com/backtracking/ocaml-hashcons/archive/1.3.tar.gz";
      };
      version = "1.3";
    };
    hex = 
    {
      opamInputs = 
      {
        bigarray-compat = selection.bigarray-compat;
        cstruct = selection.cstruct;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1p6fbjw8ymp4i5w1v6lcslvc7dq1pkz364kbi22jn6zvm9fpg9k6";
        package = "packages/hex/hex.1.4.0";
      };
      pname = "hex";
      src = pkgs.fetchurl 
      {
        sha256 = "07b9y0lmnflsslkrm6xilkj40n8sf2hjqkyqghnk7sw5l0plkqsp";
        url = "https://github.com/mirage/ocaml-hex/releases/download/v1.4.0/hex-v1.4.0.tbz";
      };
      version = "1.4.0";
    };
    io-page = 
    {
      opamInputs = 
      {
        bigarray-compat = selection.bigarray-compat;
        cstruct = selection.cstruct;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:06qv3niwbnky40jm08f1bw824c59hlfb773jm938jrpccmm4rnz4";
        package = "packages/io-page/io-page.2.3.0";
      };
      pname = "io-page";
      src = pkgs.fetchurl 
      {
        sha256 = "1hx27pwf419hrhwaw9cphbnl8akz8yy73hqj49l15g2k7shah1cn";
        url = "https://github.com/mirage/io-page/releases/download/v2.3.0/io-page-v2.3.0.tbz";
      };
      version = "2.3.0";
    };
    io-page-unix = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        dune = selection.dune;
        io-page = selection.io-page;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:10pdasm1yb46nqqsgq3pr5w17xx21jwbhk2g1ini29ar3c3dzrva";
        package = "packages/io-page-unix/io-page-unix.2.3.0";
      };
      pname = "io-page-unix";
      src = pkgs.fetchurl 
      {
        sha256 = "1hx27pwf419hrhwaw9cphbnl8akz8yy73hqj49l15g2k7shah1cn";
        url = "https://github.com/mirage/io-page/releases/download/v2.3.0/io-page-v2.3.0.tbz";
      };
      version = "2.3.0";
    };
    ipaddr = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        macaddr = selection.macaddr;
        ocaml = selection.ocaml;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1mdlpbig7kpc2z01qrrdy7pqsdqnrdxahdwa0a3bz70f6xcf8ydn";
        package = "packages/ipaddr/ipaddr.3.1.0";
      };
      pname = "ipaddr";
      src = pkgs.fetchurl 
      {
        sha256 = "1d637yc6indgsq4amsyd8aw4f6yxms72h7aqnpknphjhsvibpgrr";
        url = "https://github.com/mirage/ocaml-ipaddr/releases/download/v3.1.0/ipaddr-v3.1.0.tbz";
      };
      version = "3.1.0";
    };
    jbuilder = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1phf81qmqcc88nxnl3i92jnv4j07vw5a71lmag9vpky3n1h4qkjv";
        package = "packages/jbuilder/jbuilder.1.0+beta20.2";
      };
      pname = "jbuilder";
      src = pkgs.fetchurl 
      {
        sha256 = "1516rq0x0481bfg9436k1c74346y8nw45shizsnkwylfdj9p8p65";
        url = "https://github.com/ocaml/dune/releases/download/1.0%2Bbeta20.2/jbuilder-1.0+beta20.2.tbz";
      };
      version = "1.0-beta20.2";
    };
    js_of_ocaml = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        js_of_ocaml-compiler = selection.js_of_ocaml-compiler;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ppx_tools_versioned = selection.ppx_tools_versioned;
        uchar = selection.uchar;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0bcrcsriqxkjr5wkns4ndjgvk0bwn9r44fzq4nv2za4p9ziv64gq";
        package = "packages/js_of_ocaml/js_of_ocaml.3.7.0";
      };
      pname = "js_of_ocaml";
      src = pkgs.fetchurl 
      {
        sha256 = "0rw6cfkl3zlyav8q2w7grxxqjmg35mz5rgvmkiqb58nl4gmgzx6w";
        url = "https://github.com/ocsigen/js_of_ocaml/releases/download/3.7.0/js_of_ocaml-3.7.0.tbz";
      };
      version = "3.7.0";
    };
    js_of_ocaml-compiler = 
    {
      opamInputs = 
      {
        cmdliner = selection.cmdliner;
        dune = selection.dune;
        menhir = selection.menhir;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ocamlfind = selection.ocamlfind or null;
        yojson = selection.yojson;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1w7qjpfzam4jrnx957hdj8m9v7ijmyigqmiq6v0lxrkhqzwav74w";
        package = "packages/js_of_ocaml-compiler/js_of_ocaml-compiler.3.7.0";
      };
      pname = "js_of_ocaml-compiler";
      src = pkgs.fetchurl 
      {
        sha256 = "0rw6cfkl3zlyav8q2w7grxxqjmg35mz5rgvmkiqb58nl4gmgzx6w";
        url = "https://github.com/ocsigen/js_of_ocaml/releases/download/3.7.0/js_of_ocaml-3.7.0.tbz";
      };
      version = "3.7.0";
    };
    js_of_ocaml-lwt = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        graphics = selection.graphics or null;
        js_of_ocaml = selection.js_of_ocaml;
        js_of_ocaml-ppx = selection.js_of_ocaml-ppx;
        lwt = selection.lwt;
        lwt_log = selection.lwt_log or null;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1wmh707qpiqfkd4g59rn3lh6v9rq9s944ia4j110qv0rrbq07rcp";
        package = "packages/js_of_ocaml-lwt/js_of_ocaml-lwt.3.7.0";
      };
      pname = "js_of_ocaml-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0rw6cfkl3zlyav8q2w7grxxqjmg35mz5rgvmkiqb58nl4gmgzx6w";
        url = "https://github.com/ocsigen/js_of_ocaml/releases/download/3.7.0/js_of_ocaml-3.7.0.tbz";
      };
      version = "3.7.0";
    };
    js_of_ocaml-ppx = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        js_of_ocaml = selection.js_of_ocaml;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ppx_tools_versioned = selection.ppx_tools_versioned;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0jbiiz743zixyhfdixayhaqkdwnq65gyw9cd7vv3h27pifbin6bn";
        package = "packages/js_of_ocaml-ppx/js_of_ocaml-ppx.3.7.0";
      };
      pname = "js_of_ocaml-ppx";
      src = pkgs.fetchurl 
      {
        sha256 = "0rw6cfkl3zlyav8q2w7grxxqjmg35mz5rgvmkiqb58nl4gmgzx6w";
        url = "https://github.com/ocsigen/js_of_ocaml/releases/download/3.7.0/js_of_ocaml-3.7.0.tbz";
      };
      version = "3.7.0";
    };
    jsonm = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
        uchar = selection.uchar;
        uutf = selection.uutf;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0dj8ibg6j4r4a7v7g6d6q3h4m23jv3pxwc7nam4zzbc7h2k69dy9";
        package = "packages/jsonm/jsonm.1.0.1";
      };
      pname = "jsonm";
      src = pkgs.fetchurl 
      {
        sha256 = "1176dcmxb11fnw49b7yysvkjh0kpzx4s48lmdn5psq9vshp5c29w";
        url = "http://erratique.ch/software/jsonm/releases/jsonm-1.0.1.tbz";
      };
      version = "1.0.1";
    };
    lambda-term = 
    {
      opamInputs = 
      {
        camomile = selection.camomile;
        dune = selection.dune;
        lwt = selection.lwt;
        lwt_log = selection.lwt_log;
        lwt_react = selection.lwt_react;
        mew_vi = selection.mew_vi;
        ocaml = selection.ocaml;
        react = selection.react;
        zed = selection.zed;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1vs44jlk18hgfk8fd93w2ar5f8p0h5ixb3f3v0hsxpp0fci61aw7";
        package = "packages/lambda-term/lambda-term.3.1.0";
      };
      pname = "lambda-term";
      src = pkgs.fetchurl 
      {
        sha256 = "1462j2c2nnzv6ng8b6907bw0zy3mhhnnjdm8k6as0sgm9ls0r77r";
        url = "https://github.com/ocaml-community/lambda-term/archive/3.1.0.tar.gz";
      };
      version = "3.1.0";
    };
    logs = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        cmdliner = selection.cmdliner or null;
        fmt = selection.fmt or null;
        js_of_ocaml = selection.js_of_ocaml or null;
        lwt = selection.lwt or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1k797gb7f2s1hlqyqsq2xyq9gm20l5q2iwh26bs44f3bp3gklg1a";
        package = "packages/logs/logs.0.7.0";
      };
      pname = "logs";
      src = pkgs.fetchurl 
      {
        sha256 = "1jnmd675wmsmdwyb5mx5b0ac66g4c6gpv5s4mrx2j6pb0wla1x46";
        url = "https://erratique.ch/software/logs/releases/logs-0.7.0.tbz";
      };
      version = "0.7.0";
    };
    lru = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        psq = selection.psq;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1dqz90jjh18yvl0wpnfycf86ji07qighpjq9419nmx13viflxiah";
        package = "packages/lru/lru.0.2.0";
      };
      pname = "lru";
      src = pkgs.fetchurl 
      {
        sha256 = "0bd7js9rrma1fjjjjc3fgr9l5fjbhgihx2nsaf96g2b35iiaimd0";
        url = "https://github.com/pqwy/lru/releases/download/v0.2.0/lru-0.2.0.tbz";
      };
      version = "0.2.0";
    };
    lwt = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        base-unix = selection.base-unix or null;
        conf-libev = selection.conf-libev or null;
        cppo = selection.cppo;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        mmap = selection.mmap;
        ocaml = selection.ocaml;
        ocplib-endian = selection.ocplib-endian;
        result = selection.result;
        seq = selection.seq;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:10ni9amqjrcndfbr8x6h5m4q03899vgylqd73kblwpybl8h7dycm";
        package = "packages/lwt/lwt.4.5.0";
      };
      pname = "lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "11k1g118wq093zc5a93dnvdzmp09xvg0k7ayjwnq01div1f88zg0";
        url = "https://github.com/ocsigen/lwt/archive/4.5.0.tar.gz";
      };
      version = "4.5.0";
    };
    lwt-dllist = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1d1jdj7wpxm055zvvbn4gi0pps5b026qgmv5p3srch310p6qm7kw";
        package = "packages/lwt-dllist/lwt-dllist.1.0.0";
      };
      pname = "lwt-dllist";
      src = pkgs.fetchurl 
      {
        sha256 = "0g111f8fq9k1hwccpkhylkp83f73mlz4xnxxr3rf9xpi2f8fh7j9";
        url = "https://github.com/mirage/lwt-dllist/releases/download/v1.0.0/lwt-dllist-v1.0.0.tbz";
      };
      version = "1.0.0";
    };
    lwt_log = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1b4qvc8hazj2n3shdpdi4b5575sgr3iz5zs06iajc6ph8k56hk76";
        package = "packages/lwt_log/lwt_log.1.1.1";
      };
      pname = "lwt_log";
      src = pkgs.fetchurl 
      {
        sha256 = "0gszc8nvk2hpfq47plb36qahlnyfq28sa9mhicnf6mg5c7n1kyql";
        url = "https://github.com/aantron/lwt_log/archive/1.1.1.tar.gz";
      };
      version = "1.1.1";
    };
    lwt_ppx = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ppx_tools_versioned = selection.ppx_tools_versioned;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:13brhy9b434fybjiqd4b7gk4xnvs240b87f4qiw5hik6686cbgrm";
        package = "packages/lwt_ppx/lwt_ppx.2.0.1";
      };
      pname = "lwt_ppx";
      src = pkgs.fetchurl 
      {
        sha256 = "0cmim5s7ay72pxpc66bmxmnj5lbg5yvm0ydrpnfh3nyhlcyjphcp";
        url = "https://github.com/ocsigen/lwt/archive/5.2.0.tar.gz";
      };
      version = "2.0.1";
    };
    lwt_react = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        react = selection.react;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0l0sqax959gv3649z1vqwf94jvq0bykwydrdjxzk0gjj0nlchfar";
        package = "packages/lwt_react/lwt_react.1.1.3";
      };
      pname = "lwt_react";
      src = pkgs.fetchurl 
      {
        sha256 = "0gfj6bgv6vp82mg8kw1g7s2h9g08gs9m7i4w1ffw3l77b8pzd6k9";
        url = "https://github.com/ocsigen/lwt/archive/4.3.0.tar.gz";
      };
      version = "1.1.3";
    };
    macaddr = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1rzpj59sx0iwwa7kvaqkzks8gqn27rbrhnkr612qcbdx9a41mgph";
        package = "packages/macaddr/macaddr.3.1.0";
      };
      pname = "macaddr";
      src = pkgs.fetchurl 
      {
        sha256 = "1d637yc6indgsq4amsyd8aw4f6yxms72h7aqnpknphjhsvibpgrr";
        url = "https://github.com/mirage/ocaml-ipaddr/releases/download/v3.1.0/ipaddr-v3.1.0.tbz";
      };
      version = "3.1.0";
    };
    magic-mime = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0d8ici4l55iywi80a5rp2mhzni1ppp16vb9f4zsml1898cd92p7l";
        package = "packages/magic-mime/magic-mime.1.1.2";
      };
      pname = "magic-mime";
      src = pkgs.fetchurl 
      {
        sha256 = "1sq4rfd9m3693cnzlbds4qh1xpvrv1iz1s1f75nvacbmfjy0nn8c";
        url = "https://github.com/mirage/ocaml-magic-mime/releases/download/v1.1.2/magic-mime-v1.1.2.tbz";
      };
      version = "1.1.2";
    };
    menhir = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        menhirLib = selection.menhirLib;
        menhirSdk = selection.menhirSdk;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:04j4p62msqwji50pcz96nk395nzjldx429ykh37gmqj0hyhxqly1";
        package = "packages/menhir/menhir.20200624";
      };
      pname = "menhir";
      src = pkgs.fetchurl 
      {
        sha256 = "13m5hy1lvcpiybc1r15cfd1n7gnpbybly8if7lg6fc7j5bhp0df1";
        url = "https://gitlab.inria.fr/fpottier/menhir/repository/20200624/archive.tar.gz";
      };
      version = "20200624";
    };
    menhirLib = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:017hgb1nim210y85zqls45gwqbcz2d7xr35h27cy3wn84kjxgl59";
        package = "packages/menhirLib/menhirLib.20200624";
      };
      pname = "menhirLib";
      src = pkgs.fetchurl 
      {
        sha256 = "13m5hy1lvcpiybc1r15cfd1n7gnpbybly8if7lg6fc7j5bhp0df1";
        url = "https://gitlab.inria.fr/fpottier/menhir/repository/20200624/archive.tar.gz";
      };
      version = "20200624";
    };
    menhirSdk = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0hmzhm4yc69rs2dzx9s7spi9898p2srahy7jbhjw17v2vgx3dpfs";
        package = "packages/menhirSdk/menhirSdk.20200624";
      };
      pname = "menhirSdk";
      src = pkgs.fetchurl 
      {
        sha256 = "13m5hy1lvcpiybc1r15cfd1n7gnpbybly8if7lg6fc7j5bhp0df1";
        url = "https://gitlab.inria.fr/fpottier/menhir/repository/20200624/archive.tar.gz";
      };
      version = "20200624";
    };
    mew = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        result = selection.result;
        trie = selection.trie;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1wgfr03kwsd6an6rfxai1l60srh8wxffvyi9mc8y0fyspxmllzlc";
        package = "packages/mew/mew.0.1.0";
      };
      pname = "mew";
      src = pkgs.fetchurl 
      {
        sha256 = "1rjri9mgfb9gn9fmjn0ax21y9jd9wkvr7mmx2jrlqmzgabmqrlv4";
        url = "https://github.com/kandu/mew/archive/0.1.0.tar.gz";
      };
      version = "0.1.0";
    };
    mew_vi = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        mew = selection.mew;
        ocaml = selection.ocaml;
        react = selection.react;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0zsfhxpff78cqk2c81parajb59m7hqf6v8arksxbyfha6mls65hz";
        package = "packages/mew_vi/mew_vi.0.5.0";
      };
      pname = "mew_vi";
      src = pkgs.fetchurl 
      {
        sha256 = "1nmg3cysglgw4115n5zpz4azrfbnfxkn2kvw73chzs69viygm4m6";
        url = "https://github.com/kandu/mew_vi/archive/0.5.0.tar.gz";
      };
      version = "0.5.0";
    };
    mirage = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        bos = selection.bos;
        dune = selection.dune;
        functoria = selection.functoria;
        ipaddr = selection.ipaddr;
        logs = selection.logs;
        mirage-runtime = selection.mirage-runtime;
        ocaml = selection.ocaml;
        stdlib-shims = selection.stdlib-shims;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:04hp3l1vmng0kkak1f4rs0dqcj8rzx21d2n4yz69v0f8k184a55y";
        package = "packages/mirage/mirage.3.7.7";
      };
      pname = "mirage";
      src = pkgs.fetchurl 
      {
        sha256 = "1ds5zfwb0g340kbdlsjayyw4n25nj7skdl1mwyvpzmkv4qcsmdiv";
        url = "https://github.com/mirage/mirage/releases/download/v3.7.7/mirage-v3.7.7.tbz";
      };
      version = "3.7.7";
    };
    mirage-block = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        mirage-device = selection.mirage-device;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:010dxraccm0gh0fwn4akp1qkk35x6aq682c815qdgk3k6700xml7";
        package = "packages/mirage-block/mirage-block.1.2.0";
      };
      pname = "mirage-block";
      src = pkgs.fetchurl 
      {
        sha256 = "0n15gagqak5m034w4i8n5vx4fb1wxvhq3fk0d129kr3pbqqc8wrk";
        url = "https://github.com/mirage/mirage-block/releases/download/v1.2.0/mirage-block-v1.2.0.tbz";
      };
      version = "1.2.0";
    };
    mirage-block-lwt = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        dune = selection.dune;
        io-page = selection.io-page;
        logs = selection.logs;
        lwt = selection.lwt;
        mirage-block = selection.mirage-block;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0b65nwraknbw6b5azm6gh17n8ni16yg5q3p94mrqcnjsgzvpwbzb";
        package = "packages/mirage-block-lwt/mirage-block-lwt.1.2.0";
      };
      pname = "mirage-block-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0n15gagqak5m034w4i8n5vx4fb1wxvhq3fk0d129kr3pbqqc8wrk";
        url = "https://github.com/mirage/mirage-block/releases/download/v1.2.0/mirage-block-v1.2.0.tbz";
      };
      version = "1.2.0";
    };
    mirage-channel = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        mirage-flow = selection.mirage-flow;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1vss2h0k73f9zwvkwlqh32wsqadgyg9qr8jl2hz305k4laqapb6i";
        package = "packages/mirage-channel/mirage-channel.3.2.0";
      };
      pname = "mirage-channel";
      src = pkgs.fetchurl 
      {
        sha256 = "073wgkxn0nmrjpz74ic2nj5vp71097bij7ri7rvm9nk5rcbcx368";
        url = "https://github.com/mirage/mirage-channel/releases/download/v3.2.0/mirage-channel-v3.2.0.tbz";
      };
      version = "3.2.0";
    };
    mirage-channel-lwt = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        dune = selection.dune;
        io-page = selection.io-page;
        logs = selection.logs;
        lwt = selection.lwt;
        mirage-channel = selection.mirage-channel;
        mirage-flow-lwt = selection.mirage-flow-lwt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:07gz3w7jssbm8dvymky67qa04scanwyigrqdqsfg4nh6445wsijr";
        package = "packages/mirage-channel-lwt/mirage-channel-lwt.3.2.0";
      };
      pname = "mirage-channel-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "073wgkxn0nmrjpz74ic2nj5vp71097bij7ri7rvm9nk5rcbcx368";
        url = "https://github.com/mirage/mirage-channel/releases/download/v3.2.0/mirage-channel-v3.2.0.tbz";
      };
      version = "3.2.0";
    };
    mirage-clock = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        mirage-device = selection.mirage-device;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1zhnq9ykfyahy216zlss923mgfik7a3pbk9f1xx5cv1nvghrlkq8";
        package = "packages/mirage-clock/mirage-clock.2.0.0";
      };
      pname = "mirage-clock";
      src = pkgs.fetchurl 
      {
        sha256 = "15yim4gy9wbzhz45fbixi1ncqiaks72f019n66l1zkkb3fafjddf";
        url = "https://github.com/mirage/mirage-clock/releases/download/v2.0.0/mirage-clock-v2.0.0.tbz";
      };
      version = "2.0.0";
    };
    mirage-clock-lwt = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        lwt = selection.lwt;
        mirage-clock = selection.mirage-clock;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:090k886va14jz5vbgz95l7inaflfm7km5070j62f26874y04nhpq";
        package = "packages/mirage-clock-lwt/mirage-clock-lwt.2.0.0";
      };
      pname = "mirage-clock-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "15yim4gy9wbzhz45fbixi1ncqiaks72f019n66l1zkkb3fafjddf";
        url = "https://github.com/mirage/mirage-clock/releases/download/v2.0.0/mirage-clock-v2.0.0.tbz";
      };
      version = "2.0.0";
    };
    mirage-clock-unix = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
        mirage-clock = selection.mirage-clock;
        mirage-clock-lwt = selection.mirage-clock-lwt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:110385fx5y9fcq7np7w3nijmc2ih9s8mmgiwdfjwvvcsvcgf4if4";
        package = "packages/mirage-clock-unix/mirage-clock-unix.2.0.0";
      };
      pname = "mirage-clock-unix";
      src = pkgs.fetchurl 
      {
        sha256 = "15yim4gy9wbzhz45fbixi1ncqiaks72f019n66l1zkkb3fafjddf";
        url = "https://github.com/mirage/mirage-clock/releases/download/v2.0.0/mirage-clock-v2.0.0.tbz";
      };
      version = "2.0.0";
    };
    mirage-console = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        mirage-device = selection.mirage-device;
        mirage-flow = selection.mirage-flow;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0cdjgvgbrzpcs12qdg71gyjd104c5rlam2xnhxx991r5dzc8ajbf";
        package = "packages/mirage-console/mirage-console.2.4.3";
      };
      pname = "mirage-console";
      src = pkgs.fetchurl 
      {
        sha256 = "0nycf12xcyycc6vrn83j7vqb8bsiwsg7zkj5id47nmkm80gxaxwn";
        url = "https://github.com/mirage/mirage-console/releases/download/v2.4.3/mirage-console-v2.4.3.tbz";
      };
      version = "2.4.3";
    };
    mirage-console-lwt = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        dune = selection.dune;
        lwt = selection.lwt;
        mirage-console = selection.mirage-console;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0gyfqrrcqqgb7qgzbi1yzjrfrdj83i6127fhr94dfncy6ppnsam0";
        package = "packages/mirage-console-lwt/mirage-console-lwt.2.4.3";
      };
      pname = "mirage-console-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0nycf12xcyycc6vrn83j7vqb8bsiwsg7zkj5id47nmkm80gxaxwn";
        url = "https://github.com/mirage/mirage-console/releases/download/v2.4.3/mirage-console-v2.4.3.tbz";
      };
      version = "2.4.3";
    };
    mirage-device = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        fmt = selection.fmt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:17igx05w48jl00r6wfs9ainjfmwcrdynywpb9qfm4n8lgilx6p2q";
        package = "packages/mirage-device/mirage-device.1.2.0";
      };
      pname = "mirage-device";
      src = pkgs.fetchurl 
      {
        sha256 = "0qqi5nqsi4ldnn0j47vh37ipyjfw0w0igixp38yj3nx0gpb1wk2g";
        url = "https://github.com/mirage/mirage-device/releases/download/v1.2.0/mirage-device-v1.2.0.tbz";
      };
      version = "1.2.0";
    };
    mirage-flow = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        fmt = selection.fmt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1yycknxmc8rnsw8hmx979g1cj8anlcg0w4abx7h3zazapvqc7lv2";
        package = "packages/mirage-flow/mirage-flow.1.6.0";
      };
      pname = "mirage-flow";
      src = pkgs.fetchurl 
      {
        sha256 = "1lv3rjwgmn9qk4n1clv8w0c77afndyiv0b92naij6824sadnwnfn";
        url = "https://github.com/mirage/mirage-flow/releases/download/v1.6.0/mirage-flow-v1.6.0.tbz";
      };
      version = "1.6.0";
    };
    mirage-flow-lwt = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        dune = selection.dune;
        fmt = selection.fmt;
        logs = selection.logs;
        lwt = selection.lwt;
        mirage-clock = selection.mirage-clock;
        mirage-flow = selection.mirage-flow;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0wn8xd8ac0s16n8g4j71pjiy7bfk17lw72d06j9bvxqvq3ac3n2s";
        package = "packages/mirage-flow-lwt/mirage-flow-lwt.1.6.0";
      };
      pname = "mirage-flow-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "1lv3rjwgmn9qk4n1clv8w0c77afndyiv0b92naij6824sadnwnfn";
        url = "https://github.com/mirage/mirage-flow/releases/download/v1.6.0/mirage-flow-v1.6.0.tbz";
      };
      version = "1.6.0";
    };
    mirage-fs = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        fmt = selection.fmt;
        mirage-device = selection.mirage-device;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:185wa6ig8s1cj9pkbp52wdfaxnq15k27mc8m4qkz72h4jiazmppq";
        package = "packages/mirage-fs/mirage-fs.2.0.0";
      };
      pname = "mirage-fs";
      src = pkgs.fetchurl 
      {
        sha256 = "09brryp5qwghfsyvjlcjz9593nsqkkaz221yhlxpbmlpqp7w18h9";
        url = "https://github.com/mirage/mirage-fs/releases/download/v2.0.0/mirage-fs-v2.0.0.tbz";
      };
      version = "2.0.0";
    };
    mirage-fs-lwt = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        cstruct-lwt = selection.cstruct-lwt;
        dune = selection.dune;
        lwt = selection.lwt;
        mirage-fs = selection.mirage-fs;
        mirage-kv-lwt = selection.mirage-kv-lwt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0bqd52a0gf33wnsifpcn7jv1a7adiidz9v80mrv33k3m4rn2m83y";
        package = "packages/mirage-fs-lwt/mirage-fs-lwt.1.2.0";
      };
      pname = "mirage-fs-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0vyba9gwy27f8zcbfik0khdj9md2mxc1rcpcn845mycaxlj88qky";
        url = "https://github.com/mirage/mirage-fs/releases/download/v1.2.0/mirage-fs-v1.2.0.tbz";
      };
      version = "1.2.0";
    };
    mirage-fs-unix = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        cstruct-lwt = selection.cstruct-lwt;
        dune = selection.dune;
        lwt = selection.lwt;
        mirage-fs-lwt = selection.mirage-fs-lwt;
        mirage-kv-lwt = selection.mirage-kv-lwt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0vcfyah8psnqdyjvmgi499aw9bbv0spdhp4xskc0ak84y0rwmk6m";
        package = "packages/mirage-fs-unix/mirage-fs-unix.1.6.0";
      };
      pname = "mirage-fs-unix";
      src = pkgs.fetchurl 
      {
        sha256 = "0wa8nw31sczbca0ii0gsmibzgg0qkyy3aad8gb73gp16gg859lsr";
        url = "https://github.com/mirage/mirage-fs-unix/releases/download/v1.6.0/mirage-fs-unix-v1.6.0.tbz";
      };
      version = "1.6.0";
    };
    mirage-kv = 
    {
      opamInputs = 
      {
        fmt = selection.fmt;
        jbuilder = selection.jbuilder;
        mirage-device = selection.mirage-device;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:06dlj8awcc1jin1c8p356k497cyyps1jqmds03hz0d3zipg774qp";
        package = "packages/mirage-kv/mirage-kv.1.1.1";
      };
      pname = "mirage-kv";
      src = pkgs.fetchurl 
      {
        sha256 = "182vmm4arln7gq1ygaxm8cq5bhvvb8zpa109niab7s9lkcf44cf0";
        url = "https://github.com/mirage/mirage-kv/releases/download/v1.1.1/mirage-kv-1.1.1.tbz";
      };
      version = "1.1.1";
    };
    mirage-kv-lwt = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        jbuilder = selection.jbuilder;
        lwt = selection.lwt;
        mirage-kv = selection.mirage-kv;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:05hnszp4g0kh7dzh8hp90s767kvg79vwi43dai5x0f82bzxbg36a";
        package = "packages/mirage-kv-lwt/mirage-kv-lwt.1.1.0";
      };
      pname = "mirage-kv-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0z29dl4lhjp9s0hx67hksvirx8g4bk6zhawq7v3bqv14yzq3gsyf";
        url = "https://github.com/mirage/mirage-kv/releases/download/v1.1.0/mirage-kv-1.1.0.tbz";
      };
      version = "1.1.0";
    };
    mirage-net = 
    {
      opamInputs = 
      {
        fmt = selection.fmt;
        jbuilder = selection.jbuilder;
        mirage-device = selection.mirage-device;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0ll0hmsrmb35wc1zhp8m4inn0n7yvx0s27vf6p37jf0yb54wgqh7";
        package = "packages/mirage-net/mirage-net.1.2.0";
      };
      pname = "mirage-net";
      src = pkgs.fetchurl 
      {
        sha256 = "1bk4ns955hrs4clp7lzsk19svq2dbn0njfla41jl2a60991ajxay";
        url = "https://github.com/mirage/mirage-net/releases/download/v1.2.0/mirage-net-1.2.0.tbz";
      };
      version = "1.2.0";
    };
    mirage-net-lwt = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        io-page = selection.io-page;
        jbuilder = selection.jbuilder;
        lwt = selection.lwt;
        macaddr = selection.macaddr;
        mirage-net = selection.mirage-net;
        ocaml = selection.ocaml;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:15sj447ankkkp3rmzh60fii8z8yk7n4777lsidgbffxfmz4sixi7";
        package = "packages/mirage-net-lwt/mirage-net-lwt.1.2.0";
      };
      pname = "mirage-net-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "1bk4ns955hrs4clp7lzsk19svq2dbn0njfla41jl2a60991ajxay";
        url = "https://github.com/mirage/mirage-net/releases/download/v1.2.0/mirage-net-1.2.0.tbz";
      };
      version = "1.2.0";
    };
    mirage-no-solo5 = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:18h50v7lp39sis6jy46h35vij0v1z5fr76c4y2h4b72c40fwwck1";
        package = "packages/mirage-no-solo5/mirage-no-solo5.1";
      };
      pname = "mirage-no-solo5";
      src = null;
      version = "1";
    };
    mirage-no-xen = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1nvmvay3nkl8ljw9f46dwv3jppqbbkp0pxf9f1gq4spckb8ysmkh";
        package = "packages/mirage-no-xen/mirage-no-xen.1";
      };
      pname = "mirage-no-xen";
      src = null;
      version = "1";
    };
    mirage-profile = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ocplib-endian = selection.ocplib-endian;
        ppx_cstruct = selection.ppx_cstruct;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:02gvd3f914s22r3ckpiqyq345fq5vk097brg2zwzfxljibzz94q2";
        package = "packages/mirage-profile/mirage-profile.0.9.1";
      };
      pname = "mirage-profile";
      src = pkgs.fetchurl 
      {
        sha256 = "0lh3591ad4v7nxpd410b75idmgdq668mqdilvkg4avrwqw1wzdib";
        url = "https://github.com/mirage/mirage-profile/releases/download/v0.9.1/mirage-profile-v0.9.1.tbz";
      };
      version = "0.9.1";
    };
    mirage-protocols = 
    {
      opamInputs = 
      {
        duration = selection.duration;
        fmt = selection.fmt;
        jbuilder = selection.jbuilder;
        mirage-device = selection.mirage-device;
        mirage-flow = selection.mirage-flow;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0f5wgc92cafhga30h40lr4rbn1c3738kq7i4ywvb16b4sdg5zazj";
        package = "packages/mirage-protocols/mirage-protocols.1.4.1";
      };
      pname = "mirage-protocols";
      src = pkgs.fetchurl 
      {
        sha256 = "1fvinjrp0r73g8wq1yrra83g1glpna99mzj2djlbj0wphhg45w9w";
        url = "https://github.com/mirage/mirage-protocols/releases/download/v1.4.1/mirage-protocols-1.4.1.tbz";
      };
      version = "1.4.1";
    };
    mirage-protocols-lwt = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        ipaddr = selection.ipaddr;
        jbuilder = selection.jbuilder;
        lwt = selection.lwt;
        macaddr = selection.macaddr;
        mirage-protocols = selection.mirage-protocols;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0bv89sq7hfn778gq7yixgy35h0a4r5hl7pwd2hfynsznmfbdm9m4";
        package = "packages/mirage-protocols-lwt/mirage-protocols-lwt.1.4.1";
      };
      pname = "mirage-protocols-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "1fvinjrp0r73g8wq1yrra83g1glpna99mzj2djlbj0wphhg45w9w";
        url = "https://github.com/mirage/mirage-protocols/releases/download/v1.4.1/mirage-protocols-1.4.1.tbz";
      };
      version = "1.4.1";
    };
    mirage-random = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:03w9f609qc0nlyfnilplkn4h2my4g2nzp60qrw7pn994pynrf245";
        package = "packages/mirage-random/mirage-random.1.2.0";
      };
      pname = "mirage-random";
      src = pkgs.fetchurl 
      {
        sha256 = "0c1z8arda4lg18fd2srvy0fh86clbqf5ppsznrbdppmm3kwgj5l0";
        url = "https://github.com/mirage/mirage-random/releases/download/v1.2.0/mirage-random-v1.2.0.tbz";
      };
      version = "1.2.0";
    };
    mirage-runtime = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        fmt = selection.fmt;
        functoria-runtime = selection.functoria-runtime;
        ipaddr = selection.ipaddr;
        logs = selection.logs;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1qlavw6sxzdr0p3n2cd00g7vp5cz5y7fd2wjkz0lia3xyx577s9r";
        package = "packages/mirage-runtime/mirage-runtime.3.7.6";
      };
      pname = "mirage-runtime";
      src = pkgs.fetchurl 
      {
        sha256 = "060gl9n6ha131kf6668i1w5wcblz7p47wcrpq2zdi8v5imdlnrpq";
        url = "https://github.com/mirage/mirage/releases/download/v3.7.6/mirage-v3.7.6.tbz";
      };
      version = "3.7.6";
    };
    mirage-stack = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        fmt = selection.fmt;
        mirage-device = selection.mirage-device;
        mirage-protocols = selection.mirage-protocols;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1bz13xgzf5bzw1rq5kha7llmhv2xzfng9m9fn2j332yqpr8almi7";
        package = "packages/mirage-stack/mirage-stack.1.4.0";
      };
      pname = "mirage-stack";
      src = pkgs.fetchurl 
      {
        sha256 = "062djy9rma6j23x5h8cj65pi0wj4g6ikm2r4p9imcvnbhran3s58";
        url = "https://github.com/mirage/mirage-stack/releases/download/v1.4.0/mirage-stack-v1.4.0.tbz";
      };
      version = "1.4.0";
    };
    mirage-stack-lwt = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        dune = selection.dune;
        ipaddr = selection.ipaddr;
        lwt = selection.lwt;
        mirage-stack = selection.mirage-stack;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1dj10cipjgy6sky6pbxmp78mw5m40iqsar6v4p4fffl41mizp886";
        package = "packages/mirage-stack-lwt/mirage-stack-lwt.1.4.0";
      };
      pname = "mirage-stack-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "062djy9rma6j23x5h8cj65pi0wj4g6ikm2r4p9imcvnbhran3s58";
        url = "https://github.com/mirage/mirage-stack/releases/download/v1.4.0/mirage-stack-v1.4.0.tbz";
      };
      version = "1.4.0";
    };
    mirage-time = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        mirage-device = selection.mirage-device;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1in48qxamidsalbjar59ijq3x2casmajvhbmzwh8xnzjlvygk7kv";
        package = "packages/mirage-time/mirage-time.1.3.0";
      };
      pname = "mirage-time";
      src = pkgs.fetchurl 
      {
        sha256 = "0fkpcynhfdjx7nxd43h9iwd379l9cncxm42plj6lc9hmlygxnl4f";
        url = "https://github.com/mirage/mirage-time/releases/download/v1.3.0/mirage-time-v1.3.0.tbz";
      };
      version = "1.3.0";
    };
    mirage-time-lwt = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
        mirage-time = selection.mirage-time;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1f60gcdrjjpzs79k0mmwnngqwm4zkz298i7k5s7kf3ijnwianc63";
        package = "packages/mirage-time-lwt/mirage-time-lwt.1.3.0";
      };
      pname = "mirage-time-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0fkpcynhfdjx7nxd43h9iwd379l9cncxm42plj6lc9hmlygxnl4f";
        url = "https://github.com/mirage/mirage-time/releases/download/v1.3.0/mirage-time-v1.3.0.tbz";
      };
      version = "1.3.0";
    };
    mirage-types = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        mirage-block = selection.mirage-block;
        mirage-channel = selection.mirage-channel;
        mirage-clock = selection.mirage-clock;
        mirage-console = selection.mirage-console;
        mirage-device = selection.mirage-device;
        mirage-flow = selection.mirage-flow;
        mirage-fs = selection.mirage-fs;
        mirage-kv = selection.mirage-kv;
        mirage-net = selection.mirage-net;
        mirage-protocols = selection.mirage-protocols;
        mirage-random = selection.mirage-random;
        mirage-stack = selection.mirage-stack;
        mirage-time = selection.mirage-time;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1d3i2z8h5n8w63yba1sqfp1dqphmgf94x2gqxzhhrhri7hmgvcnz";
        package = "packages/mirage-types/mirage-types.3.4.1";
      };
      pname = "mirage-types";
      src = pkgs.fetchurl 
      {
        sha256 = "0fi7w96zx0xkd03l19ig9kfyhdqx5hv12pxmb98nv81pabhxnin4";
        url = "https://github.com/mirage/mirage/releases/download/v3.4.1/mirage-v3.4.1.tbz";
      };
      version = "3.4.1";
    };
    mirage-types-lwt = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        dune = selection.dune;
        io-page = selection.io-page;
        ipaddr = selection.ipaddr;
        lwt = selection.lwt;
        mirage-block-lwt = selection.mirage-block-lwt;
        mirage-channel-lwt = selection.mirage-channel-lwt;
        mirage-clock-lwt = selection.mirage-clock-lwt;
        mirage-console-lwt = selection.mirage-console-lwt;
        mirage-flow-lwt = selection.mirage-flow-lwt;
        mirage-fs-lwt = selection.mirage-fs-lwt;
        mirage-kv-lwt = selection.mirage-kv-lwt;
        mirage-net-lwt = selection.mirage-net-lwt;
        mirage-protocols-lwt = selection.mirage-protocols-lwt;
        mirage-random = selection.mirage-random;
        mirage-stack-lwt = selection.mirage-stack-lwt;
        mirage-time-lwt = selection.mirage-time-lwt;
        mirage-types = selection.mirage-types;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1hjxz6msh9zahzia9njqkipx0z5v1nrcj4hl3vrshpbxljzc67hc";
        package = "packages/mirage-types-lwt/mirage-types-lwt.3.4.1";
      };
      pname = "mirage-types-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0fi7w96zx0xkd03l19ig9kfyhdqx5hv12pxmb98nv81pabhxnin4";
        url = "https://github.com/mirage/mirage/releases/download/v3.4.1/mirage-v3.4.1.tbz";
      };
      version = "3.4.1";
    };
    mmap = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0mjn2jxrfwlrzppjnc6pg47ncm0ri6a1hn3kj2yz10rmpca25bsm";
        package = "packages/mmap/mmap.1.1.0";
      };
      pname = "mmap";
      src = pkgs.fetchurl 
      {
        sha256 = "0l6waidal2n8mkdn74avbslvc10sf49f5d889n838z03pra5chsc";
        url = "https://github.com/mirage/mmap/releases/download/v1.1.0/mmap-v1.1.0.tbz";
      };
      version = "1.1.0";
    };
    nocrypto = 
    {
      opamInputs = 
      {
        cpuid = selection.cpuid;
        cstruct = selection.cstruct;
        cstruct-lwt = selection.cstruct-lwt;
        lwt = selection.lwt;
        mirage-entropy = selection.mirage-entropy or null;
        mirage-no-solo5 = selection.mirage-no-solo5 or null;
        mirage-no-xen = selection.mirage-no-xen or null;
        mirage-solo5 = selection.mirage-solo5 or null;
        mirage-xen = selection.mirage-xen or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        ocb-stubblr = selection.ocb-stubblr;
        ppx_deriving = selection.ppx_deriving;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        sexplib = selection.sexplib;
        topkg = selection.topkg;
        zarith = selection.zarith;
        zarith-freestanding = selection.zarith-freestanding or null;
        zarith-xen = selection.zarith-xen or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:11j6ibvnmgaxmjlbpjdm8paq1gqgn81zhqd371jc2r5wpxmhn29y";
        package = "packages/nocrypto/nocrypto.0.5.4-2";
      };
      pname = "nocrypto";
      src = pkgs.fetchurl 
      {
        sha256 = "0zshi9hlhcz61n5z1k6fx6rsi0pl4xgahsyl2jp0crqkaf3hqwlg";
        url = "https://github.com/mirleft/ocaml-nocrypto/releases/download/v0.5.4/nocrypto-0.5.4.tbz";
      };
      version = "0.5.4-2";
    };
    num = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1x42ndx4shcwgn4c63h57j27bs08y8pyn4sqiizwl47bkcwhq1gj";
        package = "packages/num/num.1.3";
      };
      pname = "num";
      src = pkgs.fetchurl 
      {
        sha256 = "0kg96f7zapbb8hy6n9c53snwqs4rn5xvbdf5nb2m75gah47c6yag";
        url = "https://github.com/ocaml/num/archive/v1.3.tar.gz";
      };
      version = "1.3";
    };
    ocaml = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-config = selection.ocaml-config;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1f2v07fzx7rg0lc8pzs1s24vp49y0jyfxf98b9z57giik28dafgp";
        package = "packages/ocaml/ocaml.4.08.1";
      };
      pname = "ocaml";
      src = null;
      version = "4.08.1";
    };
    ocaml-base-compiler = 
    {
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1w9h2m91ya63x4jp5lvnnq3vfcnv1izmcq0i5k6n4g27br3l8ga9";
        package = "packages/ocaml-base-compiler/ocaml-base-compiler.4.08.1";
      };
      pname = "ocaml-base-compiler";
      src = pkgs.fetchurl 
      {
        sha256 = "11fvsm861lr73lk181gl5iczprp8d83fvgc1q6dx8gxqhzad6gmm";
        url = "https://github.com/ocaml/ocaml/archive/4.08.1.tar.gz";
      };
      version = "4.08.1";
    };
    ocaml-compiler-libs = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:13l8hnv1xclgpayfv8w827ly7il87j4qll7x15sbdrqk980c3jyg";
        package = "packages/ocaml-compiler-libs/ocaml-compiler-libs.v0.12.1";
      };
      pname = "ocaml-compiler-libs";
      src = pkgs.fetchurl 
      {
        sha256 = "014shj6g10xmclfps22igkiij5jysn8p6lv75h0s4vzjj9wj23yj";
        url = "https://github.com/janestreet/ocaml-compiler-libs/archive/v0.12.1.tar.gz";
      };
      version = "v0.12.1";
    };
    ocaml-config = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0g5s0yysgqdrbgx7vyh56fhx59xypw6hdwlcbzbqcgvj4zp4yy0c";
        package = "packages/ocaml-config/ocaml-config.1";
      };
      pname = "ocaml-config";
      src = null;
      version = "1";
    };
    ocaml-migrate-parsetree = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_derivers = selection.ppx_derivers;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:02ni76lc49343xc1wd58wwaacwkwc6dsgd6xwwsj2rnc4flr0wh9";
        package = "packages/ocaml-migrate-parsetree/ocaml-migrate-parsetree.1.7.3";
      };
      pname = "ocaml-migrate-parsetree";
      src = pkgs.fetchurl 
      {
        sha256 = "0mgv4h1dffgl4y51bhwrr0yj7q5x9znp4j3ij3r8fss7rxxp31bd";
        url = "https://github.com/ocaml-ppx/ocaml-migrate-parsetree/releases/download/v1.7.3/ocaml-migrate-parsetree-v1.7.3.tbz";
      };
      version = "1.7.3";
    };
    ocamlbuild = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0hrzb4fgz7qh7cr65j5yq6fai82fhyl6bp8s9pwcj1a2yhczbviv";
        package = "packages/ocamlbuild/ocamlbuild.0.14.0";
      };
      pname = "ocamlbuild";
      src = pkgs.fetchurl 
      {
        sha256 = "0y1fskw9rg2y1zgb7whv3v8v4xw04svgxslf3856q2aqd7lrrcl7";
        url = "https://github.com/ocaml/ocamlbuild/archive/0.14.0.tar.gz";
      };
      version = "0.14.0";
    };
    ocamlfind = 
    {
      opamInputs = 
      {
        conf-m4 = selection.conf-m4;
        graphics = selection.graphics or null;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:04z3rq1y20wfzmwvjm9wlg89cqqs8n37inhbwp4x2dsqbn0hqd81";
        package = "packages/ocamlfind/ocamlfind.1.8.1";
      };
      pname = "ocamlfind";
      src = pkgs.fetchurl 
      {
        sha256 = "00s3sfb02pnjmkax25pcnljcnhcggiliccfz69a72ic7gsjwz1cf";
        url = "http://download.camlcity.org/download/findlib-1.8.1.tar.gz";
      };
      version = "1.8.1";
    };
    ocamlgraph = 
    {
      opamInputs = 
      {
        conf-gnomecanvas = selection.conf-gnomecanvas or null;
        lablgtk = selection.lablgtk or null;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0p2aazb9plhzh5m8yyjr8a2im7w8gkbgmn9x8dvj01fz9rf4m9v7";
        package = "packages/ocamlgraph/ocamlgraph.1.8.8";
      };
      pname = "ocamlgraph";
      src = pkgs.fetchurl 
      {
        sha256 = "0m9g16wrrr86gw4fz2fazrh8nkqms0n863w7ndcvrmyafgxvxsnr";
        url = "http://ocamlgraph.lri.fr/download/ocamlgraph-1.8.8.tar.gz";
      };
      version = "1.8.8";
    };
    ocb-stubblr = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1lsn82a3pfnl0hwng4nxd9kyrn6dlj05anlxf1vkvi12qj4yfbhq";
        package = "packages/ocb-stubblr/ocb-stubblr.0.1.1-1";
      };
      pname = "ocb-stubblr";
      src = pkgs.fetchurl 
      {
        sha256 = "167b7x1j21mkviq8dbaa0nmk4rps2ilvzwx02igsc2706784z72f";
        url = "https://github.com/pqwy/ocb-stubblr/releases/download/v0.1.1/ocb-stubblr-0.1.1.tbz";
      };
      version = "0.1.1-1";
    };
    ocplib-endian = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        cppo = selection.cppo;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0j5ymxa4ky208k8m4bprvmvbqf9jnr4d0xwdaivznbv85jq9hw4q";
        package = "packages/ocplib-endian/ocplib-endian.1.1";
      };
      pname = "ocplib-endian";
      src = pkgs.fetchurl 
      {
        sha256 = "0qy5q7p11gxi5anhvi8jj6mr80ml0ih8lax5k579rsr2hsp3sns5";
        url = "https://github.com/OCamlPro/ocplib-endian/archive/1.1.tar.gz";
      };
      version = "1.1";
    };
    odoc = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        cmdliner = selection.cmdliner;
        cppo = selection.cppo;
        dune = selection.dune;
        fpath = selection.fpath;
        ocaml = selection.ocaml;
        result = selection.result;
        tyxml = selection.tyxml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1jgd6hq8v7fv49400w715ajy9m7pk55cny4k5m1b045w2n51i7by";
        package = "packages/odoc/odoc.1.5.1";
      };
      pname = "odoc";
      src = pkgs.fetchurl 
      {
        sha256 = "0krmkpci15x210f7l54imgc1wjp96wnpi1187yvbdap28h9p457a";
        url = "https://github.com/ocaml/odoc/releases/download/1.5.1/odoc-1.5.1.tbz";
      };
      version = "1.5.1";
    };
    opam-core = 
    {
      opamInputs = 
      {
        base-bigarray = selection.base-bigarray;
        base-unix = selection.base-unix;
        cppo = selection.cppo;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocamlgraph = selection.ocamlgraph;
        re = selection.re;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:075w2x4nxqg2ki4blyr4s5fks24yggrb3iczlxm0b0gfajb9wy1c";
        package = "packages/opam-core/opam-core.2.0.7";
      };
      pname = "opam-core";
      src = pkgs.fetchurl 
      {
        sha256 = "15b5c8f5hnhx8s4gcxfy509vv4r15wv2z5ds1p2gsqfdhwr8zwa2";
        url = "https://github.com/ocaml/opam/archive/2.0.7.tar.gz";
      };
      version = "2.0.7";
    };
    opam-file-format = 
    {
      opamInputs = 
      {
        dune = selection.dune or null;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:196mf5q4r92nyzd7bg7apigfjpmrd4bbih3n4qzs35wxcsmb2j16";
        package = "packages/opam-file-format/opam-file-format.2.1.0";
      };
      pname = "opam-file-format";
      src = pkgs.fetchurl 
      {
        sha256 = "1n7jw4zvhw8b9sypbhqy2zzyns27mbrmsnvqwfl5d196f8lxajhc";
        url = "https://github.com/ocaml/opam-file-format/archive/2.1.0.tar.gz";
      };
      version = "2.1.0";
    };
    opam-format = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        opam-core = selection.opam-core;
        opam-file-format = selection.opam-file-format;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:091bm5y7slpjl5fjb5z2pqh3fngv6dpqwq8xv46ss0liw5gcngml";
        package = "packages/opam-format/opam-format.2.0.7";
      };
      pname = "opam-format";
      src = pkgs.fetchurl 
      {
        sha256 = "15b5c8f5hnhx8s4gcxfy509vv4r15wv2z5ds1p2gsqfdhwr8zwa2";
        url = "https://github.com/ocaml/opam/archive/2.0.7.tar.gz";
      };
      version = "2.0.7";
    };
    opam-installer = 
    {
      opamInputs = 
      {
        cmdliner = selection.cmdliner;
        dune = selection.dune;
        ocaml = selection.ocaml;
        opam-format = selection.opam-format;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:008m3amfkn5ncxxc9pr7j7z4bv0m7n9pl92xyk97p1fv4in84vjj";
        package = "packages/opam-installer/opam-installer.2.0.7";
      };
      pname = "opam-installer";
      src = pkgs.fetchurl 
      {
        sha256 = "15b5c8f5hnhx8s4gcxfy509vv4r15wv2z5ds1p2gsqfdhwr8zwa2";
        url = "https://github.com/ocaml/opam/archive/2.0.7.tar.gz";
      };
      version = "2.0.7";
    };
    ounit = 
    {
      opamInputs = 
      {
        ocamlfind = selection.ocamlfind;
        ounit2 = selection.ounit2;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1x4phwmqjrc78x5hvg08q9yzhjrqinrv9z7yh5dnh5v9kdy6g49y";
        package = "packages/ounit/ounit.2.2.3";
      };
      pname = "ounit";
      src = pkgs.fetchurl 
      {
        sha256 = "1naahh24lbyxmrnzpfz8karniqbf1nknivf96mrvsr6zlx5ad072";
        url = "https://github.com/gildor478/ounit/releases/download/v2.2.3/ounit-v2.2.3.tbz";
      };
      version = "2.2.3";
    };
    ounit2 = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        base-unix = selection.base-unix;
        dune = selection.dune;
        ocaml = selection.ocaml;
        stdlib-shims = selection.stdlib-shims;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1g36gr31vbgk4igf5brw5cfislq42lp36wz2kcyb9yrg87bk43rb";
        package = "packages/ounit2/ounit2.2.2.3";
      };
      pname = "ounit2";
      src = pkgs.fetchurl 
      {
        sha256 = "1naahh24lbyxmrnzpfz8karniqbf1nknivf96mrvsr6zlx5ad072";
        url = "https://github.com/gildor478/ounit/releases/download/v2.2.3/ounit-v2.2.3.tbz";
      };
      version = "2.2.3";
    };
    parsexp = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0cw5wn470zqir9vhn9zp2d5glax6ygfmrz25j2ihx8i2m21pvwaa";
        package = "packages/parsexp/parsexp.v0.13.0";
      };
      pname = "parsexp";
      src = pkgs.fetchurl 
      {
        sha256 = "0m144jj63nmw4j88gbmrmkfr3f5bciln00gz1n13h61s6rzz01nq";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/parsexp-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    passe = 
    {
      opamInputs = 
      {
        lambda-term = selection.lambda-term;
        passe-common = selection.passe-common;
        passe-unix-common = selection.passe-unix-common;
        tls = selection.tls;
      };
      opamSrc = "passe.opam";
      pname = "passe";
      src = self.directSrc "passe";
      version = "development";
    };
    passe-common = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        base64 = selection.base64;
        cohttp = selection.cohttp;
        conf-git = selection.conf-git;
        conf-python-3 = selection.conf-python-3;
        dune = selection.dune;
        hex = selection.hex;
        logs = selection.logs;
        lwt = selection.lwt;
        lwt_ppx = selection.lwt_ppx;
        lwt_react = selection.lwt_react;
        mirage = selection.mirage;
        mirage-clock-unix = selection.mirage-clock-unix;
        mirage-fs-unix = selection.mirage-fs-unix;
        mirage-types = selection.mirage-types;
        mirage-types-lwt = selection.mirage-types-lwt;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        ounit = selection.ounit;
        ptime = selection.ptime;
        react = selection.react;
        rresult = selection.rresult;
        uri = selection.uri;
        yojson = selection.yojson;
      };
      opamSrc = "passe-common.opam";
      pname = "passe-common";
      src = self.directSrc "passe-common";
      version = "development";
    };
    passe-server = 
    {
      opamInputs = 
      {
        conduit = selection.conduit;
        dns-lwt-unix = selection.dns-lwt-unix;
        js_of_ocaml = selection.js_of_ocaml;
        nocrypto = selection.nocrypto;
        opam-installer = selection.opam-installer;
        passe-common = selection.passe-common;
        passe-unix-common = selection.passe-unix-common;
        re = selection.re;
        safepass = selection.safepass;
        tcpip = selection.tcpip;
        vdoml = selection.vdoml;
      };
      opamSrc = "passe-server.opam";
      pname = "passe-server";
      src = self.directSrc "passe-server";
      version = "development";
    };
    passe-unix-common = 
    {
      opamInputs = 
      {
        cohttp-lwt = selection.cohttp-lwt;
        cohttp-lwt-unix = selection.cohttp-lwt-unix;
        extlib = selection.extlib;
      };
      opamSrc = "passe-unix-common.opam";
      pname = "passe-unix-common";
      src = self.directSrc "passe-unix-common";
      version = "development";
    };
    ppx_cstruct = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ppx_tools_versioned = selection.ppx_tools_versioned;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:08fc4gsajjgjq3jiq3g3v4w4jm6p913mrk1b0rw17h0392llf6zd";
        package = "packages/ppx_cstruct/ppx_cstruct.3.7.0";
      };
      pname = "ppx_cstruct";
      src = pkgs.fetchurl 
      {
        sha256 = "0c6kw3dqx7skrc2v883f2slq1javbcmw173vlmsbygkk4y3m0d2c";
        url = "https://github.com/mirage/ocaml-cstruct/releases/download/v3.7.0/cstruct-v3.7.0.tbz";
      };
      version = "3.7.0";
    };
    ppx_derivers = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0r8rjp4m5jfbf3wz8qlgh82pxjws4arjwxhqq0zjglby6l6h8p3x";
        package = "packages/ppx_derivers/ppx_derivers.1.2.1";
      };
      pname = "ppx_derivers";
      src = pkgs.fetchurl 
      {
        sha256 = "159vqy616ni18mn0dlv8c2y4h7mb4hahwjn53yrr59yyhzhmwndn";
        url = "https://github.com/ocaml-ppx/ppx_derivers/archive/1.2.1.tar.gz";
      };
      version = "1.2.1";
    };
    ppx_deriving = 
    {
      opamInputs = 
      {
        cppo = selection.cppo;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ppx_derivers = selection.ppx_derivers;
        ppx_tools = selection.ppx_tools;
        ppxfind = selection.ppxfind;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:09f0j3zhwyynnl6dk4i4sd3c7rp09vb5iv3chnf73wcz4dnm7lmn";
        package = "packages/ppx_deriving/ppx_deriving.4.5";
      };
      pname = "ppx_deriving";
      src = pkgs.fetchurl 
      {
        sha256 = "0c8j7hzmn8id7gcq8540c4r1aafcp1ydn93hhd0kj46awxkas5w9";
        url = "https://github.com/ocaml-ppx/ppx_deriving/archive/v4.5.tar.gz";
      };
      version = "4.5";
    };
    ppx_fields_conv = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        fieldslib = selection.fieldslib;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:177ar3qkdsc3sb8i5rfbm11p8l4q9zm0sznhvsk88pzr18pwx1yb";
        package = "packages/ppx_fields_conv/ppx_fields_conv.v0.13.0";
      };
      pname = "ppx_fields_conv";
      src = pkgs.fetchurl 
      {
        sha256 = "03j9vmbs60ivga1w2qcnjn2d149yzkns2q341ni3qqa570lcwzsj";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/ppx_fields_conv-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    ppx_sexp_conv = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0vd5bins4dhwnp8w552vafshsqj1gm9hna5y0xxpf9bqhkvr1426";
        package = "packages/ppx_sexp_conv/ppx_sexp_conv.v0.13.0";
      };
      pname = "ppx_sexp_conv";
      src = pkgs.fetchurl 
      {
        sha256 = "0yppy47zjn8nb73lnk4d3lhpmcia1rr8bka56n32sla4yz1y148n";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/ppx_sexp_conv-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    ppx_tools = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:01zmm20wsnp1slmw0mmiphc4fl8a8x5pb7i48p8ayyp8kw0k5hsm";
        package = "packages/ppx_tools/ppx_tools.6.2";
      };
      pname = "ppx_tools";
      src = pkgs.fetchurl 
      {
        sha256 = "046sid5g8si60mv5gbjvjfj2n7m9lzmmc6mmkhsc30cvn11pvr2r";
        url = "https://github.com/ocaml-ppx/ppx_tools/archive/6.2.tar.gz";
      };
      version = "6.2";
    };
    ppx_tools_versioned = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0gvay8n8s2vy81pzvym8c6zmp5b6w8lcs9fwys7zp2j1s8rgrax2";
        package = "packages/ppx_tools_versioned/ppx_tools_versioned.5.4.0";
      };
      pname = "ppx_tools_versioned";
      src = pkgs.fetchurl 
      {
        sha256 = "0sw2676vgbsj133lgs3sl8494fhfldafzvgw4j4dnb1wqwha6pxy";
        url = "https://github.com/ocaml-ppx/ppx_tools_versioned/archive/5.4.0.tar.gz";
      };
      version = "5.4.0";
    };
    ppxfind = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:047srb1adv0v63f1dgbd814w3xqvcn1rk374yv3wisgpb8qvhx2v";
        package = "packages/ppxfind/ppxfind.1.4";
      };
      pname = "ppxfind";
      src = pkgs.fetchurl 
      {
        sha256 = "0wa9vcrc26kirc2cqqs6kmarbi8gqy3dgdfiv9y7nzsgy1liqacq";
        url = "https://github.com/jeremiedimino/ppxfind/releases/download/1.4/ppxfind-1.4.tbz";
      };
      version = "1.4";
    };
    ppxlib = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-compiler-libs = selection.ocaml-compiler-libs;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ppx_derivers = selection.ppx_derivers;
        stdio = selection.stdio;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1dagj96v3s8vmylrc8j9wdb5b27syyixi8cfq4r6wjz735hvmrwi";
        package = "packages/ppxlib/ppxlib.0.13.0";
      };
      pname = "ppxlib";
      src = pkgs.fetchurl 
      {
        sha256 = "1n9rxqf3i45xm723vvr1bh568ydqlbfv1m88c5zhw3jh139z7qc1";
        url = "https://github.com/ocaml-ppx/ppxlib/releases/download/0.13.0/ppxlib-0.13.0.tbz";
      };
      version = "0.13.0";
    };
    psq = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        seq = selection.seq;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1ianna2zs6qc26zmcmpy3ks6h7v79aw80kz3r4jr01h4qrh9nyni";
        package = "packages/psq/psq.0.1.1";
      };
      pname = "psq";
      src = pkgs.fetchurl 
      {
        sha256 = "0apgx1glgkp0pcdlvvill0y52fj1dsiwv3igwgg5zqykdiz5gjjq";
        url = "https://github.com/pqwy/psq/releases/download/v0.1.1/psq-v0.1.1.tbz";
      };
      version = "0.1.1";
    };
    ptime = 
    {
      opamInputs = 
      {
        js_of_ocaml = selection.js_of_ocaml or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        result = selection.result;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0ldzn2jmz8c3n9rr4mqyfa92lkb3378cmik3klznbln7lsf4fa1v";
        package = "packages/ptime/ptime.0.8.5";
      };
      pname = "ptime";
      src = pkgs.fetchurl 
      {
        sha256 = "1fxq57xy1ajzfdnvv5zfm7ap2nf49znw5f9gbi4kb9vds942ij27";
        url = "https://erratique.ch/software/ptime/releases/ptime-0.8.5.tbz";
      };
      version = "0.8.5";
    };
    randomconv = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1ccbnww59y1fb8hccgvks70bqkhzjxsyi21222042brsgdy8zx4h";
        package = "packages/randomconv/randomconv.0.1.3";
      };
      pname = "randomconv";
      src = pkgs.fetchurl 
      {
        sha256 = "1iv3r0s5kqxs893b0d55f0r62k777haiahfkkvvfbqwgqsm6la4v";
        url = "https://github.com/hannesm/randomconv/releases/download/v0.1.3/randomconv-v0.1.3.tbz";
      };
      version = "0.1.3";
    };
    re = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        seq = selection.seq;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:10m5h5myw3pnjvk7z1j7hhx18zpbm7kad2196ljgvj7y169zba61";
        package = "packages/re/re.1.9.0";
      };
      pname = "re";
      src = pkgs.fetchurl 
      {
        sha256 = "1gas4ky49zgxph3870nffzkr6y41kkpqp4nj38pz1gh49zcf12aj";
        url = "https://github.com/ocaml/ocaml-re/releases/download/1.9.0/re-1.9.0.tbz";
      };
      version = "1.9.0";
    };
    react = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0wk5i83r2hxz1r1skkhzz8rild68m4g9i9blxigbg9r60hgw18z5";
        package = "packages/react/react.1.2.1";
      };
      pname = "react";
      src = pkgs.fetchurl 
      {
        sha256 = "1aj8w79gdd9xnrbz7s5p8glcb4pmimi8jp9f439dqnf6ih3mqb3v";
        url = "http://erratique.ch/software/react/releases/react-1.2.1.tbz";
      };
      version = "1.2.1";
    };
    result = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:159gmr00z6jmpxvk83vnv738ls4kbzfn8p5042i87m6p8damaxhc";
        package = "packages/result/result.1.4";
      };
      pname = "result";
      src = pkgs.fetchurl 
      {
        sha256 = "1cjlncnzkwc6zr4v8dgy8nin490blbyxzwwp0qh0cla7s3q2jw0n";
        url = "https://github.com/janestreet/result/archive/1.4.tar.gz";
      };
      version = "1.4";
    };
    rresult = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        result = selection.result;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:10vaq82rzip2rn1rbq27pjckvqassjh1n58pnsypldqaahxnbca6";
        package = "packages/rresult/rresult.0.6.0";
      };
      pname = "rresult";
      src = pkgs.fetchurl 
      {
        sha256 = "1k69a3gvrk7f2cshwjzvk7818f0bwxhacgd14wxy6d4gmrggci86";
        url = "http://erratique.ch/software/rresult/releases/rresult-0.6.0.tbz";
      };
      version = "0.6.0";
    };
    safepass = 
    {
      opamInputs = 
      {
        jbuilder = selection.jbuilder;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0vji52p3bpg7d4i4x6nvbfcn0naplvcb975mf18hl766hfnhyrj9";
        package = "packages/safepass/safepass.3.0";
      };
      pname = "safepass";
      src = pkgs.fetchurl 
      {
        sha256 = "0s2fp9xgall71qc4gb73gpw34nv5cyh9qzvmz4qqxzvkj04la4x2";
        url = "https://github.com/darioteixeira/ocaml-safepass/archive/v3.0.tar.gz";
      };
      version = "3.0";
    };
    seq = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1vm8mk6zm2q3fwnkprl6jib048zr4ysldw0bl74x6wwbxj0vx6k9";
        package = "packages/seq/seq.base";
      };
      pname = "seq";
      src = null;
      version = "base";
    };
    sexplib = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        num = selection.num;
        ocaml = selection.ocaml;
        parsexp = selection.parsexp;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0az4i6jnc9xc5y1ki7ihzd7g6d6vgwi7r2ih6j45ypx5zlmydv81";
        package = "packages/sexplib/sexplib.v0.13.0";
      };
      pname = "sexplib";
      src = pkgs.fetchurl 
      {
        sha256 = "0sfn9i7wydphkqg3156ck0wlibj9mm8w3j52jrgh2qgqgwq3h13v";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/sexplib-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    sexplib0 = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1jvzjhd83ik7siqhjfsrvx9vbbcq5qykix7621nmyh0c40kpghgi";
        package = "packages/sexplib0/sexplib0.v0.13.0";
      };
      pname = "sexplib0";
      src = pkgs.fetchurl 
      {
        sha256 = "08g0w2gnn682c6a82d22b4yv70j7i2vgk0z5imca6nly3ddgdhj3";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/sexplib0-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    stdio = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0b3xwxyifn8kg3lfp568s9n7c15mkg74p4clx169xaj16q9gnh60";
        package = "packages/stdio/stdio.v0.13.0";
      };
      pname = "stdio";
      src = pkgs.fetchurl 
      {
        sha256 = "0bb60kb027nfdh5ah76nwy0q3zcdsqydglly61kx7a12yjlcgvwm";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.13/files/stdio-v0.13.0.tar.gz";
      };
      version = "v0.13.0";
    };
    stdlib-shims = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:041f37xj7k9np8fkn3ccp5594a198ijivjndqdzi0a3sr587a5p9";
        package = "packages/stdlib-shims/stdlib-shims.0.1.0";
      };
      pname = "stdlib-shims";
      src = pkgs.fetchurl 
      {
        sha256 = "1jv6yb47f66239m7hsz7zzw3i48mjpbvfgpszws48apqx63wjwsk";
        url = "https://github.com/ocaml/stdlib-shims/releases/download/0.1.0/stdlib-shims-0.1.0.tbz";
      };
      version = "0.1.0";
    };
    stringext = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:15m8a67mps6y22mm5sxpw9b0lldfcmsxim7b331d4qv3l86118gs";
        package = "packages/stringext/stringext.1.6.0";
      };
      pname = "stringext";
      src = pkgs.fetchurl 
      {
        sha256 = "1sh6nafi3i9773j5mlwwz3kxfzdjzsfqj2qibxhigawy5vazahfv";
        url = "https://github.com/rgrinberg/stringext/releases/download/1.6.0/stringext-1.6.0.tbz";
      };
      version = "1.6.0";
    };
    tcpip = 
    {
      opamInputs = 
      {
        configurator = selection.configurator;
        cstruct = selection.cstruct;
        cstruct-lwt = selection.cstruct-lwt;
        dune = selection.dune;
        duration = selection.duration;
        ethernet = selection.ethernet;
        fmt = selection.fmt;
        io-page-unix = selection.io-page-unix;
        ipaddr = selection.ipaddr;
        logs = selection.logs;
        lru = selection.lru;
        lwt = selection.lwt;
        lwt-dllist = selection.lwt-dllist;
        macaddr = selection.macaddr;
        mirage-clock = selection.mirage-clock;
        mirage-clock-lwt = selection.mirage-clock-lwt;
        mirage-net = selection.mirage-net;
        mirage-net-lwt = selection.mirage-net-lwt;
        mirage-profile = selection.mirage-profile;
        mirage-protocols = selection.mirage-protocols;
        mirage-protocols-lwt = selection.mirage-protocols-lwt;
        mirage-random = selection.mirage-random;
        mirage-stack-lwt = selection.mirage-stack-lwt;
        mirage-time-lwt = selection.mirage-time-lwt;
        mirage-xen-ocaml = selection.mirage-xen-ocaml or null;
        ocaml = selection.ocaml;
        randomconv = selection.randomconv;
        rresult = selection.rresult;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1k8gdkad9zr8jk38vchs5x6bahshs8w3cfamhiiygrcsyhl024ll";
        package = "packages/tcpip/tcpip.3.7.0";
      };
      pname = "tcpip";
      src = pkgs.fetchurl 
      {
        sha256 = "1xmvnsr3xc4gnrhbhddh6s0z9b580apsfapffdm3va629p053456";
        url = "https://github.com/mirage/mirage-tcpip/releases/download/v3.7.0/tcpip-v3.7.0.tbz";
      };
      version = "3.7.0";
    };
    tls = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        lwt = selection.lwt or null;
        mirage-clock = selection.mirage-clock or null;
        mirage-flow-lwt = selection.mirage-flow-lwt or null;
        mirage-kv-lwt = selection.mirage-kv-lwt or null;
        nocrypto = selection.nocrypto;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        ppx_cstruct = selection.ppx_cstruct;
        ppx_deriving = selection.ppx_deriving;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        ptime = selection.ptime or null;
        result = selection.result;
        sexplib = selection.sexplib;
        topkg = selection.topkg;
        x509 = selection.x509;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:13bkn0lslcxhcfiv86qqw0pflc8c5cbpw009n0s2h0kh2mc8vbvc";
        package = "packages/tls/tls.0.9.3";
      };
      pname = "tls";
      src = pkgs.fetchurl 
      {
        sha256 = "15ry911rljx69yp94njgy3z428gp5n6kc5wacwaabvwzr3vgppa6";
        url = "https://github.com/mirleft/ocaml-tls/releases/download/0.9.3/tls-0.9.3.tbz";
      };
      version = "0.9.3";
    };
    topkg = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0lh258gci0jkvpsgdn29z7izny7zf4b2bms7gnxd93kll3k2j8rb";
        package = "packages/topkg/topkg.1.0.2";
      };
      pname = "topkg";
      src = pkgs.fetchurl 
      {
        sha256 = "1h9lspfj94673iwhjbqvyq7jhnvpm3ij0y2l3iiyz6i716j321nh";
        url = "http://erratique.ch/software/topkg/releases/topkg-1.0.2.tbz";
      };
      version = "1.0.2";
    };
    trie = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:19fpyjxqyniqjnpbqxbdb9i8khn33aqmn144h30apbdq8pxb950i";
        package = "packages/trie/trie.1.0.0";
      };
      pname = "trie";
      src = pkgs.fetchurl 
      {
        sha256 = "1slq4kiwnc723dsaw15ms7xxpqz061v8zck1m6iyc5j2li70by62";
        url = "https://github.com/kandu/trie/archive/1.0.0.tar.gz";
      };
      version = "1.0.0";
    };
    tyxml = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        re = selection.re;
        seq = selection.seq;
        uutf = selection.uutf;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1q246zb57qzc8v8a2yznc069jh1rxazd8hbgjs0pgk1dgfy7m4bs";
        package = "packages/tyxml/tyxml.4.4.0";
      };
      pname = "tyxml";
      src = pkgs.fetchurl 
      {
        sha256 = "0c150h2f4c4id73ickkdqkir3jya66m6c7f5jxlp4caw9bfr8qsi";
        url = "https://github.com/ocsigen/tyxml/releases/download/4.4.0/tyxml-4.4.0.tbz";
      };
      version = "4.4.0";
    };
    uchar = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:17sfpyj5a1z3knnjvnfa5vql6cj2x9pzgzk8w4jrvd2zii2bwpcl";
        package = "packages/uchar/uchar.0.0.2";
      };
      pname = "uchar";
      src = pkgs.fetchurl 
      {
        sha256 = "1w2saw7zanf9m9ffvz2lvcxvlm118pws2x1wym526xmydhqpyfa7";
        url = "https://github.com/ocaml/uchar/releases/download/v0.0.2/uchar-0.0.2.tbz";
      };
      version = "0.0.2";
    };
    uri = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        re = selection.re;
        sexplib0 = selection.sexplib0;
        stringext = selection.stringext;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0a4nwc633l8843amiqad7lpr8rnnfdjpxsjq4r1xmhdz4jz45pnm";
        package = "packages/uri/uri.2.2.1";
      };
      pname = "uri";
      src = pkgs.fetchurl 
      {
        sha256 = "0szm7gndlxr3jvb59sswbirqfyygy9syg1ayysri344vmvdqwd7n";
        url = "https://github.com/mirage/ocaml-uri/releases/download/v2.2.1/uri-v2.2.1.tbz";
      };
      version = "2.2.1";
    };
    uutf = 
    {
      opamInputs = 
      {
        cmdliner = selection.cmdliner or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
        uchar = selection.uchar;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1j4hkk196lg1dsnf6jb1n8y3na606lkfb5vlr0gjb53qc7pdh6cy";
        package = "packages/uutf/uutf.1.0.2";
      };
      pname = "uutf";
      src = pkgs.fetchurl 
      {
        sha256 = "1nx1rly3qj23jzn9yk3x6fwqimcxjd84kv5859vvhdg56psq26p6";
        url = "http://erratique.ch/software/uutf/releases/uutf-1.0.2.tbz";
      };
      version = "1.0.2";
    };
    vdoml = 
    {
      opamInputs = 
      {
        conf-python-2-7 = selection.conf-python-2-7;
        dune = selection.dune;
        js_of_ocaml = selection.js_of_ocaml;
        js_of_ocaml-lwt = selection.js_of_ocaml-lwt;
        js_of_ocaml-ppx = selection.js_of_ocaml-ppx;
        logs = selection.logs;
        lwt = selection.lwt;
        lwt_ppx = selection.lwt_ppx;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
        odoc = selection.odoc;
      };
      opamSrc = "vdoml.opam";
      pname = "vdoml";
      src = self.directSrc "vdoml";
      version = "development";
    };
    x509 = 
    {
      opamInputs = 
      {
        asn1-combinators = selection.asn1-combinators;
        astring = selection.astring;
        cstruct = selection.cstruct;
        nocrypto = selection.nocrypto;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        ptime = selection.ptime;
        result = selection.result;
        sexplib = selection.sexplib;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:10lh595mpmf1bxy8rfpaqzg94jrqfmbnghnryp20pnwxk5nr4zws";
        package = "packages/x509/x509.0.6.2";
      };
      pname = "x509";
      src = pkgs.fetchurl 
      {
        sha256 = "1s8zis89rz5mffvk1nzbfmx5z1x4ifayawz5y22ivrhsak8rz71s";
        url = "https://github.com/mirleft/ocaml-x509/releases/download/0.6.2/x509-0.6.2.tbz";
      };
      version = "0.6.2";
    };
    yojson = 
    {
      opamInputs = 
      {
        biniou = selection.biniou;
        cppo = selection.cppo;
        dune = selection.dune;
        easy-format = selection.easy-format;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0w79z13cfm7rma867jcqpczsjdl7sb1h54bdx4ma31639jyzdscq";
        package = "packages/yojson/yojson.1.5.0";
      };
      pname = "yojson";
      src = pkgs.fetchurl 
      {
        sha256 = "0cwb1kbpf98imsbkaa5km0a34gbmapi35s7a8rjp7gfyzrrgk83h";
        url = "https://github.com/ocaml-community/yojson/releases/download/1.5.0/yojson-1.5.0.tbz";
      };
      version = "1.5.0";
    };
    zarith = 
    {
      opamInputs = 
      {
        conf-gmp = selection.conf-gmp;
        conf-perl = selection.conf-perl;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:10y477fjig8d6chpmgdmpv683h78kshkmw3dmhi6sjid4gk6pc52";
        package = "packages/zarith/zarith.1.9.1";
      };
      pname = "zarith";
      src = pkgs.fetchurl 
      {
        sha256 = "0pfa271476dic5pvn6kxz3dfswxs6kqm2cxmhdx5xq2ayca05gj9";
        url = "https://github.com/ocaml/Zarith/archive/release-1.9.1.tar.gz";
      };
      version = "1.9.1";
    };
    zed = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        camomile = selection.camomile;
        charInfo_width = selection.charInfo_width;
        dune = selection.dune;
        ocaml = selection.ocaml;
        react = selection.react;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:163xyha7x4q4fd1aai8cll72py1jkp9bl1qpz9smqn3dbzfrkrk0";
        package = "packages/zed/zed.3.1.0";
      };
      pname = "zed";
      src = pkgs.fetchurl 
      {
        sha256 = "1z95fs49hi00xy078a83m0vfdqwjb5953rwr15lfpirldi4v11y3";
        url = "https://github.com/ocaml-community/zed/archive/3.1.0.tar.gz";
      };
      version = "3.1.0";
    };
  };
}

