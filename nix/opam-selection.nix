### This file is generated by opam2nix.

self:
let
    lib = self.lib;
    opam-commit = "fe7287db1d181301806bfb03d74368b2fc7f567a";
    pkgs = self.pkgs;
    repo = (pkgs.fetchFromGitHub) 
    {
      owner = "ocaml";
      repo = "opam-repository";
      rev = opam-commit;
      sha256 = "0hspp7f66nk4194aladpdzhjb1mizp53q5j7ya6ack5biyrkx4q3";
    };
    repoPath = self.repoPath;
    selection = self.selection;
in
{
  format-version = 4;
  ocaml-version = "4.08.1";
  opam-commit = opam-commit;
  selection = 
  {
    asn1-combinators = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        ounit = selection.ounit or null;
        ptime = selection.ptime;
        result = selection.result;
        topkg = selection.topkg;
        zarith = selection.zarith;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:11rqcn55jypsvv8lkq9dxsfj3ikwdwhfz1iymhvqx12d39wq79c4";
        package = "packages/asn1-combinators/asn1-combinators.0.2.0";
      };
      pname = "asn1-combinators";
      src = pkgs.fetchurl 
      {
        sha256 = "1cgkrx13bvkxa66qparv3ginx7ycdincx3n6jgrym62g945pz78h";
        url = "https://github.com/mirleft/ocaml-asn1-combinators/releases/download/v0.2.0/asn1-combinators-0.2.0.tbz";
      };
      version = "0.2.0";
    };
    astring = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0y7bxwdmjwxzad2fhfsvzj3idw4sw4z2zb3n8yr4fkla9s9hbma9";
        package = "packages/astring/astring.0.8.3";
      };
      pname = "astring";
      src = pkgs.fetchurl 
      {
        sha256 = "0ixjwc3plrljvj24za3l9gy0w30lsbggp8yh02lwrzw61ls4cri0";
        url = "http://erratique.ch/software/astring/releases/astring-0.8.3.tbz";
      };
      version = "0.8.3";
    };
    base = 
    {
      opamInputs = 
      {
        base-native-int63 = selection.base-native-int63 or null;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0q2bkaax0kac47jmgwpxbvzs88dnziac16gqi8gyrq0hlgzvxdla";
        package = "packages/base/base.v0.12.2";
      };
      pname = "base";
      src = pkgs.fetchurl 
      {
        sha256 = "1nfhy6mfc6i0xagz14arqbww8waqzadqbsa0ip1nfb21g23zma0a";
        url = "https://github.com/janestreet/base/archive/v0.12.2.tar.gz";
      };
      version = "v0.12.2";
    };
    base-bytes = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0a68lmbf68jgm1i3b59j2sc3ha9yhv4678f9mfwwvczw88prq7l3";
        package = "packages/base-bytes/base-bytes.base";
      };
      pname = "base-bytes";
      src = null;
      version = "base";
    };
    base-threads = 
    {
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1c4bpyh61ampjgk5yh3inrgcpf1z1xv0pshn54ycmpn4dyzv0p2x";
        package = "packages/base-threads/base-threads.base";
      };
      pname = "base-threads";
      src = null;
      version = "base";
    };
    base-unix = 
    {
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0mpsvb7684g723ylngryh15aqxg3blb7hgmq2fsqjyppr36iyzwg";
        package = "packages/base-unix/base-unix.base";
      };
      pname = "base-unix";
      src = null;
      version = "base";
    };
    base64 = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        base-bytes = selection.base-bytes;
        bos = selection.bos or null;
        dune = selection.dune;
        rresult = selection.rresult or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0jdxc8c4njs6k5qsd7rc5ipnlylz92w2lxzf50ckj0jmws0pmr6j";
        package = "packages/base64/base64.2.3.0";
      };
      pname = "base64";
      src = pkgs.fetchurl 
      {
        sha256 = "17dy2mgd8qbjlf0mzxbf0cg2gwy7w2lfxanvpg1s17jxssy1ghks";
        url = "https://github.com/mirage/ocaml-base64/releases/download/v2.3.0/base64-v2.3.0.tbz";
      };
      version = "2.3.0";
    };
    bigarray-compat = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0lbmlg7kqy0bvca7v5qib69ayiryy5hlkzhzfg7qwq9n29aygc97";
        package = "packages/bigarray-compat/bigarray-compat.1.0.0";
      };
      pname = "bigarray-compat";
      src = pkgs.fetchurl 
      {
        sha256 = "1bpmmnxb1yx72aqlbdaqfl18rgz1cq9cf6cqvnfl88mz5dfr4x0d";
        url = "https://github.com/mirage/bigarray-compat/archive/v1.0.0.tar.gz";
      };
      version = "1.0.0";
    };
    biniou = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        easy-format = selection.easy-format;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:12ykyqa9piw1gny1flsi43qph411alzsm3rr8cgs5ap4drk3xbrd";
        package = "packages/biniou/biniou.1.2.1";
      };
      pname = "biniou";
      src = pkgs.fetchurl 
      {
        sha256 = "0da3m0g0dhl02jfynrbysjh070xk2z6rxcx34xnqx6ljn5l6qm1m";
        url = "https://github.com/mjambon/biniou/releases/download/1.2.1/biniou-1.2.1.tbz";
      };
      version = "1.2.1";
    };
    bos = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        base-unix = selection.base-unix;
        fmt = selection.fmt;
        fpath = selection.fpath;
        logs = selection.logs;
        mtime = selection.mtime or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        rresult = selection.rresult;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:076a3ppiizh20fj0mg0xsprshzpdv3j1avfpsxpzaxzh72fchpch";
        package = "packages/bos/bos.0.2.0";
      };
      pname = "bos";
      src = pkgs.fetchurl 
      {
        sha256 = "1s10iqx8rgnxr5n93lf4blwirjf8nlm272yg5sipr7lsr35v49wc";
        url = "http://erratique.ch/software/bos/releases/bos-0.2.0.tbz";
      };
      version = "0.2.0";
    };
    camomile = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0r38mkgbfbbma0s6ccyqxmn27jby7jpfqjadblmv6wkd0g4kx588";
        package = "packages/camomile/camomile.1.0.2";
      };
      pname = "camomile";
      src = pkgs.fetchurl 
      {
        sha256 = "0chn7ldqb3wyf95yhmsxxq65cif56smgz1mhhc7m0dpwmyq1k97h";
        url = "https://github.com/yoriyuki/Camomile/releases/download/1.0.2/camomile-1.0.2.tbz";
      };
      version = "1.0.2";
    };
    charInfo_width = 
    {
      opamInputs = 
      {
        camomile = selection.camomile;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_expect = selection.ppx_expect or null;
        result = selection.result;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0k7czdg1flqgscmp31dggdw2nlj02jkvy4zkb0m5g4q0p9qqikb8";
        package = "packages/charInfo_width/charInfo_width.1.1.0";
      };
      pname = "charInfo_width";
      src = pkgs.fetchurl 
      {
        sha256 = "00bv4p1yqs8y0z4z07wd9w9yyv669dikp9b04dcjbwpiy2wy0086";
        url = "https://bitbucket.org/zandoye/charinfo_width/get/1.1.0.tar.gz";
      };
      version = "1.1.0";
    };
    cmdliner = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:05qlm4yp6124w2z10dpdchldfrmgmcr6h31rnxp8qs8mk0xzx48z";
        package = "packages/cmdliner/cmdliner.1.0.4";
      };
      pname = "cmdliner";
      src = pkgs.fetchurl 
      {
        sha256 = "1h04q0zkasd0mw64ggh4y58lgzkhg6yhzy60lab8k8zq9ba96ajw";
        url = "http://erratique.ch/software/cmdliner/releases/cmdliner-1.0.4.tbz";
      };
      version = "1.0.4";
    };
    cohttp = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        base64 = selection.base64;
        dune = selection.dune;
        fieldslib = selection.fieldslib;
        fmt = selection.fmt or null;
        jsonm = selection.jsonm;
        ocaml = selection.ocaml;
        ppx_fields_conv = selection.ppx_fields_conv;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        re = selection.re;
        sexplib0 = selection.sexplib0;
        stringext = selection.stringext;
        uri = selection.uri;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1l3rgirc80s4awjyhvdzffn9wrlvxk0wdx1awd2hca11sdhmy23q";
        package = "packages/cohttp/cohttp.1.2.0";
      };
      pname = "cohttp";
      src = pkgs.fetchurl 
      {
        sha256 = "0hm9v92d94k25xv6wlgp4fnwy2iahvxac6w8ak5cargb59jsaw9z";
        url = "https://github.com/mirage/ocaml-cohttp/releases/download/v1.2.0/cohttp-v1.2.0.tbz";
      };
      version = "1.2.0";
    };
    cohttp-lwt = 
    {
      opamInputs = 
      {
        cohttp = selection.cohttp;
        dune = selection.dune;
        logs = selection.logs;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0p78cbiigf8bm693rna1cfh6yr2z7hpgx2s68clnicz93gidpgy0";
        package = "packages/cohttp-lwt/cohttp-lwt.2.1.3";
      };
      pname = "cohttp-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "1xzgnn7p7pzwf1qaljwyxj04lkq4lc9g0fgbpwwc4m7lvc4x77bd";
        url = "https://github.com/mirage/ocaml-cohttp/releases/download/v2.1.3/cohttp-v2.1.3.tbz";
      };
      version = "2.1.3";
    };
    cohttp-lwt-unix = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        cmdliner = selection.cmdliner;
        cohttp-lwt = selection.cohttp-lwt;
        conduit-lwt-unix = selection.conduit-lwt-unix;
        dune = selection.dune;
        fmt = selection.fmt;
        logs = selection.logs;
        lwt = selection.lwt;
        magic-mime = selection.magic-mime;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0aa81q7npysji9lv3wf14gcl01szjl2dazrsyqx7pflm15ljs8jz";
        package = "packages/cohttp-lwt-unix/cohttp-lwt-unix.2.1.3";
      };
      pname = "cohttp-lwt-unix";
      src = pkgs.fetchurl 
      {
        sha256 = "1xzgnn7p7pzwf1qaljwyxj04lkq4lc9g0fgbpwwc4m7lvc4x77bd";
        url = "https://github.com/mirage/ocaml-cohttp/releases/download/v2.1.3/cohttp-v2.1.3.tbz";
      };
      version = "2.1.3";
    };
    conduit = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        dune = selection.dune;
        ipaddr = selection.ipaddr;
        logs = selection.logs;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        result = selection.result;
        sexplib = selection.sexplib;
        uri = selection.uri;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1d1yw3sgcrgvhqr144hijfk6nfadqcr8dxcn06fwjh39zpfr659s";
        package = "packages/conduit/conduit.1.4.0";
      };
      pname = "conduit";
      src = pkgs.fetchurl 
      {
        sha256 = "01hjypx2a9my10h7cy79aaavkf08ar58gfk2b2zjy9dwzx7f9qcd";
        url = "https://github.com/mirage/ocaml-conduit/releases/download/v1.4.0/conduit-v1.4.0.tbz";
      };
      version = "1.4.0";
    };
    conduit-lwt = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        conduit = selection.conduit;
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        sexplib = selection.sexplib;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1gxqfnjvvdahn9h7qc6rcqvvr95rmlvrf7s2fa1fc02ziykc7b3k";
        package = "packages/conduit-lwt/conduit-lwt.1.4.0";
      };
      pname = "conduit-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "01hjypx2a9my10h7cy79aaavkf08ar58gfk2b2zjy9dwzx7f9qcd";
        url = "https://github.com/mirage/ocaml-conduit/releases/download/v1.4.0/conduit-v1.4.0.tbz";
      };
      version = "1.4.0";
    };
    conduit-lwt-unix = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        conduit-lwt = selection.conduit-lwt;
        dune = selection.dune;
        ipaddr = selection.ipaddr;
        launchd = selection.launchd or null;
        lwt = selection.lwt;
        lwt_ssl = selection.lwt_ssl or null;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        tls = selection.tls or null;
        uri = selection.uri;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1d786d2h9qpzpcmi202di02pz66g79x7yh4hp8ngnr93vh30dvlf";
        package = "packages/conduit-lwt-unix/conduit-lwt-unix.1.4.0";
      };
      pname = "conduit-lwt-unix";
      src = pkgs.fetchurl 
      {
        sha256 = "01hjypx2a9my10h7cy79aaavkf08ar58gfk2b2zjy9dwzx7f9qcd";
        url = "https://github.com/mirage/ocaml-conduit/releases/download/v1.4.0/conduit-v1.4.0.tbz";
      };
      version = "1.4.0";
    };
    conf-autoconf = 
    {
      buildInputs = [ (pkgs.autoconf or null) (pkgs."devel/autoconf" or null)
                       (pkgs."sys-devel/autoconf" or null) ];
      opamInputs = {
                     conf-which = selection.conf-which;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0673l2awx2cd57hqf07vrhpf2c4kn6xlgc85sdbz2k1n5flh77gs";
        package = "packages/conf-autoconf/conf-autoconf.0.1";
      };
      pname = "conf-autoconf";
      src = null;
      version = "0.1";
    };
    conf-gmp = 
    {
      buildInputs = [ (pkgs.gmp or null) (pkgs.gmp-dev or null)
                       (pkgs.gmp-devel or null) (pkgs.libgmp-dev or null) ];
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0a8ph62kvn3b7q6phczgs6gacw2gya6xiiw6wc6fms3qyn0r5gbc";
        package = "packages/conf-gmp/conf-gmp.1";
      };
      pname = "conf-gmp";
      src = null;
      version = "1";
    };
    conf-m4 = 
    {
      buildInputs = [ (pkgs.m4 or null) ];
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1jlhg718lz35jyr5w0sgvg5ycplhnd8653rc4980yci8p3z1vlxs";
        package = "packages/conf-m4/conf-m4.1";
      };
      pname = "conf-m4";
      src = null;
      version = "1";
    };
    conf-perl = 
    {
      buildInputs = [ (pkgs.perl or null) (pkgs.perl-Pod-Html or null) ];
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:090hjg76q1q651vwh38k0jmmr8mp465m7bfgnw5aqxpv1kxb4f12";
        package = "packages/conf-perl/conf-perl.1";
      };
      pname = "conf-perl";
      src = null;
      version = "1";
    };
    conf-python-2-7 = 
    {
      buildInputs = [ (pkgs."dev-lang/python:2.7" or null)
                       (pkgs."lang/python27" or null) (pkgs.python or null)
                       (pkgs."python/2.7" or null) (pkgs.python2 or null)
                       (pkgs."python2.7" or null) (pkgs.python27 or null) ];
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0rhcw4z2ba2vhwr5x35g7g8dbaa3msld7rr3sqnydn3zjidj14q5";
        package = "packages/conf-python-2-7/conf-python-2-7.1.0";
      };
      pname = "conf-python-2-7";
      src = null;
      version = "1.0";
    };
    conf-python-3 = 
    {
      buildInputs = [ (pkgs."dev-lang/python:3.6" or null)
                       (pkgs.epel-release or null)
                       (pkgs."lang/python36" or null) (pkgs.python3 or null)
                       (pkgs.python36 or null) ];
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0wgv2ha39p4p19d9x0456jcl6c2v4y0v27g06v5sz6h9d6y80cgq";
        package = "packages/conf-python-3/conf-python-3.1.0.0";
      };
      pname = "conf-python-3";
      src = null;
      version = "1.0.0";
    };
    conf-which = 
    {
      buildInputs = [ (pkgs.debianutils or null) (pkgs.which or null) ];
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:03bz5rr206lv364q1k8rd6dkjkp8w6sjf1hbvz7svp46nf0kc7ps";
        package = "packages/conf-which/conf-which.1";
      };
      pname = "conf-which";
      src = null;
      version = "1";
    };
    configurator = 
    {
      opamInputs = 
      {
        base = selection.base;
        jbuilder = selection.jbuilder;
        ocaml = selection.ocaml;
        stdio = selection.stdio;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0ym3dgskp77hw1g2xbll4kkdai2x5h7iz7rrw7navzrg16dw1gdl";
        package = "packages/configurator/configurator.v0.11.0";
      };
      pname = "configurator";
      src = pkgs.fetchurl 
      {
        sha256 = "0kwgi3sh92v4n242dk5hgpwd85zzgnczgbkqi0q0kr6m93zgbf7p";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.11/files/configurator-v0.11.0.tar.gz";
      };
      version = "v0.11.0";
    };
    cppo = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0hdl429cpb4bg9gc07rxs14p7d3r3nfi3vw6s38c6xhf412nl611";
        package = "packages/cppo/cppo.1.6.6";
      };
      pname = "cppo";
      src = pkgs.fetchurl 
      {
        sha256 = "185q0x54id7pfc6rkbjscav8sjkrg78fz65rgfw7b4bqlyb2j9z7";
        url = "https://github.com/ocaml-community/cppo/releases/download/v1.6.6/cppo-v1.6.6.tbz";
      };
      version = "1.6.6";
    };
    cpuid = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1k2l7zn9dgyyg7h2x45xbq04hsq4700hmibzyif8l2pkil6lqkdy";
        package = "packages/cpuid/cpuid.0.1.2";
      };
      pname = "cpuid";
      src = pkgs.fetchurl 
      {
        sha256 = "08ng4mva6qblb5ipkrxbr0my7ndkc4qwcbswkqgbgir864s74m93";
        url = "https://github.com/pqwy/cpuid/releases/download/v0.1.2/cpuid-v0.1.2.tbz";
      };
      version = "0.1.2";
    };
    cstruct = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        dune = selection.dune;
        ocaml = selection.ocaml;
        sexplib = selection.sexplib;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:16966q8570w7pjp7nssm0i98xd23ykahwdl67rlh1c96875pz1r1";
        package = "packages/cstruct/cstruct.3.7.0";
      };
      pname = "cstruct";
      src = pkgs.fetchurl 
      {
        sha256 = "0c6kw3dqx7skrc2v883f2slq1javbcmw173vlmsbygkk4y3m0d2c";
        url = "https://github.com/mirage/ocaml-cstruct/releases/download/v3.7.0/cstruct-v3.7.0.tbz";
      };
      version = "3.7.0";
    };
    cstruct-lwt = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        cstruct = selection.cstruct;
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0if6405mvd52208biinqf202pxa154j8f2a1cmjrnh9ikmxpvhlq";
        package = "packages/cstruct-lwt/cstruct-lwt.3.7.0";
      };
      pname = "cstruct-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0c6kw3dqx7skrc2v883f2slq1javbcmw173vlmsbygkk4y3m0d2c";
        url = "https://github.com/mirage/ocaml-cstruct/releases/download/v3.7.0/cstruct-v3.7.0.tbz";
      };
      version = "3.7.0";
    };
    dns = 
    {
      opamInputs = 
      {
        base64 = selection.base64;
        cstruct = selection.cstruct;
        domain-name = selection.domain-name;
        dune = selection.dune;
        hashcons = selection.hashcons;
        ipaddr = selection.ipaddr;
        ocaml = selection.ocaml;
        ppx_cstruct = selection.ppx_cstruct;
        re = selection.re;
        result = selection.result;
        uri = selection.uri;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1qndxrrbd4vmvyq97mzyc53n2zwkc4llysbnhlhgsj2f98w83zkg";
        package = "packages/dns/dns.1.1.0";
      };
      pname = "dns";
      src = pkgs.fetchurl 
      {
        sha256 = "052bv8ry89x0glmwsjabmj6fh5cg2fp1zazzwwvv286f8wb4qnvj";
        url = "https://github.com/mirage/ocaml-dns/releases/download/v1.1.0/dns-v1.1.0.tbz";
      };
      version = "1.1.0";
    };
    dns-lwt = 
    {
      opamInputs = 
      {
        dns = selection.dns;
        dune = selection.dune;
        lwt = selection.lwt;
        mirage-profile = selection.mirage-profile;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0144q0gzilklqg7zgxm6kr21xn4in6lpvj1mpx9n3vs6i872k5yc";
        package = "packages/dns-lwt/dns-lwt.1.1.1";
      };
      pname = "dns-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "08fhpax0khca1l7r79d03k938zi18szgv0cpla9n1bxcr993yjbm";
        url = "https://github.com/mirage/ocaml-dns/releases/download/v1.1.1/dns-v1.1.1.tbz";
      };
      version = "1.1.1";
    };
    dns-lwt-unix = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix;
        cmdliner = selection.cmdliner;
        dns-lwt = selection.dns-lwt;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1gbdcavbq96835ayb7ynzjcsapp6vj99py6s7i17hd2yhqa9i8lw";
        package = "packages/dns-lwt-unix/dns-lwt-unix.1.1.1";
      };
      pname = "dns-lwt-unix";
      src = pkgs.fetchurl 
      {
        sha256 = "08fhpax0khca1l7r79d03k938zi18szgv0cpla9n1bxcr993yjbm";
        url = "https://github.com/mirage/ocaml-dns/releases/download/v1.1.1/dns-v1.1.1.tbz";
      };
      version = "1.1.1";
    };
    domain-name = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        astring = selection.astring;
        dune = selection.dune;
        fmt = selection.fmt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0jhbwf6p603dilswakk76m1gwbkkri1z7dgm2r33lp4i2yix9171";
        package = "packages/domain-name/domain-name.0.2.1";
      };
      pname = "domain-name";
      src = pkgs.fetchurl 
      {
        sha256 = "1mm1ywmggc2bvbpm1xmnxpmymys91nysslfilzvmf4jar4ywhvmq";
        url = "https://github.com/hannesm/domain-name/releases/download/v0.2.1/domain-name-v0.2.1.tbz";
      };
      version = "0.2.1";
    };
    dune = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads;
        base-unix = selection.base-unix;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0sl24yl7j5rmag0nv4zwdvhmisndlm89qc6fwsdiicaffj09mcay";
        package = "packages/dune/dune.1.11.3";
      };
      pname = "dune";
      src = pkgs.fetchurl 
      {
        sha256 = "1lmvsis6dk8mccbwpypz9qdxr134gjhdwshxw6q12mi4x3kn6fn8";
        url = "https://github.com/ocaml/dune/releases/download/1.11.3/dune-build-info-1.11.3.tbz";
      };
      version = "1.11.3";
    };
    dune-configurator = 
    {
      opamInputs = {
                     dune = selection.dune;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0lvfavc8dcgqw0xz82yq40fakm22y7x8abirk9hcb7m8l7hp2w95";
        package = "packages/dune-configurator/dune-configurator.1.0.0";
      };
      pname = "dune-configurator";
      src = null;
      version = "1.0.0";
    };
    duration = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:107j8nxhvmk8jxfq6jxaqwyhaj2mar0cp9c1xciv4qmhh5n7jssm";
        package = "packages/duration/duration.0.1.2";
      };
      pname = "duration";
      src = pkgs.fetchurl 
      {
        sha256 = "1disr6wjy05g76fz8xfgkykrc62cxgxlrvpyil2f9fyskd26xzp2";
        url = "https://github.com/hannesm/duration/releases/download/0.1.2/duration-0.1.2.tbz";
      };
      version = "0.1.2";
    };
    easy-format = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1zahpwp0021xygbwpygrrwa5g65qq6dfqngckb3823ybc6l79lva";
        package = "packages/easy-format/easy-format.1.3.2";
      };
      pname = "easy-format";
      src = pkgs.fetchurl 
      {
        sha256 = "09hrikx310pac2sb6jzaa7k6fmiznnmhdsqij1gawdymhawc4h1l";
        url = "https://github.com/mjambon/easy-format/releases/download/1.3.2/easy-format-1.3.2.tbz";
      };
      version = "1.3.2";
    };
    extlib = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        cppo = selection.cppo;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:080965icazd4m1np7ai9n6sdxcwfn64cn685x3vw3fi913harwps";
        package = "packages/extlib/extlib.1.7.6";
      };
      pname = "extlib";
      src = pkgs.fetchurl 
      {
        sha256 = "0wfs20v1yj5apdbj7214wdsr17ayh0qqq7ihidndvc8nmmwfa1dz";
        url = "https://ygrek.org.ua/p/release/ocaml-extlib/extlib-1.7.6.tar.gz";
      };
      version = "1.7.6";
    };
    fieldslib = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0q1ggc0kn2mmfdhx3ycm9h6dbsj4ix0l8gdalwxb4daq2fc2rpf4";
        package = "packages/fieldslib/fieldslib.v0.12.0";
      };
      pname = "fieldslib";
      src = pkgs.fetchurl 
      {
        sha256 = "10qn5zx69vqk5453rmpiyy03150hf9i5cs3s6sd2s875p25iqjwq";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.12/files/fieldslib-v0.12.0.tar.gz";
      };
      version = "v0.12.0";
    };
    fmt = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix or null;
        cmdliner = selection.cmdliner or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        seq = selection.seq;
        stdlib-shims = selection.stdlib-shims;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1jv1qj26idvi2nazvna4aaclp9wzlzwmmg57n5cx2f9ia87qh267";
        package = "packages/fmt/fmt.0.8.8";
      };
      pname = "fmt";
      src = pkgs.fetchurl 
      {
        sha256 = "1iy0rwknd302mr15328g805k210xyigxbija6fzqqfzyb43azvk4";
        url = "https://erratique.ch/software/fmt/releases/fmt-0.8.8.tbz";
      };
      version = "0.8.8";
    };
    fpath = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        result = selection.result;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:02mwg1qqjia4jdmp65zhyxssn4rxb6a22s4g3pjh3p5z9v900pja";
        package = "packages/fpath/fpath.0.7.2";
      };
      pname = "fpath";
      src = pkgs.fetchurl 
      {
        sha256 = "1hr05d8bpqmqcfdavn4rjk9rxr7v2zl84866f5knjifrm60sxqic";
        url = "http://erratique.ch/software/fpath/releases/fpath-0.7.2.tbz";
      };
      version = "0.7.2";
    };
    functoria = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        astring = selection.astring;
        base-unix = selection.base-unix;
        bos = selection.bos;
        cmdliner = selection.cmdliner;
        dune = selection.dune;
        fmt = selection.fmt;
        fpath = selection.fpath;
        logs = selection.logs;
        ocaml = selection.ocaml;
        ocamlgraph = selection.ocamlgraph;
        ptime = selection.ptime;
        rresult = selection.rresult;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0lv2xjyfqmmv1k056ghzfa0sl5kpq1jq82gvvzpfc0ggs5yb5cfv";
        package = "packages/functoria/functoria.2.2.4";
      };
      pname = "functoria";
      src = pkgs.fetchurl 
      {
        sha256 = "0gq8z51r87ypqhzrzbyh9qfikv9zz8b29c8lwwvzv3pcw4gi4804";
        url = "https://github.com/mirage/functoria/releases/download/v2.2.4/functoria-v2.2.4.tbz";
      };
      version = "2.2.4";
    };
    functoria-runtime = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        cmdliner = selection.cmdliner;
        dune = selection.dune;
        fmt = selection.fmt;
        functoria = selection.functoria or null;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:02s6zv9z2rq6j7diksd8qdn48i9ka6iazi4rm8mr79l1a8k3h472";
        package = "packages/functoria-runtime/functoria-runtime.2.2.4";
      };
      pname = "functoria-runtime";
      src = pkgs.fetchurl 
      {
        sha256 = "0gq8z51r87ypqhzrzbyh9qfikv9zz8b29c8lwwvzv3pcw4gi4804";
        url = "https://github.com/mirage/functoria/releases/download/v2.2.4/functoria-v2.2.4.tbz";
      };
      version = "2.2.4";
    };
    hashcons = 
    {
      opamInputs = 
      {
        conf-autoconf = selection.conf-autoconf;
        conf-which = selection.conf-which;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1l857c99yrs95460awyr03a2smhrhbjxh6vvw3jm88y8si1zg0b8";
        package = "packages/hashcons/hashcons.1.3";
      };
      pname = "hashcons";
      src = pkgs.fetchurl 
      {
        sha256 = "1kkjbm5dnvnf58bh0hqxm0yjvdc0l7n9k46l9mlpr9lfyik2kisr";
        url = "https://github.com/backtracking/ocaml-hashcons/archive/1.3.tar.gz";
      };
      version = "1.3";
    };
    hex = 
    {
      opamInputs = 
      {
        bigarray-compat = selection.bigarray-compat;
        cstruct = selection.cstruct;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1p6fbjw8ymp4i5w1v6lcslvc7dq1pkz364kbi22jn6zvm9fpg9k6";
        package = "packages/hex/hex.1.4.0";
      };
      pname = "hex";
      src = pkgs.fetchurl 
      {
        sha256 = "07b9y0lmnflsslkrm6xilkj40n8sf2hjqkyqghnk7sw5l0plkqsp";
        url = "https://github.com/mirage/ocaml-hex/releases/download/v1.4.0/hex-v1.4.0.tbz";
      };
      version = "1.4.0";
    };
    io-page = 
    {
      opamInputs = 
      {
        bigarray-compat = selection.bigarray-compat;
        cstruct = selection.cstruct;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:06qv3niwbnky40jm08f1bw824c59hlfb773jm938jrpccmm4rnz4";
        package = "packages/io-page/io-page.2.3.0";
      };
      pname = "io-page";
      src = pkgs.fetchurl 
      {
        sha256 = "1hx27pwf419hrhwaw9cphbnl8akz8yy73hqj49l15g2k7shah1cn";
        url = "https://github.com/mirage/io-page/releases/download/v2.3.0/io-page-v2.3.0.tbz";
      };
      version = "2.3.0";
    };
    io-page-unix = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        dune = selection.dune;
        io-page = selection.io-page;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:10pdasm1yb46nqqsgq3pr5w17xx21jwbhk2g1ini29ar3c3dzrva";
        package = "packages/io-page-unix/io-page-unix.2.3.0";
      };
      pname = "io-page-unix";
      src = pkgs.fetchurl 
      {
        sha256 = "1hx27pwf419hrhwaw9cphbnl8akz8yy73hqj49l15g2k7shah1cn";
        url = "https://github.com/mirage/io-page/releases/download/v2.3.0/io-page-v2.3.0.tbz";
      };
      version = "2.3.0";
    };
    ipaddr = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        macaddr = selection.macaddr;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv or null;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1vfsqi427gsy611sh6z3gb3vjbpz46c98hdbrwfnff8m2jfh79wh";
        package = "packages/ipaddr/ipaddr.3.1.0";
      };
      pname = "ipaddr";
      src = pkgs.fetchurl 
      {
        sha256 = "1d637yc6indgsq4amsyd8aw4f6yxms72h7aqnpknphjhsvibpgrr";
        url = "https://github.com/mirage/ocaml-ipaddr/releases/download/v3.1.0/ipaddr-v3.1.0.tbz";
      };
      version = "3.1.0";
    };
    jbuilder = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0lm87nnhgpq3f9s1a0wy9crs1rh9ym7igypyg19n3bz91xv453ss";
        package = "packages/jbuilder/jbuilder.transition";
      };
      pname = "jbuilder";
      src = null;
      version = "transition";
    };
    js_of_ocaml = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        js_of_ocaml-compiler = selection.js_of_ocaml-compiler;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ppx_tools_versioned = selection.ppx_tools_versioned;
        uchar = selection.uchar;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1d8fm2xmlyvyllxqkz9dsmfsw1r1pysxzpbrk486qi62w5wjg95r";
        package = "packages/js_of_ocaml/js_of_ocaml.3.4.0";
      };
      pname = "js_of_ocaml";
      src = pkgs.fetchurl 
      {
        sha256 = "1c4d2xh53mlw4y3qaxavcwzc72yrk2vq3p1zv48dgm8kq5fx7yn4";
        url = "https://github.com/ocsigen/js_of_ocaml/archive/3.4.0.tar.gz";
      };
      version = "3.4.0";
    };
    js_of_ocaml-compiler = 
    {
      opamInputs = 
      {
        cmdliner = selection.cmdliner;
        cppo = selection.cppo;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
        ppx_expect = selection.ppx_expect or null;
        yojson = selection.yojson;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1i0jsv5idmc74cxxc4j5d65i9q0rkm1cjm5pf6mj2d9pf3gh4zgy";
        package = "packages/js_of_ocaml-compiler/js_of_ocaml-compiler.3.4.0";
      };
      pname = "js_of_ocaml-compiler";
      src = pkgs.fetchurl 
      {
        sha256 = "1c4d2xh53mlw4y3qaxavcwzc72yrk2vq3p1zv48dgm8kq5fx7yn4";
        url = "https://github.com/ocsigen/js_of_ocaml/archive/3.4.0.tar.gz";
      };
      version = "3.4.0";
    };
    js_of_ocaml-lwt = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        graphics = selection.graphics or null;
        js_of_ocaml = selection.js_of_ocaml;
        js_of_ocaml-ppx = selection.js_of_ocaml-ppx;
        lwt = selection.lwt;
        lwt_log = selection.lwt_log or null;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0jyzpail3lpy6kn5vlmb5ykawziqlv3mcpiwdygw6jdsybby1m2q";
        package = "packages/js_of_ocaml-lwt/js_of_ocaml-lwt.3.4.0";
      };
      pname = "js_of_ocaml-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "1c4d2xh53mlw4y3qaxavcwzc72yrk2vq3p1zv48dgm8kq5fx7yn4";
        url = "https://github.com/ocsigen/js_of_ocaml/archive/3.4.0.tar.gz";
      };
      version = "3.4.0";
    };
    js_of_ocaml-ppx = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        js_of_ocaml = selection.js_of_ocaml;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ppx_tools_versioned = selection.ppx_tools_versioned;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1caqmxklsc06ld20v0sdvh2viafnw9n1vb07ba82hlq4r5k6mwb1";
        package = "packages/js_of_ocaml-ppx/js_of_ocaml-ppx.3.4.0";
      };
      pname = "js_of_ocaml-ppx";
      src = pkgs.fetchurl 
      {
        sha256 = "1c4d2xh53mlw4y3qaxavcwzc72yrk2vq3p1zv48dgm8kq5fx7yn4";
        url = "https://github.com/ocsigen/js_of_ocaml/archive/3.4.0.tar.gz";
      };
      version = "3.4.0";
    };
    jsonm = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
        uchar = selection.uchar;
        uutf = selection.uutf;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0dj8ibg6j4r4a7v7g6d6q3h4m23jv3pxwc7nam4zzbc7h2k69dy9";
        package = "packages/jsonm/jsonm.1.0.1";
      };
      pname = "jsonm";
      src = pkgs.fetchurl 
      {
        sha256 = "1176dcmxb11fnw49b7yysvkjh0kpzx4s48lmdn5psq9vshp5c29w";
        url = "http://erratique.ch/software/jsonm/releases/jsonm-1.0.1.tbz";
      };
      version = "1.0.1";
    };
    lambda-term = 
    {
      opamInputs = 
      {
        camomile = selection.camomile;
        dune = selection.dune;
        lwt = selection.lwt;
        lwt_log = selection.lwt_log;
        lwt_react = selection.lwt_react;
        ocaml = selection.ocaml;
        react = selection.react;
        zed = selection.zed;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0hw3f1x4dz9vbm9y4pgrwzsrqxzvma81vv34mqwr4krra96mrd9b";
        package = "packages/lambda-term/lambda-term.2.0.2";
      };
      pname = "lambda-term";
      src = pkgs.fetchurl 
      {
        sha256 = "1p9yczrx78pf5hvhcg1qiqb2vdlmw6bmhhjsm4wiqjq2cc6piaqw";
        url = "https://github.com/ocaml-community/lambda-term/releases/download/2.0.2/lambda-term-2.0.2.tbz";
      };
      version = "2.0.2";
    };
    logs = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        cmdliner = selection.cmdliner or null;
        fmt = selection.fmt or null;
        js_of_ocaml = selection.js_of_ocaml or null;
        lwt = selection.lwt or null;
        mtime = selection.mtime or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1k797gb7f2s1hlqyqsq2xyq9gm20l5q2iwh26bs44f3bp3gklg1a";
        package = "packages/logs/logs.0.7.0";
      };
      pname = "logs";
      src = pkgs.fetchurl 
      {
        sha256 = "1jnmd675wmsmdwyb5mx5b0ac66g4c6gpv5s4mrx2j6pb0wla1x46";
        url = "https://erratique.ch/software/logs/releases/logs-0.7.0.tbz";
      };
      version = "0.7.0";
    };
    lru = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        psq = selection.psq;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1dqz90jjh18yvl0wpnfycf86ji07qighpjq9419nmx13viflxiah";
        package = "packages/lru/lru.0.2.0";
      };
      pname = "lru";
      src = pkgs.fetchurl 
      {
        sha256 = "0bd7js9rrma1fjjjjc3fgr9l5fjbhgihx2nsaf96g2b35iiaimd0";
        url = "https://github.com/pqwy/lru/releases/download/v0.2.0/lru-0.2.0.tbz";
      };
      version = "0.2.0";
    };
    lwt = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads or null;
        base-unix = selection.base-unix or null;
        conf-libev = selection.conf-libev or null;
        cppo = selection.cppo;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        mmap = selection.mmap;
        ocaml = selection.ocaml;
        ocplib-endian = selection.ocplib-endian;
        result = selection.result;
        seq = selection.seq;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1qq838jd97imwxg75xa5gjxfqx07mz8kz31zhyrlyd2n2shfh5ap";
        package = "packages/lwt/lwt.4.3.0";
      };
      pname = "lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0gfj6bgv6vp82mg8kw1g7s2h9g08gs9m7i4w1ffw3l77b8pzd6k9";
        url = "https://github.com/ocsigen/lwt/archive/4.3.0.tar.gz";
      };
      version = "4.3.0";
    };
    lwt_log = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1b4qvc8hazj2n3shdpdi4b5575sgr3iz5zs06iajc6ph8k56hk76";
        package = "packages/lwt_log/lwt_log.1.1.1";
      };
      pname = "lwt_log";
      src = pkgs.fetchurl 
      {
        sha256 = "0gszc8nvk2hpfq47plb36qahlnyfq28sa9mhicnf6mg5c7n1kyql";
        url = "https://github.com/aantron/lwt_log/archive/1.1.1.tar.gz";
      };
      version = "1.1.1";
    };
    lwt_ppx = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ppx_tools_versioned = selection.ppx_tools_versioned;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1r0ka60v07l24ybdm1gj9amwhn6mdrigwgh18im0k9i5xnss90rx";
        package = "packages/lwt_ppx/lwt_ppx.1.2.3";
      };
      pname = "lwt_ppx";
      src = pkgs.fetchurl 
      {
        sha256 = "0gfj6bgv6vp82mg8kw1g7s2h9g08gs9m7i4w1ffw3l77b8pzd6k9";
        url = "https://github.com/ocsigen/lwt/archive/4.3.0.tar.gz";
      };
      version = "1.2.3";
    };
    lwt_react = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        react = selection.react;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0l0sqax959gv3649z1vqwf94jvq0bykwydrdjxzk0gjj0nlchfar";
        package = "packages/lwt_react/lwt_react.1.1.3";
      };
      pname = "lwt_react";
      src = pkgs.fetchurl 
      {
        sha256 = "0gfj6bgv6vp82mg8kw1g7s2h9g08gs9m7i4w1ffw3l77b8pzd6k9";
        url = "https://github.com/ocsigen/lwt/archive/4.3.0.tar.gz";
      };
      version = "1.1.3";
    };
    macaddr = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv or null;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1rc7f25nq7p0l7vkhxigqrj3a39w6yswkfi6wgf4hp5bm764s8qi";
        package = "packages/macaddr/macaddr.3.1.0";
      };
      pname = "macaddr";
      src = pkgs.fetchurl 
      {
        sha256 = "1d637yc6indgsq4amsyd8aw4f6yxms72h7aqnpknphjhsvibpgrr";
        url = "https://github.com/mirage/ocaml-ipaddr/releases/download/v3.1.0/ipaddr-v3.1.0.tbz";
      };
      version = "3.1.0";
    };
    magic-mime = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0d8ici4l55iywi80a5rp2mhzni1ppp16vb9f4zsml1898cd92p7l";
        package = "packages/magic-mime/magic-mime.1.1.2";
      };
      pname = "magic-mime";
      src = pkgs.fetchurl 
      {
        sha256 = "1sq4rfd9m3693cnzlbds4qh1xpvrv1iz1s1f75nvacbmfjy0nn8c";
        url = "https://github.com/mirage/ocaml-magic-mime/releases/download/v1.1.2/magic-mime-v1.1.2.tbz";
      };
      version = "1.1.2";
    };
    mirage = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        bos = selection.bos;
        dune = selection.dune;
        functoria = selection.functoria;
        ipaddr = selection.ipaddr;
        logs = selection.logs;
        mirage-runtime = selection.mirage-runtime;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0j1qyrjx55y7l014f8531mz2czyjwzhl9y2ihdnbiarqd4zx5dhr";
        package = "packages/mirage/mirage.3.5.2";
      };
      pname = "mirage";
      src = pkgs.fetchurl 
      {
        sha256 = "1q1qd0zhjdqv85ffii5sb11qi0cj5rk7g3kwrngxdv80b7bzm2jx";
        url = "https://github.com/mirage/mirage/releases/download/v3.5.2/mirage-v3.5.2.tbz";
      };
      version = "3.5.2";
    };
    mirage-block = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        mirage-device = selection.mirage-device;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1m3ph75gj6zara1x4isaamyc4ms8s8x1n3xl6j1lzpj2dxly3p03";
        package = "packages/mirage-block/mirage-block.1.2.0";
      };
      pname = "mirage-block";
      src = pkgs.fetchurl 
      {
        sha256 = "0n15gagqak5m034w4i8n5vx4fb1wxvhq3fk0d129kr3pbqqc8wrk";
        url = "https://github.com/mirage/mirage-block/releases/download/v1.2.0/mirage-block-v1.2.0.tbz";
      };
      version = "1.2.0";
    };
    mirage-block-lwt = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        dune = selection.dune;
        io-page = selection.io-page;
        logs = selection.logs;
        lwt = selection.lwt;
        mirage-block = selection.mirage-block;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1s6nxsbnsnk1mz62rp76fg41z82zypz0m2mhc8dzl9iwf8blm588";
        package = "packages/mirage-block-lwt/mirage-block-lwt.1.2.0";
      };
      pname = "mirage-block-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0n15gagqak5m034w4i8n5vx4fb1wxvhq3fk0d129kr3pbqqc8wrk";
        url = "https://github.com/mirage/mirage-block/releases/download/v1.2.0/mirage-block-v1.2.0.tbz";
      };
      version = "1.2.0";
    };
    mirage-channel = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        mirage-flow = selection.mirage-flow;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0gssf5jnbd8a65bsmsp3svll16j6yzjp3vpni287br16bqhv3y0b";
        package = "packages/mirage-channel/mirage-channel.3.2.0";
      };
      pname = "mirage-channel";
      src = pkgs.fetchurl 
      {
        sha256 = "073wgkxn0nmrjpz74ic2nj5vp71097bij7ri7rvm9nk5rcbcx368";
        url = "https://github.com/mirage/mirage-channel/releases/download/v3.2.0/mirage-channel-v3.2.0.tbz";
      };
      version = "3.2.0";
    };
    mirage-channel-lwt = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        cstruct = selection.cstruct;
        dune = selection.dune;
        io-page = selection.io-page;
        io-page-unix = selection.io-page-unix or null;
        logs = selection.logs;
        lwt = selection.lwt;
        mirage-channel = selection.mirage-channel;
        mirage-flow-lwt = selection.mirage-flow-lwt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:10yrpc377l9v2b9bll2lwcw5zxc134aj2cql02k1sq2fhxcj7vr9";
        package = "packages/mirage-channel-lwt/mirage-channel-lwt.3.2.0";
      };
      pname = "mirage-channel-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "073wgkxn0nmrjpz74ic2nj5vp71097bij7ri7rvm9nk5rcbcx368";
        url = "https://github.com/mirage/mirage-channel/releases/download/v3.2.0/mirage-channel-v3.2.0.tbz";
      };
      version = "3.2.0";
    };
    mirage-clock = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        mirage-device = selection.mirage-device;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0r71g5bzhmg4b4zxfnb7q5q0zjszwjgxjh9752hm1b20fmm65v18";
        package = "packages/mirage-clock/mirage-clock.2.0.0";
      };
      pname = "mirage-clock";
      src = pkgs.fetchurl 
      {
        sha256 = "15yim4gy9wbzhz45fbixi1ncqiaks72f019n66l1zkkb3fafjddf";
        url = "https://github.com/mirage/mirage-clock/releases/download/v2.0.0/mirage-clock-v2.0.0.tbz";
      };
      version = "2.0.0";
    };
    mirage-clock-lwt = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        lwt = selection.lwt;
        mirage-clock = selection.mirage-clock;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1gr4gk72x0z8glsggs5s11ivdvlyndkfprj86an8169j58pcc9fk";
        package = "packages/mirage-clock-lwt/mirage-clock-lwt.2.0.0";
      };
      pname = "mirage-clock-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "15yim4gy9wbzhz45fbixi1ncqiaks72f019n66l1zkkb3fafjddf";
        url = "https://github.com/mirage/mirage-clock/releases/download/v2.0.0/mirage-clock-v2.0.0.tbz";
      };
      version = "2.0.0";
    };
    mirage-clock-unix = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
        mirage-clock = selection.mirage-clock;
        mirage-clock-lwt = selection.mirage-clock-lwt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0him40vcmq4i13k6jlg9gd31093543bz72a7kz4xmjv92qqbawxi";
        package = "packages/mirage-clock-unix/mirage-clock-unix.2.0.0";
      };
      pname = "mirage-clock-unix";
      src = pkgs.fetchurl 
      {
        sha256 = "15yim4gy9wbzhz45fbixi1ncqiaks72f019n66l1zkkb3fafjddf";
        url = "https://github.com/mirage/mirage-clock/releases/download/v2.0.0/mirage-clock-v2.0.0.tbz";
      };
      version = "2.0.0";
    };
    mirage-console = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        mirage-device = selection.mirage-device;
        mirage-flow = selection.mirage-flow;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0g0hznr8dvbz337lfsv0dinwb3j5zq41fxc89xnhg59adj42zqw7";
        package = "packages/mirage-console/mirage-console.2.4.3";
      };
      pname = "mirage-console";
      src = pkgs.fetchurl 
      {
        sha256 = "0nycf12xcyycc6vrn83j7vqb8bsiwsg7zkj5id47nmkm80gxaxwn";
        url = "https://github.com/mirage/mirage-console/releases/download/v2.4.3/mirage-console-v2.4.3.tbz";
      };
      version = "2.4.3";
    };
    mirage-console-lwt = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        dune = selection.dune;
        lwt = selection.lwt;
        mirage-console = selection.mirage-console;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:05c119ihq70rcdkclmpl16jmxz0iw5a46p0ddjiq2ahy5cb8282y";
        package = "packages/mirage-console-lwt/mirage-console-lwt.2.4.3";
      };
      pname = "mirage-console-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0nycf12xcyycc6vrn83j7vqb8bsiwsg7zkj5id47nmkm80gxaxwn";
        url = "https://github.com/mirage/mirage-console/releases/download/v2.4.3/mirage-console-v2.4.3.tbz";
      };
      version = "2.4.3";
    };
    mirage-device = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        fmt = selection.fmt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:17igx05w48jl00r6wfs9ainjfmwcrdynywpb9qfm4n8lgilx6p2q";
        package = "packages/mirage-device/mirage-device.1.2.0";
      };
      pname = "mirage-device";
      src = pkgs.fetchurl 
      {
        sha256 = "0qqi5nqsi4ldnn0j47vh37ipyjfw0w0igixp38yj3nx0gpb1wk2g";
        url = "https://github.com/mirage/mirage-device/releases/download/v1.2.0/mirage-device-v1.2.0.tbz";
      };
      version = "1.2.0";
    };
    mirage-flow = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        fmt = selection.fmt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1yycknxmc8rnsw8hmx979g1cj8anlcg0w4abx7h3zazapvqc7lv2";
        package = "packages/mirage-flow/mirage-flow.1.6.0";
      };
      pname = "mirage-flow";
      src = pkgs.fetchurl 
      {
        sha256 = "1lv3rjwgmn9qk4n1clv8w0c77afndyiv0b92naij6824sadnwnfn";
        url = "https://github.com/mirage/mirage-flow/releases/download/v1.6.0/mirage-flow-v1.6.0.tbz";
      };
      version = "1.6.0";
    };
    mirage-flow-lwt = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        dune = selection.dune;
        fmt = selection.fmt;
        logs = selection.logs;
        lwt = selection.lwt;
        mirage-clock = selection.mirage-clock;
        mirage-flow = selection.mirage-flow;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0r7fk61nrhkcn5avpr1gnxaddffhyr4wkp8nj4jcy8fj27pj72dj";
        package = "packages/mirage-flow-lwt/mirage-flow-lwt.1.6.0";
      };
      pname = "mirage-flow-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "1lv3rjwgmn9qk4n1clv8w0c77afndyiv0b92naij6824sadnwnfn";
        url = "https://github.com/mirage/mirage-flow/releases/download/v1.6.0/mirage-flow-v1.6.0.tbz";
      };
      version = "1.6.0";
    };
    mirage-fs = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        fmt = selection.fmt;
        mirage-device = selection.mirage-device;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:17sgm17halxqidjsn9lx58amqyp7pi227yf589anj9j93h4bsb23";
        package = "packages/mirage-fs/mirage-fs.2.0.0";
      };
      pname = "mirage-fs";
      src = pkgs.fetchurl 
      {
        sha256 = "09brryp5qwghfsyvjlcjz9593nsqkkaz221yhlxpbmlpqp7w18h9";
        url = "https://github.com/mirage/mirage-fs/releases/download/v2.0.0/mirage-fs-v2.0.0.tbz";
      };
      version = "2.0.0";
    };
    mirage-fs-lwt = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        cstruct-lwt = selection.cstruct-lwt;
        dune = selection.dune;
        lwt = selection.lwt;
        mirage-fs = selection.mirage-fs;
        mirage-kv-lwt = selection.mirage-kv-lwt;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0bzvnzxgcvszisrs67m227jdn535ibczfy545bq0qimp18792a19";
        package = "packages/mirage-fs-lwt/mirage-fs-lwt.1.2.0";
      };
      pname = "mirage-fs-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0vyba9gwy27f8zcbfik0khdj9md2mxc1rcpcn845mycaxlj88qky";
        url = "https://github.com/mirage/mirage-fs/releases/download/v1.2.0/mirage-fs-v1.2.0.tbz";
      };
      version = "1.2.0";
    };
    mirage-fs-unix = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        cstruct = selection.cstruct;
        cstruct-lwt = selection.cstruct-lwt;
        dune = selection.dune;
        lwt = selection.lwt;
        mirage-clock-unix = selection.mirage-clock-unix or null;
        mirage-fs-lwt = selection.mirage-fs-lwt;
        mirage-kv-lwt = selection.mirage-kv-lwt;
        ocaml = selection.ocaml;
        ptime = selection.ptime or null;
        rresult = selection.rresult or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1yfhs3jkaf9l9vs9afgn7ga2vl9ykkd2kcxkcvfi9vsbjbxd5888";
        package = "packages/mirage-fs-unix/mirage-fs-unix.1.6.0";
      };
      pname = "mirage-fs-unix";
      src = pkgs.fetchurl 
      {
        sha256 = "0wa8nw31sczbca0ii0gsmibzgg0qkyy3aad8gb73gp16gg859lsr";
        url = "https://github.com/mirage/mirage-fs-unix/releases/download/v1.6.0/mirage-fs-unix-v1.6.0.tbz";
      };
      version = "1.6.0";
    };
    mirage-kv = 
    {
      opamInputs = 
      {
        fmt = selection.fmt;
        jbuilder = selection.jbuilder;
        mirage-device = selection.mirage-device;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0zb7cfh6br8b5k02884iyzj05i0bdc21h33cdg8b65x2y5cc3fl3";
        package = "packages/mirage-kv/mirage-kv.1.1.1";
      };
      pname = "mirage-kv";
      src = pkgs.fetchurl 
      {
        sha256 = "182vmm4arln7gq1ygaxm8cq5bhvvb8zpa109niab7s9lkcf44cf0";
        url = "https://github.com/mirage/mirage-kv/releases/download/v1.1.1/mirage-kv-1.1.1.tbz";
      };
      version = "1.1.1";
    };
    mirage-kv-lwt = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        jbuilder = selection.jbuilder;
        lwt = selection.lwt;
        mirage-kv = selection.mirage-kv;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:155crysmdqccrd3h8hqfr3j8y78hamysd9bgasxgxv89xm7f8vs3";
        package = "packages/mirage-kv-lwt/mirage-kv-lwt.1.1.0";
      };
      pname = "mirage-kv-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0z29dl4lhjp9s0hx67hksvirx8g4bk6zhawq7v3bqv14yzq3gsyf";
        url = "https://github.com/mirage/mirage-kv/releases/download/v1.1.0/mirage-kv-1.1.0.tbz";
      };
      version = "1.1.0";
    };
    mirage-net = 
    {
      opamInputs = 
      {
        fmt = selection.fmt;
        jbuilder = selection.jbuilder;
        mirage-device = selection.mirage-device;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1s1nvxn08bg9isscpc0sj48sqyncndnb46c9s7jzkng82k6gh9lz";
        package = "packages/mirage-net/mirage-net.1.2.0";
      };
      pname = "mirage-net";
      src = pkgs.fetchurl 
      {
        sha256 = "1bk4ns955hrs4clp7lzsk19svq2dbn0njfla41jl2a60991ajxay";
        url = "https://github.com/mirage/mirage-net/releases/download/v1.2.0/mirage-net-1.2.0.tbz";
      };
      version = "1.2.0";
    };
    mirage-net-lwt = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        io-page = selection.io-page;
        jbuilder = selection.jbuilder;
        lwt = selection.lwt;
        macaddr = selection.macaddr;
        mirage-net = selection.mirage-net;
        ocaml = selection.ocaml;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0irr4la500sax2aicp5cvrffmr4a5pxwb7svy3g9rna3n1gciaq4";
        package = "packages/mirage-net-lwt/mirage-net-lwt.1.2.0";
      };
      pname = "mirage-net-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "1bk4ns955hrs4clp7lzsk19svq2dbn0njfla41jl2a60991ajxay";
        url = "https://github.com/mirage/mirage-net/releases/download/v1.2.0/mirage-net-1.2.0.tbz";
      };
      version = "1.2.0";
    };
    mirage-no-solo5 = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:18h50v7lp39sis6jy46h35vij0v1z5fr76c4y2h4b72c40fwwck1";
        package = "packages/mirage-no-solo5/mirage-no-solo5.1";
      };
      pname = "mirage-no-solo5";
      src = null;
      version = "1";
    };
    mirage-no-xen = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1nvmvay3nkl8ljw9f46dwv3jppqbbkp0pxf9f1gq4spckb8ysmkh";
        package = "packages/mirage-no-xen/mirage-no-xen.1";
      };
      pname = "mirage-no-xen";
      src = null;
      version = "1";
    };
    mirage-profile = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        dune = selection.dune;
        lwt = selection.lwt;
        ocaml = selection.ocaml;
        ocplib-endian = selection.ocplib-endian;
        ppx_cstruct = selection.ppx_cstruct;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:02gvd3f914s22r3ckpiqyq345fq5vk097brg2zwzfxljibzz94q2";
        package = "packages/mirage-profile/mirage-profile.0.9.1";
      };
      pname = "mirage-profile";
      src = pkgs.fetchurl 
      {
        sha256 = "0lh3591ad4v7nxpd410b75idmgdq668mqdilvkg4avrwqw1wzdib";
        url = "https://github.com/mirage/mirage-profile/releases/download/v0.9.1/mirage-profile-v0.9.1.tbz";
      };
      version = "0.9.1";
    };
    mirage-protocols = 
    {
      opamInputs = 
      {
        duration = selection.duration;
        fmt = selection.fmt;
        jbuilder = selection.jbuilder;
        mirage-device = selection.mirage-device;
        mirage-flow = selection.mirage-flow;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0vfkivzviwq6rqglmdnpcndqfl7wnfcv4hdi0lgl37002pfysczk";
        package = "packages/mirage-protocols/mirage-protocols.1.4.1";
      };
      pname = "mirage-protocols";
      src = pkgs.fetchurl 
      {
        sha256 = "1fvinjrp0r73g8wq1yrra83g1glpna99mzj2djlbj0wphhg45w9w";
        url = "https://github.com/mirage/mirage-protocols/releases/download/v1.4.1/mirage-protocols-1.4.1.tbz";
      };
      version = "1.4.1";
    };
    mirage-protocols-lwt = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        ipaddr = selection.ipaddr;
        jbuilder = selection.jbuilder;
        lwt = selection.lwt;
        macaddr = selection.macaddr;
        mirage-protocols = selection.mirage-protocols;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0cdh4js3lkr88s7ib1yapfnc9hszf1y4y61nx41bxaqgfwjylmxn";
        package = "packages/mirage-protocols-lwt/mirage-protocols-lwt.1.4.1";
      };
      pname = "mirage-protocols-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "1fvinjrp0r73g8wq1yrra83g1glpna99mzj2djlbj0wphhg45w9w";
        url = "https://github.com/mirage/mirage-protocols/releases/download/v1.4.1/mirage-protocols-1.4.1.tbz";
      };
      version = "1.4.1";
    };
    mirage-random = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:03w9f609qc0nlyfnilplkn4h2my4g2nzp60qrw7pn994pynrf245";
        package = "packages/mirage-random/mirage-random.1.2.0";
      };
      pname = "mirage-random";
      src = pkgs.fetchurl 
      {
        sha256 = "0c1z8arda4lg18fd2srvy0fh86clbqf5ppsznrbdppmm3kwgj5l0";
        url = "https://github.com/mirage/mirage-random/releases/download/v1.2.0/mirage-random-v1.2.0.tbz";
      };
      version = "1.2.0";
    };
    mirage-runtime = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        fmt = selection.fmt;
        functoria-runtime = selection.functoria-runtime;
        ipaddr = selection.ipaddr;
        logs = selection.logs;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:03jwxdnfsjh7gyj9gfbs7lqrnjwq0qx22nvxwx6ci977dl14as6w";
        package = "packages/mirage-runtime/mirage-runtime.3.5.2";
      };
      pname = "mirage-runtime";
      src = pkgs.fetchurl 
      {
        sha256 = "1q1qd0zhjdqv85ffii5sb11qi0cj5rk7g3kwrngxdv80b7bzm2jx";
        url = "https://github.com/mirage/mirage/releases/download/v3.5.2/mirage-v3.5.2.tbz";
      };
      version = "3.5.2";
    };
    mirage-stack = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        fmt = selection.fmt;
        mirage-device = selection.mirage-device;
        mirage-protocols = selection.mirage-protocols;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0nhfvbk75fxv50l4vchdg3jw79k08y0bfak5f5wg5fyxmsdfhrgm";
        package = "packages/mirage-stack/mirage-stack.1.4.0";
      };
      pname = "mirage-stack";
      src = pkgs.fetchurl 
      {
        sha256 = "062djy9rma6j23x5h8cj65pi0wj4g6ikm2r4p9imcvnbhran3s58";
        url = "https://github.com/mirage/mirage-stack/releases/download/v1.4.0/mirage-stack-v1.4.0.tbz";
      };
      version = "1.4.0";
    };
    mirage-stack-lwt = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        dune = selection.dune;
        ipaddr = selection.ipaddr;
        lwt = selection.lwt;
        mirage-stack = selection.mirage-stack;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:117myl7drab09938wssxp4lq3c938j8qqdzgxf87q61l5bq89p0n";
        package = "packages/mirage-stack-lwt/mirage-stack-lwt.1.4.0";
      };
      pname = "mirage-stack-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "062djy9rma6j23x5h8cj65pi0wj4g6ikm2r4p9imcvnbhran3s58";
        url = "https://github.com/mirage/mirage-stack/releases/download/v1.4.0/mirage-stack-v1.4.0.tbz";
      };
      version = "1.4.0";
    };
    mirage-time = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        mirage-device = selection.mirage-device;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1rpsxycx2yr72q194q4bkql9wziwb3qs9i559pr0jhblx9si1mp4";
        package = "packages/mirage-time/mirage-time.1.3.0";
      };
      pname = "mirage-time";
      src = pkgs.fetchurl 
      {
        sha256 = "0fkpcynhfdjx7nxd43h9iwd379l9cncxm42plj6lc9hmlygxnl4f";
        url = "https://github.com/mirage/mirage-time/releases/download/v1.3.0/mirage-time-v1.3.0.tbz";
      };
      version = "1.3.0";
    };
    mirage-time-lwt = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        lwt = selection.lwt;
        mirage-time = selection.mirage-time;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0x9j1nkl3z8ks5c8p3ck5py0wsclga9vg3jb2k4cvvka65bkj9d8";
        package = "packages/mirage-time-lwt/mirage-time-lwt.1.3.0";
      };
      pname = "mirage-time-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0fkpcynhfdjx7nxd43h9iwd379l9cncxm42plj6lc9hmlygxnl4f";
        url = "https://github.com/mirage/mirage-time/releases/download/v1.3.0/mirage-time-v1.3.0.tbz";
      };
      version = "1.3.0";
    };
    mirage-types = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        mirage-block = selection.mirage-block;
        mirage-channel = selection.mirage-channel;
        mirage-clock = selection.mirage-clock;
        mirage-console = selection.mirage-console;
        mirage-device = selection.mirage-device;
        mirage-flow = selection.mirage-flow;
        mirage-fs = selection.mirage-fs;
        mirage-kv = selection.mirage-kv;
        mirage-net = selection.mirage-net;
        mirage-protocols = selection.mirage-protocols;
        mirage-random = selection.mirage-random;
        mirage-stack = selection.mirage-stack;
        mirage-time = selection.mirage-time;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0pnbzp2jvc1znc6vjjj26wasn7cpblwfd03m5sr371s2xdks2514";
        package = "packages/mirage-types/mirage-types.3.4.1";
      };
      pname = "mirage-types";
      src = pkgs.fetchurl 
      {
        sha256 = "0fi7w96zx0xkd03l19ig9kfyhdqx5hv12pxmb98nv81pabhxnin4";
        url = "https://github.com/mirage/mirage/releases/download/v3.4.1/mirage-v3.4.1.tbz";
      };
      version = "3.4.1";
    };
    mirage-types-lwt = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        dune = selection.dune;
        io-page = selection.io-page;
        ipaddr = selection.ipaddr;
        lwt = selection.lwt;
        mirage-block-lwt = selection.mirage-block-lwt;
        mirage-channel-lwt = selection.mirage-channel-lwt;
        mirage-clock-lwt = selection.mirage-clock-lwt;
        mirage-console-lwt = selection.mirage-console-lwt;
        mirage-flow-lwt = selection.mirage-flow-lwt;
        mirage-fs-lwt = selection.mirage-fs-lwt;
        mirage-kv-lwt = selection.mirage-kv-lwt;
        mirage-net-lwt = selection.mirage-net-lwt;
        mirage-protocols-lwt = selection.mirage-protocols-lwt;
        mirage-random = selection.mirage-random;
        mirage-stack-lwt = selection.mirage-stack-lwt;
        mirage-time-lwt = selection.mirage-time-lwt;
        mirage-types = selection.mirage-types;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1rxby9kw74h05pnib2spd2rhiq39y0gdajy4g6rxm1258f4gpvp9";
        package = "packages/mirage-types-lwt/mirage-types-lwt.3.4.1";
      };
      pname = "mirage-types-lwt";
      src = pkgs.fetchurl 
      {
        sha256 = "0fi7w96zx0xkd03l19ig9kfyhdqx5hv12pxmb98nv81pabhxnin4";
        url = "https://github.com/mirage/mirage/releases/download/v3.4.1/mirage-v3.4.1.tbz";
      };
      version = "3.4.1";
    };
    mmap = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0mjn2jxrfwlrzppjnc6pg47ncm0ri6a1hn3kj2yz10rmpca25bsm";
        package = "packages/mmap/mmap.1.1.0";
      };
      pname = "mmap";
      src = pkgs.fetchurl 
      {
        sha256 = "0l6waidal2n8mkdn74avbslvc10sf49f5d889n838z03pra5chsc";
        url = "https://github.com/mirage/mmap/releases/download/v1.1.0/mmap-v1.1.0.tbz";
      };
      version = "1.1.0";
    };
    nocrypto = 
    {
      opamInputs = 
      {
        cpuid = selection.cpuid;
        cstruct = selection.cstruct;
        cstruct-lwt = selection.cstruct-lwt;
        lwt = selection.lwt;
        mirage-entropy = selection.mirage-entropy or null;
        mirage-no-solo5 = selection.mirage-no-solo5 or null;
        mirage-no-xen = selection.mirage-no-xen or null;
        mirage-solo5 = selection.mirage-solo5 or null;
        mirage-xen = selection.mirage-xen or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        ocb-stubblr = selection.ocb-stubblr;
        ounit = selection.ounit or null;
        ppx_deriving = selection.ppx_deriving;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        sexplib = selection.sexplib;
        topkg = selection.topkg;
        zarith = selection.zarith;
        zarith-freestanding = selection.zarith-freestanding or null;
        zarith-xen = selection.zarith-xen or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0far7alli9gp286q51n4dhicgzw53b2vvmf5b5nr1iz91nh7zc4a";
        package = "packages/nocrypto/nocrypto.0.5.4-1";
      };
      pname = "nocrypto";
      src = pkgs.fetchurl 
      {
        sha256 = "0zshi9hlhcz61n5z1k6fx6rsi0pl4xgahsyl2jp0crqkaf3hqwlg";
        url = "https://github.com/mirleft/ocaml-nocrypto/releases/download/v0.5.4/nocrypto-0.5.4.tbz";
      };
      version = "0.5.4-1";
    };
    num = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0dmp1vfg2212famm3fl7has2i8y9z5jj1f95v1yc2x686livkhz0";
        package = "packages/num/num.1.2";
      };
      pname = "num";
      src = pkgs.fetchurl 
      {
        sha256 = "1pjkahss0gg5i9v3wwx6inlsz2jd562lv7ah8sbsgx2zj82320n5";
        url = "https://github.com/ocaml/num/archive/v1.2.tar.gz";
      };
      version = "1.2";
    };
    ocaml = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-config = selection.ocaml-config;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1f2v07fzx7rg0lc8pzs1s24vp49y0jyfxf98b9z57giik28dafgp";
        package = "packages/ocaml/ocaml.4.08.1";
      };
      pname = "ocaml";
      src = null;
      version = "4.08.1";
    };
    ocaml-compiler-libs = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:13l8hnv1xclgpayfv8w827ly7il87j4qll7x15sbdrqk980c3jyg";
        package = "packages/ocaml-compiler-libs/ocaml-compiler-libs.v0.12.1";
      };
      pname = "ocaml-compiler-libs";
      src = pkgs.fetchurl 
      {
        sha256 = "014shj6g10xmclfps22igkiij5jysn8p6lv75h0s4vzjj9wj23yj";
        url = "https://github.com/janestreet/ocaml-compiler-libs/archive/v0.12.1.tar.gz";
      };
      version = "v0.12.1";
    };
    ocaml-config = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0g5s0yysgqdrbgx7vyh56fhx59xypw6hdwlcbzbqcgvj4zp4yy0c";
        package = "packages/ocaml-config/ocaml-config.1";
      };
      pname = "ocaml-config";
      src = null;
      version = "1";
    };
    ocaml-migrate-parsetree = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_derivers = selection.ppx_derivers;
        result = selection.result;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1jlps6sn5m8lkrnjjp34i145viwwmhq684dn995a7xxf8b3h60d6";
        package = "packages/ocaml-migrate-parsetree/ocaml-migrate-parsetree.1.4.0";
      };
      pname = "ocaml-migrate-parsetree";
      src = pkgs.fetchurl 
      {
        sha256 = "1f6kfysppsl2qy1pisgnn9kr0nabwk7xjddmcvi3wyqq0p1bs7r3";
        url = "https://github.com/ocaml-ppx/ocaml-migrate-parsetree/releases/download/v1.4.0/ocaml-migrate-parsetree-v1.4.0.tbz";
      };
      version = "1.4.0";
    };
    ocaml-system = 
    {
      opamInputs = {
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:11687h71imdvkyhb28aldhs20czhj7bdpyprk19rbzrnhsqn9ylf";
        package = "packages/ocaml-system/ocaml-system.4.08.1";
      };
      pname = "ocaml-system";
      src = null;
      version = "4.08.1";
    };
    ocamlbuild = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0hrzb4fgz7qh7cr65j5yq6fai82fhyl6bp8s9pwcj1a2yhczbviv";
        package = "packages/ocamlbuild/ocamlbuild.0.14.0";
      };
      pname = "ocamlbuild";
      src = pkgs.fetchurl 
      {
        sha256 = "0y1fskw9rg2y1zgb7whv3v8v4xw04svgxslf3856q2aqd7lrrcl7";
        url = "https://github.com/ocaml/ocamlbuild/archive/0.14.0.tar.gz";
      };
      version = "0.14.0";
    };
    ocamlfind = 
    {
      opamInputs = 
      {
        conf-m4 = selection.conf-m4;
        graphics = selection.graphics or null;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:04z3rq1y20wfzmwvjm9wlg89cqqs8n37inhbwp4x2dsqbn0hqd81";
        package = "packages/ocamlfind/ocamlfind.1.8.1";
      };
      pname = "ocamlfind";
      src = pkgs.fetchurl 
      {
        sha256 = "00s3sfb02pnjmkax25pcnljcnhcggiliccfz69a72ic7gsjwz1cf";
        url = "http://download.camlcity.org/download/findlib-1.8.1.tar.gz";
      };
      version = "1.8.1";
    };
    ocamlgraph = 
    {
      opamInputs = 
      {
        conf-gnomecanvas = selection.conf-gnomecanvas or null;
        lablgtk = selection.lablgtk or null;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0p2aazb9plhzh5m8yyjr8a2im7w8gkbgmn9x8dvj01fz9rf4m9v7";
        package = "packages/ocamlgraph/ocamlgraph.1.8.8";
      };
      pname = "ocamlgraph";
      src = pkgs.fetchurl 
      {
        sha256 = "0m9g16wrrr86gw4fz2fazrh8nkqms0n863w7ndcvrmyafgxvxsnr";
        url = "http://ocamlgraph.lri.fr/download/ocamlgraph-1.8.8.tar.gz";
      };
      version = "1.8.8";
    };
    ocb-stubblr = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1lsn82a3pfnl0hwng4nxd9kyrn6dlj05anlxf1vkvi12qj4yfbhq";
        package = "packages/ocb-stubblr/ocb-stubblr.0.1.1-1";
      };
      pname = "ocb-stubblr";
      src = pkgs.fetchurl 
      {
        sha256 = "167b7x1j21mkviq8dbaa0nmk4rps2ilvzwx02igsc2706784z72f";
        url = "https://github.com/pqwy/ocb-stubblr/releases/download/v0.1.1/ocb-stubblr-0.1.1.tbz";
      };
      version = "0.1.1-1";
    };
    ocplib-endian = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        cppo = selection.cppo;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1nb8z88xhnbz324q14ydlbw8pnrsk5qr3lw34hv0i7bhd9hgk8y9";
        package = "packages/ocplib-endian/ocplib-endian.1.0";
      };
      pname = "ocplib-endian";
      src = pkgs.fetchurl 
      {
        sha256 = "0hwj09rnzjs0m0kazz5h2mgs6p95j0zlga8cda5srnzqmzhniwkn";
        url = "https://github.com/OCamlPro/ocplib-endian/archive/1.0.tar.gz";
      };
      version = "1.0";
    };
    odoc = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        bisect_ppx = selection.bisect_ppx or null;
        cmdliner = selection.cmdliner;
        cppo = selection.cppo;
        dune = selection.dune;
        fpath = selection.fpath;
        ocaml = selection.ocaml;
        result = selection.result;
        tyxml = selection.tyxml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1hnfj3v2p8xgl7k5qid6v10dh6hw2lmr9svvzmg9aqn5r58vx4f1";
        package = "packages/odoc/odoc.1.4.2";
      };
      pname = "odoc";
      src = pkgs.fetchurl 
      {
        sha256 = "1xlbjfamji1ii0qn0b5lfml04m2ldfjn54l44wf7qzw6pdfddnr1";
        url = "https://github.com/ocaml/odoc/archive/1.4.2.tar.gz";
      };
      version = "1.4.2";
    };
    ounit = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1b3afbwk55azyd50cixa2j3pkd90ji4x76cznx6b0l7shjs6sw6c";
        package = "packages/ounit/ounit.2.0.8";
      };
      pname = "ounit";
      src = pkgs.fetchurl 
      {
        sha256 = "03ifp9hjcxg4m5j190iy373jcn4039d3vy10kmd8p4lfciwzwc1f";
        url = "https://download.ocamlcore.org/ounit/ounit/2.0.8/ounit-2.0.8.tar.gz";
      };
      version = "2.0.8";
    };
    parsexp = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0hry8mwm4vz45ad1xwsnbmhpb78rqfi3kdg2jfzrfngyd7449q6m";
        package = "packages/parsexp/parsexp.v0.12.0";
      };
      pname = "parsexp";
      src = pkgs.fetchurl 
      {
        sha256 = "0m1gszjczhy6bx6pyayssjbv89xj7bv544p65v93bsy78gk7cqfc";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.12/files/parsexp-v0.12.0.tar.gz";
      };
      version = "v0.12.0";
    };
    passe-client = 
    {
      opamInputs = 
      {
        lambda-term = selection.lambda-term;
        passe-common = selection.passe-common;
        passe-unix-common = selection.passe-unix-common;
        tls = selection.tls;
      };
      opamSrc = "passe-client.opam";
      pname = "passe-client";
      src = self.directSrc "passe-client";
      version = "development";
    };
    passe-common = 
    {
      opamInputs = 
      {
        astring = selection.astring;
        base64 = selection.base64;
        cohttp = selection.cohttp;
        conf-python-3 = selection.conf-python-3;
        dune = selection.dune;
        hex = selection.hex;
        logs = selection.logs;
        lwt = selection.lwt;
        lwt_ppx = selection.lwt_ppx;
        lwt_react = selection.lwt_react;
        mirage = selection.mirage;
        mirage-clock-unix = selection.mirage-clock-unix;
        mirage-fs-unix = selection.mirage-fs-unix;
        mirage-types = selection.mirage-types;
        mirage-types-lwt = selection.mirage-types-lwt;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        ounit = selection.ounit;
        ptime = selection.ptime;
        react = selection.react;
        rresult = selection.rresult;
        uri = selection.uri;
        yojson = selection.yojson;
      };
      opamSrc = "passe-common.opam";
      pname = "passe-common";
      src = self.directSrc "passe-common";
      version = "development";
    };
    passe-server = 
    {
      opamInputs = 
      {
        conduit = selection.conduit;
        dns-lwt-unix = selection.dns-lwt-unix;
        js_of_ocaml = selection.js_of_ocaml;
        nocrypto = selection.nocrypto;
        passe-common = selection.passe-common;
        passe-unix-common = selection.passe-unix-common;
        re = selection.re;
        safepass = selection.safepass;
        tcpip = selection.tcpip;
        vdoml = selection.vdoml;
      };
      opamSrc = "passe-server.opam";
      pname = "passe-server";
      src = self.directSrc "passe-server";
      version = "development";
    };
    passe-unix-common = 
    {
      opamInputs = 
      {
        cohttp-lwt = selection.cohttp-lwt;
        cohttp-lwt-unix = selection.cohttp-lwt-unix;
        extlib = selection.extlib;
      };
      opamSrc = "passe-unix-common.opam";
      pname = "passe-unix-common";
      src = self.directSrc "passe-unix-common";
      version = "development";
    };
    ppx_cstruct = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        cstruct-unix = selection.cstruct-unix or null;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ounit = selection.ounit or null;
        ppx_driver = selection.ppx_driver or null;
        ppx_sexp_conv = selection.ppx_sexp_conv or null;
        ppx_tools_versioned = selection.ppx_tools_versioned;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0fnjjl3x5d7jzfgpsn3h5p6flpqcdv37763gmrg3ggwy7rc7jr2l";
        package = "packages/ppx_cstruct/ppx_cstruct.3.7.0";
      };
      pname = "ppx_cstruct";
      src = pkgs.fetchurl 
      {
        sha256 = "0c6kw3dqx7skrc2v883f2slq1javbcmw173vlmsbygkk4y3m0d2c";
        url = "https://github.com/mirage/ocaml-cstruct/releases/download/v3.7.0/cstruct-v3.7.0.tbz";
      };
      version = "3.7.0";
    };
    ppx_derivers = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0r8rjp4m5jfbf3wz8qlgh82pxjws4arjwxhqq0zjglby6l6h8p3x";
        package = "packages/ppx_derivers/ppx_derivers.1.2.1";
      };
      pname = "ppx_derivers";
      src = pkgs.fetchurl 
      {
        sha256 = "159vqy616ni18mn0dlv8c2y4h7mb4hahwjn53yrr59yyhzhmwndn";
        url = "https://github.com/ocaml-ppx/ppx_derivers/archive/1.2.1.tar.gz";
      };
      version = "1.2.1";
    };
    ppx_deriving = 
    {
      opamInputs = 
      {
        cppo = selection.cppo;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ounit = selection.ounit or null;
        ppx_derivers = selection.ppx_derivers;
        ppx_tools = selection.ppx_tools;
        ppxfind = selection.ppxfind;
        result = selection.result;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0c50srrs1figgrsbzyjm36kqk6cp8nicmigxa9123zkxizzp3ics";
        package = "packages/ppx_deriving/ppx_deriving.4.4";
      };
      pname = "ppx_deriving";
      src = pkgs.fetchurl 
      {
        sha256 = "0d6cdgk6kdi64l4q4l6hs2zln5js76q0yn94yriz38b5rgs5mn62";
        url = "https://github.com/ocaml-ppx/ppx_deriving/archive/v4.4.tar.gz";
      };
      version = "4.4";
    };
    ppx_fields_conv = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        fieldslib = selection.fieldslib;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0pm6jyhifwb210lsvmhjyiv0lxakv6bsq4ma1zq4zid7qbxq0xa2";
        package = "packages/ppx_fields_conv/ppx_fields_conv.v0.12.0";
      };
      pname = "ppx_fields_conv";
      src = pkgs.fetchurl 
      {
        sha256 = "0qk9z2q340ssjq6lk9zvnnpgxiv21n2lhg23679wbib782ipzgj9";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_fields_conv-v0.12.0.tar.gz";
      };
      version = "v0.12.0";
    };
    ppx_sexp_conv = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1jg4mnp3zbm6n4skdw38id29hfr8a95zmdbssph72kp9bd0isk1v";
        package = "packages/ppx_sexp_conv/ppx_sexp_conv.v0.12.0";
      };
      pname = "ppx_sexp_conv";
      src = pkgs.fetchurl 
      {
        sha256 = "0980xzjhqdjdi2lxx5jgnzjppsnkb915w9y962ip4q92y1jlhx3b";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.12/files/ppx_sexp_conv-v0.12.0.tar.gz";
      };
      version = "v0.12.0";
    };
    ppx_tools = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:09w55zr780cw72zx72x81j8fcvmqxvcba45y17rk3i7wvz3wf9py";
        package = "packages/ppx_tools/ppx_tools.5.3+4.08.0";
      };
      pname = "ppx_tools";
      src = pkgs.fetchurl 
      {
        sha256 = "0i9nh0rs1h6z4jnhahppbdm5d5q47w4xs6hhc8dy6sbjh7rf8fl4";
        url = "https://github.com/ocaml-ppx/ppx_tools/archive/5.3+4.08.0.tar.gz";
      };
      version = "5.3+4.08.0";
    };
    ppx_tools_versioned = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1rg0yfsacna7zadxin9s1qkaga940kvsffaxmdvn4y0f923xnpcn";
        package = "packages/ppx_tools_versioned/ppx_tools_versioned.5.2.3";
      };
      pname = "ppx_tools_versioned";
      src = pkgs.fetchurl 
      {
        sha256 = "11ac52fg8bbsgsqxinj1qxm7gp9j52d4fal3696yxsrb6hwcfcpi";
        url = "https://github.com/ocaml-ppx/ppx_tools_versioned/archive/5.2.3.tar.gz";
      };
      version = "5.2.3";
    };
    ppxfind = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0zicjnj2p2g8pyx9c9gdh01cfm9v1vi72kmb2m8qh7yx4wf9srn0";
        package = "packages/ppxfind/ppxfind.1.3";
      };
      pname = "ppxfind";
      src = pkgs.fetchurl 
      {
        sha256 = "1r4jp0516378js62ss50a9s8ql2pm8lfdd3mnk214hp7s0kb17fl";
        url = "https://github.com/diml/ppxfind/releases/download/1.3/ppxfind-1.3.tbz";
      };
      version = "1.3";
    };
    ppxlib = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-compiler-libs = selection.ocaml-compiler-libs;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ocamlfind = selection.ocamlfind or null;
        ppx_derivers = selection.ppx_derivers;
        stdio = selection.stdio;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1j76k80gpy9fjqva2jz09z37mwzphayfk3h14h6bibb5pn0vp37r";
        package = "packages/ppxlib/ppxlib.0.8.1";
      };
      pname = "ppxlib";
      src = pkgs.fetchurl 
      {
        sha256 = "08bm5wplqwxkzzwlc6wbcs4yyarqhllpzi2vnq207a5vhgp7kjx5";
        url = "https://github.com/ocaml-ppx/ppxlib/releases/download/0.8.1/ppxlib-0.8.1.tbz";
      };
      version = "0.8.1";
    };
    psq = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        dune = selection.dune;
        ocaml = selection.ocaml;
        qcheck-alcotest = selection.qcheck-alcotest or null;
        qcheck-core = selection.qcheck-core or null;
        seq = selection.seq;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1ianna2zs6qc26zmcmpy3ks6h7v79aw80kz3r4jr01h4qrh9nyni";
        package = "packages/psq/psq.0.1.1";
      };
      pname = "psq";
      src = pkgs.fetchurl 
      {
        sha256 = "0apgx1glgkp0pcdlvvill0y52fj1dsiwv3igwgg5zqykdiz5gjjq";
        url = "https://github.com/pqwy/psq/releases/download/v0.1.1/psq-v0.1.1.tbz";
      };
      version = "0.1.1";
    };
    ptime = 
    {
      opamInputs = 
      {
        js_of_ocaml = selection.js_of_ocaml or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        result = selection.result;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0ldzn2jmz8c3n9rr4mqyfa92lkb3378cmik3klznbln7lsf4fa1v";
        package = "packages/ptime/ptime.0.8.5";
      };
      pname = "ptime";
      src = pkgs.fetchurl 
      {
        sha256 = "1fxq57xy1ajzfdnvv5zfm7ap2nf49znw5f9gbi4kb9vds942ij27";
        url = "https://erratique.ch/software/ptime/releases/ptime-0.8.5.tbz";
      };
      version = "0.8.5";
    };
    randomconv = 
    {
      opamInputs = 
      {
        cstruct = selection.cstruct;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0m9hx37djwbyz7hzm4b19sfbqsrd8xrgdr7m33qfndrs7fxpa26n";
        package = "packages/randomconv/randomconv.0.1.2";
      };
      pname = "randomconv";
      src = pkgs.fetchurl 
      {
        sha256 = "17v0njydsd2m2cha0m176707pb3fdfrrc0hp72yia109jn3z3kzj";
        url = "https://github.com/hannesm/randomconv/releases/download/0.1.2/randomconv-0.1.2.tbz";
      };
      version = "0.1.2";
    };
    re = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        seq = selection.seq;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:10m5h5myw3pnjvk7z1j7hhx18zpbm7kad2196ljgvj7y169zba61";
        package = "packages/re/re.1.9.0";
      };
      pname = "re";
      src = pkgs.fetchurl 
      {
        sha256 = "1gas4ky49zgxph3870nffzkr6y41kkpqp4nj38pz1gh49zcf12aj";
        url = "https://github.com/ocaml/ocaml-re/releases/download/1.9.0/re-1.9.0.tbz";
      };
      version = "1.9.0";
    };
    react = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0wk5i83r2hxz1r1skkhzz8rild68m4g9i9blxigbg9r60hgw18z5";
        package = "packages/react/react.1.2.1";
      };
      pname = "react";
      src = pkgs.fetchurl 
      {
        sha256 = "1aj8w79gdd9xnrbz7s5p8glcb4pmimi8jp9f439dqnf6ih3mqb3v";
        url = "http://erratique.ch/software/react/releases/react-1.2.1.tbz";
      };
      version = "1.2.1";
    };
    result = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:159gmr00z6jmpxvk83vnv738ls4kbzfn8p5042i87m6p8damaxhc";
        package = "packages/result/result.1.4";
      };
      pname = "result";
      src = pkgs.fetchurl 
      {
        sha256 = "1cjlncnzkwc6zr4v8dgy8nin490blbyxzwwp0qh0cla7s3q2jw0n";
        url = "https://github.com/janestreet/result/archive/1.4.tar.gz";
      };
      version = "1.4";
    };
    rresult = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        result = selection.result;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:10vaq82rzip2rn1rbq27pjckvqassjh1n58pnsypldqaahxnbca6";
        package = "packages/rresult/rresult.0.6.0";
      };
      pname = "rresult";
      src = pkgs.fetchurl 
      {
        sha256 = "1k69a3gvrk7f2cshwjzvk7818f0bwxhacgd14wxy6d4gmrggci86";
        url = "http://erratique.ch/software/rresult/releases/rresult-0.6.0.tbz";
      };
      version = "0.6.0";
    };
    safepass = 
    {
      opamInputs = 
      {
        jbuilder = selection.jbuilder;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1cx0hv56bghc68ml697jp5af5phgf1y0mngr8mfj7msx9d61kl18";
        package = "packages/safepass/safepass.3.0";
      };
      pname = "safepass";
      src = pkgs.fetchurl 
      {
        sha256 = "0s2fp9xgall71qc4gb73gpw34nv5cyh9qzvmz4qqxzvkj04la4x2";
        url = "https://github.com/darioteixeira/ocaml-safepass/archive/v3.0.tar.gz";
      };
      version = "3.0";
    };
    seq = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1vm8mk6zm2q3fwnkprl6jib048zr4ysldw0bl74x6wwbxj0vx6k9";
        package = "packages/seq/seq.base";
      };
      pname = "seq";
      src = null;
      version = "base";
    };
    sexplib = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        num = selection.num;
        ocaml = selection.ocaml;
        parsexp = selection.parsexp;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:01i4kprhjs1m0hln9yq8ircb0h2rrphz2aqydgjwylq19fgag1jq";
        package = "packages/sexplib/sexplib.v0.12.0";
      };
      pname = "sexplib";
      src = pkgs.fetchurl 
      {
        sha256 = "0zw2b7nrq1rk4si6wjfwdjvijipr6wdh3y9lg1cddd0fsfvi2jy5";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.12/files/sexplib-v0.12.0.tar.gz";
      };
      version = "v0.12.0";
    };
    sexplib0 = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1wmx06rc4llv6g9lkl761v4by06l3wl3isz87sp7lfhmjkwakra8";
        package = "packages/sexplib0/sexplib0.v0.12.0";
      };
      pname = "sexplib0";
      src = pkgs.fetchurl 
      {
        sha256 = "1cz02zhhz420wawjxxc3f45azjxsah01d5zh0k58ycbqxi8g7lh0";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.12/files/sexplib0-v0.12.0.tar.gz";
      };
      version = "v0.12.0";
    };
    stdio = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:06ckzha5cr5xj615ng433ghmn242ixqhwdkwa9nf7ijcyikk9bfi";
        package = "packages/stdio/stdio.v0.12.0";
      };
      pname = "stdio";
      src = pkgs.fetchurl 
      {
        sha256 = "11dvr5gqza3raxgrby6b1c3mxy4zhvqrqvqa4hkyqqg0a8x8ffa0";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.12/files/stdio-v0.12.0.tar.gz";
      };
      version = "v0.12.0";
    };
    stdlib-shims = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0l6bfv426xb77qfiv880yy8dcscb2hi5703n9dj32fa3mlxnbg42";
        package = "packages/stdlib-shims/stdlib-shims.0.1.0";
      };
      pname = "stdlib-shims";
      src = pkgs.fetchurl 
      {
        sha256 = "1jv6yb47f66239m7hsz7zzw3i48mjpbvfgpszws48apqx63wjwsk";
        url = "https://github.com/ocaml/stdlib-shims/releases/download/0.1.0/stdlib-shims-0.1.0.tbz";
      };
      version = "0.1.0";
    };
    stringext = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        qtest = selection.qtest or null;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:15m8a67mps6y22mm5sxpw9b0lldfcmsxim7b331d4qv3l86118gs";
        package = "packages/stringext/stringext.1.6.0";
      };
      pname = "stringext";
      src = pkgs.fetchurl 
      {
        sha256 = "1sh6nafi3i9773j5mlwwz3kxfzdjzsfqj2qibxhigawy5vazahfv";
        url = "https://github.com/rgrinberg/stringext/releases/download/1.6.0/stringext-1.6.0.tbz";
      };
      version = "1.6.0";
    };
    tcpip = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        configurator = selection.configurator;
        cstruct = selection.cstruct;
        cstruct-lwt = selection.cstruct-lwt;
        duration = selection.duration;
        fmt = selection.fmt;
        io-page-unix = selection.io-page-unix;
        ipaddr = selection.ipaddr;
        jbuilder = selection.jbuilder;
        logs = selection.logs;
        lru = selection.lru;
        lwt = selection.lwt;
        macaddr = selection.macaddr;
        mirage-clock = selection.mirage-clock;
        mirage-clock-lwt = selection.mirage-clock-lwt;
        mirage-clock-unix = selection.mirage-clock-unix or null;
        mirage-flow = selection.mirage-flow or null;
        mirage-net = selection.mirage-net;
        mirage-net-lwt = selection.mirage-net-lwt;
        mirage-profile = selection.mirage-profile;
        mirage-protocols = selection.mirage-protocols;
        mirage-protocols-lwt = selection.mirage-protocols-lwt;
        mirage-random = selection.mirage-random;
        mirage-random-test = selection.mirage-random-test or null;
        mirage-stack-lwt = selection.mirage-stack-lwt;
        mirage-time-lwt = selection.mirage-time-lwt;
        mirage-vnetif = selection.mirage-vnetif or null;
        mirage-xen-ocaml = selection.mirage-xen-ocaml or null;
        ocaml = selection.ocaml;
        pcap-format = selection.pcap-format or null;
        randomconv = selection.randomconv;
        rresult = selection.rresult;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:02cg4lc49c8j88vn5zyy6lf9fn3i78ikng0ga1d6w4f4hww4anv5";
        package = "packages/tcpip/tcpip.3.6.0";
      };
      pname = "tcpip";
      src = pkgs.fetchurl 
      {
        sha256 = "1np5w59v2f7r02032pl8xmn4465857lmv7dmd9rlgzbx8x7xk3l6";
        url = "https://github.com/mirage/mirage-tcpip/releases/download/v3.6.0/tcpip-v3.6.0.tbz";
      };
      version = "3.6.0";
    };
    tls = 
    {
      opamInputs = 
      {
        astring = selection.astring or null;
        cstruct = selection.cstruct;
        cstruct-unix = selection.cstruct-unix or null;
        lwt = selection.lwt or null;
        mirage-clock = selection.mirage-clock or null;
        mirage-flow-lwt = selection.mirage-flow-lwt or null;
        mirage-kv-lwt = selection.mirage-kv-lwt or null;
        nocrypto = selection.nocrypto;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        ounit = selection.ounit or null;
        ppx_cstruct = selection.ppx_cstruct;
        ppx_deriving = selection.ppx_deriving;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        ptime = selection.ptime or null;
        result = selection.result;
        sexplib = selection.sexplib;
        topkg = selection.topkg;
        x509 = selection.x509;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:182h5j8m3mr4m99qbnr8zg74f9d2ilji1qyj28w00b2b3mc40k3w";
        package = "packages/tls/tls.0.9.3";
      };
      pname = "tls";
      src = pkgs.fetchurl 
      {
        sha256 = "15ry911rljx69yp94njgy3z428gp5n6kc5wacwaabvwzr3vgppa6";
        url = "https://github.com/mirleft/ocaml-tls/releases/download/0.9.3/tls-0.9.3.tbz";
      };
      version = "0.9.3";
    };
    topkg = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0xwbkf7mwwh10s3y2v6badjzcsjz7vzx22rc37dvfd77vgw03vdg";
        package = "packages/topkg/topkg.1.0.1";
      };
      pname = "topkg";
      src = pkgs.fetchurl 
      {
        sha256 = "18ysdrd665mhvzqp3s86kymkd1vl6qm7kakzda1h6mr4mnkawi00";
        url = "http://erratique.ch/software/topkg/releases/topkg-1.0.1.tbz";
      };
      version = "1.0.1";
    };
    tyxml = 
    {
      opamInputs = 
      {
        alcotest = selection.alcotest or null;
        dune = selection.dune;
        ocaml = selection.ocaml;
        re = selection.re;
        seq = selection.seq;
        uutf = selection.uutf;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:103mwkp71agz9qww8a1q99hdl3zs6gkjiv8sbhrj70plcdricvw7";
        package = "packages/tyxml/tyxml.4.3.0";
      };
      pname = "tyxml";
      src = pkgs.fetchurl 
      {
        sha256 = "1hxzppfvsdls2y8qiwvz31hmffzh2hgglf01am1vzf2f31mxf6vf";
        url = "https://github.com/ocsigen/tyxml/releases/download/4.3.0/tyxml-4.3.0.tbz";
      };
      version = "4.3.0";
    };
    uchar = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:17sfpyj5a1z3knnjvnfa5vql6cj2x9pzgzk8w4jrvd2zii2bwpcl";
        package = "packages/uchar/uchar.0.0.2";
      };
      pname = "uchar";
      src = pkgs.fetchurl 
      {
        sha256 = "1w2saw7zanf9m9ffvz2lvcxvlm118pws2x1wym526xmydhqpyfa7";
        url = "https://github.com/ocaml/uchar/releases/download/v0.0.2/uchar-0.0.2.tbz";
      };
      version = "0.0.2";
    };
    uri = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        re = selection.re;
        sexplib0 = selection.sexplib0;
        stringext = selection.stringext;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:180zwb3xrn5yi38xg981v1y48n7v1lbjcr9zp2cmmp794yj7wwa5";
        package = "packages/uri/uri.2.2.1";
      };
      pname = "uri";
      src = pkgs.fetchurl 
      {
        sha256 = "0szm7gndlxr3jvb59sswbirqfyygy9syg1ayysri344vmvdqwd7n";
        url = "https://github.com/mirage/ocaml-uri/releases/download/v2.2.1/uri-v2.2.1.tbz";
      };
      version = "2.2.1";
    };
    uutf = 
    {
      opamInputs = 
      {
        cmdliner = selection.cmdliner or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
        uchar = selection.uchar;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1j4hkk196lg1dsnf6jb1n8y3na606lkfb5vlr0gjb53qc7pdh6cy";
        package = "packages/uutf/uutf.1.0.2";
      };
      pname = "uutf";
      src = pkgs.fetchurl 
      {
        sha256 = "1nx1rly3qj23jzn9yk3x6fwqimcxjd84kv5859vvhdg56psq26p6";
        url = "http://erratique.ch/software/uutf/releases/uutf-1.0.2.tbz";
      };
      version = "1.0.2";
    };
    vdoml = 
    {
      opamInputs = 
      {
        conf-python-2-7 = selection.conf-python-2-7;
        dune = selection.dune;
        js_of_ocaml = selection.js_of_ocaml;
        js_of_ocaml-lwt = selection.js_of_ocaml-lwt;
        js_of_ocaml-ppx = selection.js_of_ocaml-ppx;
        logs = selection.logs;
        lwt = selection.lwt;
        lwt_ppx = selection.lwt_ppx;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
        odoc = selection.odoc;
        ppx_assert = selection.ppx_assert or null;
        ppx_inline_test = selection.ppx_inline_test or null;
        sexplib = selection.sexplib or null;
      };
      opamSrc = "vdoml.opam";
      pname = "vdoml";
      src = self.directSrc "vdoml";
      version = "development";
    };
    x509 = 
    {
      opamInputs = 
      {
        asn1-combinators = selection.asn1-combinators;
        astring = selection.astring;
        cstruct = selection.cstruct;
        cstruct-unix = selection.cstruct-unix or null;
        nocrypto = selection.nocrypto;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        ounit = selection.ounit or null;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        ptime = selection.ptime;
        result = selection.result;
        sexplib = selection.sexplib;
        topkg = selection.topkg;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:1mzvgqsqx5apw7kd3wb1p5a9viip1373m78apw4fc7qywyqy8q53";
        package = "packages/x509/x509.0.6.2";
      };
      pname = "x509";
      src = pkgs.fetchurl 
      {
        sha256 = "1s8zis89rz5mffvk1nzbfmx5z1x4ifayawz5y22ivrhsak8rz71s";
        url = "https://github.com/mirleft/ocaml-x509/releases/download/0.6.2/x509-0.6.2.tbz";
      };
      version = "0.6.2";
    };
    yojson = 
    {
      opamInputs = 
      {
        biniou = selection.biniou;
        cppo = selection.cppo;
        dune = selection.dune;
        easy-format = selection.easy-format;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:0w79z13cfm7rma867jcqpczsjdl7sb1h54bdx4ma31639jyzdscq";
        package = "packages/yojson/yojson.1.5.0";
      };
      pname = "yojson";
      src = pkgs.fetchurl 
      {
        sha256 = "0cwb1kbpf98imsbkaa5km0a34gbmapi35s7a8rjp7gfyzrrgk83h";
        url = "https://github.com/ocaml-community/yojson/releases/download/1.5.0/yojson-1.5.0.tbz";
      };
      version = "1.5.0";
    };
    zarith = 
    {
      opamInputs = 
      {
        conf-gmp = selection.conf-gmp;
        conf-perl = selection.conf-perl;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:10y477fjig8d6chpmgdmpv683h78kshkmw3dmhi6sjid4gk6pc52";
        package = "packages/zarith/zarith.1.9.1";
      };
      pname = "zarith";
      src = pkgs.fetchurl 
      {
        sha256 = "0pfa271476dic5pvn6kxz3dfswxs6kqm2cxmhdx5xq2ayca05gj9";
        url = "https://github.com/ocaml/Zarith/archive/release-1.9.1.tar.gz";
      };
      version = "1.9.1";
    };
    zed = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        camomile = selection.camomile;
        charInfo_width = selection.charInfo_width;
        dune = selection.dune;
        ocaml = selection.ocaml;
        react = selection.react;
      };
      opamSrc = repoPath repo 
      {
        hash = "sha256:01hv2z69nc7wng2w60gffg9830n58f1j54vhj0plri98q5dilw13";
        package = "packages/zed/zed.2.0.3";
      };
      pname = "zed";
      src = pkgs.fetchurl 
      {
        sha256 = "0f4miyxa5sb8xs3nzzvl3spzl6bpnzd1sgc4bcjgh6gsws4avql3";
        url = "https://github.com/ocaml-community/zed/releases/download/2.0.3/zed-2.0.3.tbz";
      };
      version = "2.0.3";
    };
  };
}

